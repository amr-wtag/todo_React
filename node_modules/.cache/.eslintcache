[{"/Users/mridha/Todo_in_React/todo/src/reportWebVitals.js":"1","/Users/mridha/Todo_in_React/todo/src/index.jsx":"2","/Users/mridha/Todo_in_React/todo/src/App.jsx":"3","/Users/mridha/Todo_in_React/todo/src/config/apiClient.js":"4","/Users/mridha/Todo_in_React/todo/src/components/Button/Button.jsx":"5","/Users/mridha/Todo_in_React/todo/src/components/Header/Header.jsx":"6","/Users/mridha/Todo_in_React/todo/src/components/Icon/Icon.jsx":"7","/Users/mridha/Todo_in_React/todo/src/components/Todos/Todos.jsx":"8","/Users/mridha/Todo_in_React/todo/src/components/Tag/Tag.jsx":"9","/Users/mridha/Todo_in_React/todo/src/components/TextArea/TextArea.jsx":"10","/Users/mridha/Todo_in_React/todo/src/components/Todo/Todo.jsx":"11","/Users/mridha/Todo_in_React/todo/src/components/Button/index.js":"12","/Users/mridha/Todo_in_React/todo/src/components/TextArea/index.js":"13","/Users/mridha/Todo_in_React/todo/src/components/Icon/index.js":"14","/Users/mridha/Todo_in_React/todo/src/components/Tag/index.js":"15","/Users/mridha/Todo_in_React/todo/src/components/Header/index.js":"16","/Users/mridha/Todo_in_React/todo/src/components/Todos/index.js":"17","/Users/mridha/Todo_in_React/todo/src/components/Todo/index.js":"18","/Users/mridha/Todo_in_React/todo/src/components/Toaster/index.js":"19","/Users/mridha/Todo_in_React/todo/src/components/Toaster/Toaster.jsx":"20","/Users/mridha/Todo_in_React/todo/src/components/Input/index.js":"21","/Users/mridha/Todo_in_React/todo/src/components/Input/Input.jsx":"22"},{"size":362,"mtime":1649814271285,"results":"23","hashOfConfig":"24"},{"size":220,"mtime":1651123210966,"results":"25","hashOfConfig":"26"},{"size":7599,"mtime":1652606586180,"results":"27","hashOfConfig":"26"},{"size":356,"mtime":1650953779502,"results":"28","hashOfConfig":"26"},{"size":248,"mtime":1652239775747,"results":"29","hashOfConfig":"26"},{"size":1507,"mtime":1652602193266,"results":"30","hashOfConfig":"26"},{"size":1705,"mtime":1651126809880,"results":"31","hashOfConfig":"26"},{"size":6478,"mtime":1652600992889,"results":"32","hashOfConfig":"26"},{"size":179,"mtime":1652333783548,"results":"33","hashOfConfig":"26"},{"size":410,"mtime":1650771678641,"results":"34","hashOfConfig":"26"},{"size":5512,"mtime":1652598145762,"results":"35","hashOfConfig":"26"},{"size":81,"mtime":1651125884545,"results":"36","hashOfConfig":"26"},{"size":89,"mtime":1651134259743,"results":"37","hashOfConfig":"26"},{"size":73,"mtime":1651125973606,"results":"38","hashOfConfig":"26"},{"size":69,"mtime":1651127065433,"results":"39","hashOfConfig":"26"},{"size":77,"mtime":1651980046106,"results":"40","hashOfConfig":"26"},{"size":73,"mtime":1651127021050,"results":"41","hashOfConfig":"26"},{"size":69,"mtime":1651127030447,"results":"42","hashOfConfig":"26"},{"size":85,"mtime":1651127345348,"results":"43","hashOfConfig":"26"},{"size":125,"mtime":1651127359614,"results":"44","hashOfConfig":"26"},{"size":77,"mtime":1651980126145,"results":"45","hashOfConfig":"26"},{"size":252,"mtime":1652244524989,"results":"46","hashOfConfig":"26"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qavcix",{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"md8gdt",{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"/Users/mridha/Todo_in_React/todo/src/reportWebVitals.js",[],[],"/Users/mridha/Todo_in_React/todo/src/index.jsx",[],[],[],"/Users/mridha/Todo_in_React/todo/src/App.jsx",["115","116"],["117","118"],"/* eslint-disable array-callback-return */\n\nimport \"./App.css\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport React, { useState, useEffect } from \"react\";\nimport Todos from \"./components/Todos\";\nimport Header from \"./components/Header\";\nimport Icon from \"./components/Icon\";\nimport Tag from \"./components/Tag\";\nimport Toaster from \"./components/Toaster\";\nimport { supabase } from \"./config/apiClient\";\n\nexport const AppContext = React.createContext();\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n\n  const [toasts, setToasts] = useState([]);\n  const [showEmpty, setShowEmpty] = useState(true);\n  const [showBigSpinner, setShowBigSpinner] = useState(false);\n  const [searchShow, setSearchShow] = useState(false);\n  const [flag, setFlag] = useState(\"all\");\n  const [search, setSearch] = useState(\"\");\n  const [dataCount, setDataCount] = useState(0);\n  const [splash, setSplash] = useState(true);\n  const [flagChange, setFlagChange] = useState(false);\n  const [prevFlag, setPrevFlag] = useState(\"all\");\n  const [progress, setProgress] = useState(true);\n  //flag\n  const flagHandler = (e) => {\n    if (flag !== e) {\n      setFlagChange(true);\n      setPrevFlag(flag);\n      setFlag(e);\n    }\n  };\n  const removeCompleteFromIncomplete = (id) => {\n    const filtertodos = todos.filter((todo) => todo.id !== id);\n    setTodos(filtertodos);\n  };\n  //search value\n  const searchvalue = (e) => {\n    if (e.length > 2) {\n      setShowBigSpinner(true);\n      setSearch(e);\n\n      setShowBigSpinner(false);\n    }\n  };\n\n  //search toggle\n  const SearchToggle = () => {\n    if (search !== \"\") {\n      setShowBigSpinner(true);\n      setSearch(\"\");\n      setShowBigSpinner(false);\n    }\n    setSearchShow(!searchShow);\n  };\n\n  // useEffect\n  useEffect(() => {\n    const fetchData = async (e) => {\n      setShowBigSpinner(true);\n      let newToast;\n      if (flag === \"all\") {\n        const { data, error } = await supabase\n          .from(\"ReactTodo\")\n          .select()\n          .ilike(\"name\", `%${search}%`)\n          .order(\"id\", { ascending: false });\n\n        if (error) {\n          if (flagChange) {\n            setFlag(prevFlag);\n          }\n          if (splash) setSplash(false);\n        } else {\n          setTodos([]);\n          setTodos(data);\n          if (splash) {\n            setDataCount(data.length);\n            setTimeout(() => {\n              setSplash(false);\n            }, 500);\n          }\n        }\n        newToast = {\n          id: uuidv4(),\n          type: error ? \"error\" : \"success\",\n          message: error ? error.message : \"All Data fetched\",\n        };\n        setToasts([...toasts, newToast]);\n      } else if (flag === \"incomplete\") {\n        const { data, error } = await supabase\n          .from(\"ReactTodo\")\n          .select()\n          .ilike(\"name\", `%${search}%`)\n          .is(\"completed_on\", null)\n          .order(\"id\", { ascending: false });\n\n        if (error === null) {\n          setTodos([]);\n          setTodos(data);\n        } else {\n          setFlag(prevFlag);\n          setFlagChange(false);\n        }\n\n        newToast = {\n          id: uuidv4(),\n          type: error ? \"error\" : \"success\",\n          message: error ? error.message : \"Incompleted Data fetched\",\n        };\n\n        setToasts([...toasts, newToast]);\n      } else {\n        const { data, error } = await supabase\n          .from(\"ReactTodo\")\n          .select()\n          .ilike(\"name\", `%${search}%`)\n          .order(\"id\", { ascending: false })\n          .not(\"completed_on\", \"is\", null);\n        if (error === null) {\n          setTodos([]);\n          setTodos(data);\n        } else {\n          setFlag(prevFlag);\n          setFlagChange(false);\n        }\n\n        newToast = {\n          id: uuidv4(),\n          type: error ? \"error\" : \"success\",\n          message: error ? error.message : \"Completed Data fetched\",\n        };\n        setToasts([...toasts, newToast]);\n      }\n\n      setShowBigSpinner(false);\n    };\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [flag, search]);\n  //Toast useeffect\n  useEffect(() => {\n    if (toasts.length > 0) {\n      setTimeout(() => {\n        let allToast = [...toasts];\n        allToast.shift();\n        setToasts(allToast);\n      }, 500);\n    }\n  }, [toasts]);\n  const handleRemoveTodo = async (id) => {\n    let newToast;\n    // eslint-disable-next-line\n    const { data, error } = await supabase\n      .from(\"ReactTodo\")\n      .delete()\n      .match({ id: id });\n\n    if (error === null) {\n      setDataCount(dataCount - 1);\n      removeCompleteFromIncomplete(id);\n      if (dataCount === 0) {\n        setSearchShow(false);\n        setFlag(\"all\");\n      }\n    }\n    newToast = {\n      id: uuidv4(),\n      type: error ? \"error\" : \"success\",\n      message: error ? error.message : \"Task Deleted\",\n    };\n    setToasts([...toasts, newToast]);\n  };\n\n  return (\n    <div className=\"App\">\n      {splash && (\n        <div>\n          <div className=\"container\">\n            {\" \"}\n            <div className=\"progress-bar\"></div>\n          </div>\n          <div className=\"splash faddingOut  \">\n            <div className=\"splashLogo\">\n              <div className=\"splashIconLogo\">\n                <Icon src=\"SplashLeaf\" />\n              </div>\n              <div>\n                <Icon src=\"SplashTitle\" />\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      {!splash && (\n        <div>\n          <AppContext.Provider\n            value={{\n              SearchToggle,\n              searchShow,\n              searchvalue,\n              dataCount,\n              showBigSpinner,\n            }}\n          >\n            <Header />\n          </AppContext.Provider>\n          <div className=\"overToaster\">\n            <div className=\"toaster\">\n              {toasts.length > 0 &&\n                toasts.map((toast) => (\n                  <Toaster\n                    key={toast.id}\n                    className={`faddingtoastOut toast toast--visible toast--${toast.type}`}\n                  >\n                    {toast.type === \"success\" && <Icon src=\"Check\" />}{\" \"}\n                    {toast.message}\n                  </Toaster>\n                ))}\n            </div>\n          </div>\n          <div>\n            <AppContext.Provider\n              value={{\n                todos,\n                flag,\n                flagHandler,\n                toasts,\n                search,\n                setToasts,\n                dataCount,\n                setDataCount,\n                setShowEmpty,\n                showBigSpinner,\n                removeCompleteFromIncomplete,\n                handleRemoveTodo,\n              }}\n            >\n              <Todos />\n            </AppContext.Provider>\n          </div>\n\n          <div>\n            {showBigSpinner && (\n              <Icon className=\"spinning rotateFull\" src=\"Spin\" />\n            )}\n          </div>\n\n          {showEmpty && dataCount === 0 && !showBigSpinner && (\n            <div className={`emptyScreenOver `}>\n              <Icon src=\"EmptyScreen\" className=\"emptyScreen\" />\n              <Tag className=\"tag-pleaseAdd\">\n                You didn't add any task. Please, add one.\n              </Tag>\n            </div>\n          )}\n          {showEmpty && dataCount > 0 && todos.length === 0 && !showBigSpinner && (\n            <div className={`emptyScreenOver `}>\n              <Icon src=\"EmptyScreen\" className=\"emptyScreen\" />\n              <Tag className=\"tag-pleaseAdd\"> There is no data for {flag}</Tag>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","/Users/mridha/Todo_in_React/todo/src/config/apiClient.js",[],[],"/Users/mridha/Todo_in_React/todo/src/components/Button/Button.jsx",[],[],"/Users/mridha/Todo_in_React/todo/src/components/Header/Header.jsx",[],[],"/Users/mridha/Todo_in_React/todo/src/components/Icon/Icon.jsx",[],[],"/Users/mridha/Todo_in_React/todo/src/components/Todos/Todos.jsx",[],[],"/Users/mridha/Todo_in_React/todo/src/components/Tag/Tag.jsx",[],[],"/Users/mridha/Todo_in_React/todo/src/components/TextArea/TextArea.jsx",[],[],"/Users/mridha/Todo_in_React/todo/src/components/Todo/Todo.jsx",[],[],"/Users/mridha/Todo_in_React/todo/src/components/Button/index.js",[],[],"/Users/mridha/Todo_in_React/todo/src/components/TextArea/index.js",[],[],"/Users/mridha/Todo_in_React/todo/src/components/Icon/index.js",[],[],"/Users/mridha/Todo_in_React/todo/src/components/Tag/index.js",[],[],"/Users/mridha/Todo_in_React/todo/src/components/Header/index.js",[],[],"/Users/mridha/Todo_in_React/todo/src/components/Todos/index.js",[],[],"/Users/mridha/Todo_in_React/todo/src/components/Todo/index.js",[],[],"/Users/mridha/Todo_in_React/todo/src/components/Toaster/index.js",[],[],"/Users/mridha/Todo_in_React/todo/src/components/Toaster/Toaster.jsx",[],[],"/Users/mridha/Todo_in_React/todo/src/components/Input/index.js",[],[],"/Users/mridha/Todo_in_React/todo/src/components/Input/Input.jsx",[],[],{"ruleId":"119","severity":1,"message":"120","line":28,"column":10,"nodeType":"121","messageId":"122","endLine":28,"endColumn":18},{"ruleId":"119","severity":1,"message":"123","line":28,"column":20,"nodeType":"121","messageId":"122","endLine":28,"endColumn":31},{"ruleId":"124","severity":1,"message":"125","line":144,"column":6,"nodeType":"126","endLine":144,"endColumn":20,"suggestions":"127","suppressions":"128"},{"ruleId":"119","severity":1,"message":"129","line":158,"column":13,"nodeType":"121","messageId":"122","endLine":158,"endColumn":17,"suppressions":"130"},"no-unused-vars","'progress' is assigned a value but never used.","Identifier","unusedVar","'setProgress' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'flagChange', 'prevFlag', 'splash', and 'toasts'. Either include them or remove the dependency array. You can also do a functional update 'setToasts(t => ...)' if you only need 'toasts' in the 'setToasts' call.","ArrayExpression",["131"],["132"],"'data' is assigned a value but never used.",["133"],{"desc":"134","fix":"135"},{"kind":"136","justification":"137"},{"kind":"136","justification":"137"},"Update the dependencies array to be: [flag, flagChange, prevFlag, search, splash, toasts]",{"range":"138","text":"139"},"directive","",[4025,4039],"[flag, flagChange, prevFlag, search, splash, toasts]"]