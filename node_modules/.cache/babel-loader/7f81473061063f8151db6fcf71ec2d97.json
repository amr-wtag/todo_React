{"ast":null,"code":"var _jsxFileName = \"/Users/mridha/Todo_in_React/todo/src/Todo.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { TextArea } from \"./components/TextArea\";\nimport { Icon } from \"./components/Icon\";\nimport { Tag } from \"./components/Tag\";\nimport { Button } from \"./components/Button\";\nimport { format } from \"date-fns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Todo = _ref => {\n  _s();\n\n  let {\n    todo,\n    setTodos,\n    onRemoveItem,\n    toasts,\n    setToasts\n  } = _ref;\n  const [newName, setNewName] = useState(todo.name);\n  const [showEdit, setShowEdit] = useState(false);\n  const [showLoading, setShowLoading] = useState(false);\n\n  const editToggle = e => {\n    setShowEdit(!showEdit);\n  };\n\n  const edit = e => {\n    setNewName(e.target.value);\n  }; // Delete task\n\n\n  const deletetodo = id => {\n    const index = allTodos.findIndex(todo => todo.id === id);\n    let tempTodos = [...allTodos];\n    tempTodos[index].isLoading = true;\n    setTodos(tempTodos);\n    setTimeout(() => {\n      setTodos(allTodos.filter(todo => todo.isLoading !== true)); // toaster\n\n      let newToast = {\n        id: uuidv4(),\n        type: \"success\",\n        message: \"Task Deleted\"\n      };\n      let allToast = [...toasts];\n      allToast.push(newToast);\n      setToasts(allToast);\n    }, 500);\n  }; // on Complete\n\n\n  const completeHandler = id => {\n    const index = allTodos.findIndex(todo => todo.id === id);\n    let tempTodos = [...allTodos];\n    tempTodos[index].isLoading = true;\n    setTodos(tempTodos);\n    setTimeout(() => {\n      tempTodos = [...allTodos];\n      tempTodos[index].completed_on = new Date(Date.now()).toLocaleDateString();\n      tempTodos[index].isLoading = false;\n      setTodos(tempTodos);\n      let newToast = {\n        id: uuidv4(),\n        type: \"success\",\n        message: \"Task Complted\"\n      };\n      let allToast = [...toasts];\n      allToast.push(newToast);\n      setToasts(allToast);\n    }, 1000);\n  };\n\n  const editValue = id => {\n    setNewName(newName.trim().replace(/\\s+/g, \" \"));\n    const index = allTodos.findIndex(todo => todo.id === id);\n\n    if (newName.trim().replace(/\\s+/g, \" \").length > 2 && allTodos[index].name !== newName.trim().replace(/\\s+/g, \" \")) {\n      setShowLoading(true);\n      setTimeout(() => {\n        let tempTodos = [...allTodos];\n        tempTodos[index].name = newName;\n        setTodos(tempTodos);\n        editToggle(id);\n        setShowLoading(false);\n        let newToast = {\n          id: uuidv4(),\n          type: \"success\",\n          message: \"Task Edited\"\n        };\n        let allToast = [...toasts];\n        allToast.push(newToast);\n        setToasts(allToast);\n      }, 1000);\n    } else {\n      setNewName(allTodos[index].name);\n      editToggle(id);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"todo\",\n    className: \"todo\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [showEdit === true ? /*#__PURE__*/_jsxDEV(TextArea, {\n        id: \"editName\",\n        className: `editName ${(todo.isLoading || showLoading) && \"blur\"}`,\n        value: newName,\n        onChange: edit,\n        readOnly: showLoading,\n        autoFocus: true,\n        onFocus: e => {\n          var val = e.target.value;\n          e.target.value = \"\";\n          e.target.value = val;\n        },\n        onKeyPress: e => {\n          if (e.key === \"Enter\") {\n            e.preventDefault();\n            editValue(todo.id);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Tag, {\n          id: \"showName\",\n          className: `${todo.completed_on && \"completed\"} ${(todo.isLoading || showLoading) && \"blur\"}`,\n          children: todo.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), !showEdit && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `createdAt ${(todo.isLoading || showLoading) && \"blur\"}`,\n        children: [\"Created At: \", format(new Date(todo.created_at), \"dd.MM.yy\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `boxedButtonCompletedOn ${(todo.isLoading || showLoading) && \"blur\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"allBoxedButon\",\n        children: [showEdit && /*#__PURE__*/_jsxDEV(Button, {\n          className: \"saveButton btn\",\n          onClick: editToggle,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), !todo.completed_on && /*#__PURE__*/_jsxDEV(Button, {\n          className: \"boxedButton \",\n          onClick: () => {\n            completeHandler(todo.id);\n          },\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            src: \"Tick\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), !todo.completed_on && !showEdit && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: editToggle,\n          className: \"boxedButton \",\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            src: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"boxedButton\",\n          onClick: () => deletetodo(todo.id),\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            src: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), todo.completed_on && /*#__PURE__*/_jsxDEV(Tag, {\n        className: \"completedOn\",\n        children: [\"Completed in\", \" \", Math.ceil(Math.abs(Date.parse(todo.completed_on) - Date.parse(todo.created_at)) / (1000 * 60 * 60 * 24)), \" \", \"days\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), (todo.isLoading || showLoading) && /*#__PURE__*/_jsxDEV(Icon, {\n      className: \"spinning rotateDiv\",\n      src: \"Spin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Todo, \"0MXxhRpQq0tD+DeuLQRhBlyxOzM=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/mridha/Todo_in_React/todo/src/Todo.jsx"],"names":["useState","v4","uuidv4","TextArea","Icon","Tag","Button","format","Todo","todo","setTodos","onRemoveItem","toasts","setToasts","newName","setNewName","name","showEdit","setShowEdit","showLoading","setShowLoading","editToggle","e","edit","target","value","deletetodo","id","index","allTodos","findIndex","tempTodos","isLoading","setTimeout","filter","newToast","type","message","allToast","push","completeHandler","completed_on","Date","now","toLocaleDateString","editValue","trim","replace","length","val","key","preventDefault","created_at","Math","ceil","abs","parse"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { TextArea } from \"./components/TextArea\";\nimport { Icon } from \"./components/Icon\";\nimport { Tag } from \"./components/Tag\";\nimport { Button } from \"./components/Button\";\nimport { format } from \"date-fns\";\nconst Todo = ({\n  todo,\n\n  setTodos,\n  onRemoveItem,\n  toasts,\n  setToasts,\n}) => {\n  const [newName, setNewName] = useState(todo.name);\n  const [showEdit, setShowEdit] = useState(false);\n  const [showLoading, setShowLoading] = useState(false);\n  const editToggle = (e) => {\n    setShowEdit(!showEdit);\n  };\n  const edit = (e) => {\n    setNewName(e.target.value);\n  };\n  // Delete task\n  const deletetodo = (id) => {\n    const index = allTodos.findIndex((todo) => todo.id === id);\n    let tempTodos = [...allTodos];\n    tempTodos[index].isLoading = true;\n    setTodos(tempTodos);\n\n    setTimeout(() => {\n      setTodos(allTodos.filter((todo) => todo.isLoading !== true));\n      // toaster\n      let newToast = {\n        id: uuidv4(),\n        type: \"success\",\n        message: \"Task Deleted\",\n      };\n      let allToast = [...toasts];\n      allToast.push(newToast);\n      setToasts(allToast);\n    }, 500);\n  };\n  // on Complete\n\n  const completeHandler = (id) => {\n    const index = allTodos.findIndex((todo) => todo.id === id);\n    let tempTodos = [...allTodos];\n    tempTodos[index].isLoading = true;\n    setTodos(tempTodos);\n    setTimeout(() => {\n      tempTodos = [...allTodos];\n      tempTodos[index].completed_on = new Date(Date.now()).toLocaleDateString();\n      tempTodos[index].isLoading = false;\n      setTodos(tempTodos);\n      let newToast = {\n        id: uuidv4(),\n        type: \"success\",\n        message: \"Task Complted\",\n      };\n      let allToast = [...toasts];\n      allToast.push(newToast);\n      setToasts(allToast);\n    }, 1000);\n  };\n\n  const editValue = (id) => {\n    setNewName(newName.trim().replace(/\\s+/g, \" \"));\n    const index = allTodos.findIndex((todo) => todo.id === id);\n    if (\n      newName.trim().replace(/\\s+/g, \" \").length > 2 &&\n      allTodos[index].name !== newName.trim().replace(/\\s+/g, \" \")\n    ) {\n      setShowLoading(true);\n      setTimeout(() => {\n        let tempTodos = [...allTodos];\n        tempTodos[index].name = newName;\n        setTodos(tempTodos);\n\n        editToggle(id);\n        setShowLoading(false);\n        let newToast = {\n          id: uuidv4(),\n          type: \"success\",\n          message: \"Task Edited\",\n        };\n        let allToast = [...toasts];\n        allToast.push(newToast);\n        setToasts(allToast);\n      }, 1000);\n    } else {\n      setNewName(allTodos[index].name);\n      editToggle(id);\n    }\n  };\n\n  return (\n    <div id=\"todo\" className=\"todo\">\n      <div>\n        {showEdit === true ? (\n          <TextArea\n            id=\"editName\"\n            className={`editName ${(todo.isLoading || showLoading) && \"blur\"}`}\n            value={newName}\n            onChange={edit}\n            readOnly={showLoading}\n            autoFocus\n            onFocus={(e) => {\n              var val = e.target.value;\n              e.target.value = \"\";\n              e.target.value = val;\n            }}\n            onKeyPress={(e) => {\n              if (e.key === \"Enter\") {\n                e.preventDefault();\n                editValue(todo.id);\n              }\n            }}\n          />\n        ) : (\n          <div>\n            <Tag\n              id=\"showName\"\n              className={`${todo.completed_on && \"completed\"} ${\n                (todo.isLoading || showLoading) && \"blur\"\n              }`}\n            >\n              {todo.name}\n            </Tag>\n          </div>\n        )}\n        {!showEdit && (\n          <div\n            className={`createdAt ${(todo.isLoading || showLoading) && \"blur\"}`}\n          >\n            Created At: {format(new Date(todo.created_at), \"dd.MM.yy\")}\n          </div>\n        )}\n      </div>\n      <div\n        className={`boxedButtonCompletedOn ${\n          (todo.isLoading || showLoading) && \"blur\"\n        }`}\n      >\n        <div className=\"allBoxedButon\">\n          {showEdit && (\n            <Button className=\"saveButton btn\" onClick={editToggle}>\n              Save\n            </Button>\n          )}\n          {!todo.completed_on && (\n            <Button\n              className=\"boxedButton \"\n              onClick={() => {\n                completeHandler(todo.id);\n              }}\n            >\n              <Icon src=\"Tick\" />\n            </Button>\n          )}\n          {!todo.completed_on && !showEdit && (\n            <Button onClick={editToggle} className=\"boxedButton \">\n              <Icon src=\"Edit\" />\n            </Button>\n          )}\n          <Button className=\"boxedButton\" onClick={() => deletetodo(todo.id)}>\n            <Icon src=\"Delete\" />\n          </Button>\n        </div>\n        {todo.completed_on && (\n          <Tag className=\"completedOn\">\n            Completed in{\" \"}\n            {Math.ceil(\n              Math.abs(\n                Date.parse(todo.completed_on) - Date.parse(todo.created_at),\n              ) /\n                (1000 * 60 * 60 * 24),\n            )}{\" \"}\n            days\n          </Tag>\n        )}\n      </div>\n\n      {(todo.isLoading || showLoading) && (\n        <Icon className=\"spinning rotateDiv\" src=\"Spin\" />\n      )}\n    </div>\n  );\n};\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}