{"ast":null,"code":"var _jsxFileName = \"/Users/mridha/Todo_in_React/todo/src/App.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable array-callback-return */\nimport \"./App.css\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport React, { useState, useEffect } from \"react\";\nimport Todos from \"./components/Todos/Todos\";\nimport Header from \"./components/Header/Header\";\nimport { Icon } from \"./components/Icon/Icon\";\nimport { Tag } from \"./components/Tag/Tag\";\nimport { Toaster } from \"./components/Toaster/Toaster\";\nimport { supabase } from \"./config/apiClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/React.createContext();\n\nfunction App() {\n  _s();\n\n  //splash useEffect\n\n  /* useEffect(() => {\n    setTimeout(() => {\n      setSplash(false);\n    }, 1000);\n  }, []); */\n  // useEffect\n  useEffect(() => {\n    const fetchData = async e => {\n      setShowBigSpinner(true);\n\n      if (flag === \"all\") {\n        const {\n          data\n        } = await supabase.from(\"ReactTodo\").select().ilike(\"name\", `%${search}%`).order(\"id\", {\n          ascending: false\n        });\n        setTodos([]); // setDataCount(data.length);\n\n        setTodos(data);\n\n        if (splash) {\n          setDataCount(data.length);\n          setSplash(false);\n        }\n      } else if (flag === \"incomplete\") {\n        const {\n          data\n        } = await supabase.from(\"ReactTodo\").select().ilike(\"name\", `%${search}%`).is(\"completed_on\", null).order(\"id\", {\n          ascending: false\n        });\n        setTodos([]);\n        setTodos(data);\n      } else {\n        const {\n          data\n        } = await supabase.from(\"ReactTodo\").select().ilike(\"name\", `%${search}%`).order(\"id\", {\n          ascending: false\n        }).not(\"completed_on\", \"is\", null);\n        setTodos([]);\n        setTodos(data);\n      }\n      /*  if (todos === null || todos.length === undefined) {\n        setFlag(\"all\");\n        setSearchShow(false);\n      } */\n      // console.log(todos.length);\n\n\n      setShowBigSpinner(false);\n    };\n\n    fetchData(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [flag, search]); //Toast useeffect\n\n  useEffect(() => {\n    if (toasts.length > 0) {\n      setTimeout(() => {\n        let allToast = [...toasts];\n        allToast.shift();\n        setToasts(allToast);\n      }, 500);\n    }\n  }, [toasts]);\n\n  const handleRemoveTodo = async id => {\n    try {\n      // eslint-disable-next-line\n      const {\n        data\n      } = await supabase.from(\"ReactTodo\").delete().match({\n        id: id\n      });\n      let newToast = {\n        id: uuidv4(),\n        type: \"success\",\n        message: \"Task Deleted\"\n      };\n      setDataCount(dataCount - 1);\n      setToasts([...toasts, newToast]);\n    } catch (error) {\n      let newToast = {\n        id: uuidv4(),\n        type: \"error\",\n        message: error\n      };\n      setToasts([...toasts, newToast]);\n    }\n\n    removeCompleteFromIncomplete(id);\n\n    if (dataCount === 1) {\n      setSearchShow(false);\n      setFlag(\"all\");\n    }\n  };\n\n  const removeCompleteFromIncomplete = id => {\n    const filtertodos = todos.filter(todo => todo.id !== id);\n    setTodos(filtertodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [splash && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"splash faddingOut\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"splashLogo\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"splashIconLogo\",\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            src: \"SplashLeaf\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            src: \"SplashTitle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this), !splash && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        SearchToggle: SearchToggle,\n        searchShow: searchShow,\n        searchvalue: searchvalue,\n        dataCount: dataCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overToaster\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toaster\",\n          children: toasts.length > 0 && toasts.map(toast => /*#__PURE__*/_jsxDEV(Toaster, {\n            className: `faddingOut toast toast--visible toast--${toast.type}`,\n            children: [toast.type === \"success\" && /*#__PURE__*/_jsxDEV(Icon, {\n              src: \"Check\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 50\n            }, this), \" \", toast.message]\n          }, toast.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${showBigSpinner && \"blur\"}`,\n        children: /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n          value: {\n            todos,\n            flag,\n            flagHandler,\n            toasts,\n            setToasts,\n            handleRemoveTodo,\n            dataCount,\n            setDataCount,\n            setShowEmpty,\n            removeCompleteFromIncomplete\n          },\n          children: /*#__PURE__*/_jsxDEV(Todos, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: showBigSpinner && /*#__PURE__*/_jsxDEV(Icon, {\n          className: \"spinning rotateFull\",\n          src: \"Spin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this), showEmpty && dataCount === 0 && !showBigSpinner && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `emptyScreenOver `,\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          src: \"EmptyScreen\",\n          className: \"emptyScreen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Tag, {\n          className: \"pleaseAdd\",\n          children: \"You didn't add any task. Please, add one.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }, this), showEmpty && dataCount > 0 && todos.length === 0 && !showBigSpinner && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `emptyScreenOver `,\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          src: \"EmptyScreen\",\n          className: \"emptyScreen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Tag, {\n          className: \"pleaseAdd\",\n          children: [\" There is no data for \", flag]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"3ubReDTFssvu4DHeldAg55cW/CI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mridha/Todo_in_React/todo/src/App.jsx"],"names":["v4","uuidv4","React","useState","useEffect","Todos","Header","Icon","Tag","Toaster","supabase","AppContext","createContext","App","fetchData","e","setShowBigSpinner","flag","data","from","select","ilike","search","order","ascending","setTodos","splash","setDataCount","length","setSplash","is","not","toasts","setTimeout","allToast","shift","setToasts","handleRemoveTodo","id","delete","match","newToast","type","message","dataCount","error","removeCompleteFromIncomplete","setSearchShow","setFlag","filtertodos","todos","filter","todo","SearchToggle","searchShow","searchvalue","map","toast","showBigSpinner","flagHandler","setShowEmpty","showEmpty"],"mappings":";;;AAAA;AAEA,OAAO,WAAP;AACA,SAASA,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,IAAT,QAAqB,wBAArB;AACA,SAASC,GAAT,QAAoB,sBAApB;AACA,SAASC,OAAT,QAAwB,8BAAxB;AACA,SAASC,QAAT,QAAyB,oBAAzB;;AACA,OAAO,MAAMC,UAAU,gBAAGT,KAAK,CAACU,aAAN,EAAnB;;AACP,SAASC,GAAT,GAAe;AAAA;;AACb;;AACA;AACF;AACA;AACA;AACA;AACE;AACAT,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,SAAS,GAAG,MAAOC,CAAP,IAAa;AAC7BC,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;;AACA,UAAIC,IAAI,KAAK,KAAb,EAAoB;AAClB,cAAM;AAAEC,UAAAA;AAAF,YAAW,MAAMR,QAAQ,CAC5BS,IADoB,CACf,WADe,EAEpBC,MAFoB,GAGpBC,KAHoB,CAGd,MAHc,EAGL,IAAGC,MAAO,GAHL,EAIpBC,KAJoB,CAId,IAJc,EAIR;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAJQ,CAAvB;AAKAC,QAAAA,QAAQ,CAAC,EAAD,CAAR,CANkB,CAOlB;;AACAA,QAAAA,QAAQ,CAACP,IAAD,CAAR;;AACA,YAAIQ,MAAJ,EAAY;AACVC,UAAAA,YAAY,CAACT,IAAI,CAACU,MAAN,CAAZ;AACAC,UAAAA,SAAS,CAAC,KAAD,CAAT;AACD;AACF,OAbD,MAaO,IAAIZ,IAAI,KAAK,YAAb,EAA2B;AAChC,cAAM;AAAEC,UAAAA;AAAF,YAAW,MAAMR,QAAQ,CAC5BS,IADoB,CACf,WADe,EAEpBC,MAFoB,GAGpBC,KAHoB,CAGd,MAHc,EAGL,IAAGC,MAAO,GAHL,EAIpBQ,EAJoB,CAIjB,cAJiB,EAID,IAJC,EAKpBP,KALoB,CAKd,IALc,EAKR;AAAEC,UAAAA,SAAS,EAAE;AAAb,SALQ,CAAvB;AAOAC,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACAA,QAAAA,QAAQ,CAACP,IAAD,CAAR;AACD,OAVM,MAUA;AACL,cAAM;AAAEA,UAAAA;AAAF,YAAW,MAAMR,QAAQ,CAC5BS,IADoB,CACf,WADe,EAEpBC,MAFoB,GAGpBC,KAHoB,CAGd,MAHc,EAGL,IAAGC,MAAO,GAHL,EAIpBC,KAJoB,CAId,IAJc,EAIR;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAJQ,EAKpBO,GALoB,CAKhB,cALgB,EAKA,IALA,EAKM,IALN,CAAvB;AAOAN,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACAA,QAAAA,QAAQ,CAACP,IAAD,CAAR;AACD;AACD;AACN;AACA;AACA;AACM;;;AACAF,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,KA1CD;;AA2CAF,IAAAA,SAAS,GA5CK,CA6Cd;AACD,GA9CQ,EA8CN,CAACG,IAAD,EAAOK,MAAP,CA9CM,CAAT,CARa,CAuDb;;AACAlB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI4B,MAAM,CAACJ,MAAP,GAAgB,CAApB,EAAuB;AACrBK,MAAAA,UAAU,CAAC,MAAM;AACf,YAAIC,QAAQ,GAAG,CAAC,GAAGF,MAAJ,CAAf;AACAE,QAAAA,QAAQ,CAACC,KAAT;AACAC,QAAAA,SAAS,CAACF,QAAD,CAAT;AACD,OAJS,EAIP,GAJO,CAAV;AAKD;AACF,GARQ,EAQN,CAACF,MAAD,CARM,CAAT;;AASA,QAAMK,gBAAgB,GAAG,MAAOC,EAAP,IAAc;AACrC,QAAI;AACF;AACA,YAAM;AAAEpB,QAAAA;AAAF,UAAW,MAAMR,QAAQ,CAC5BS,IADoB,CACf,WADe,EAEpBoB,MAFoB,GAGpBC,KAHoB,CAGd;AAAEF,QAAAA,EAAE,EAAEA;AAAN,OAHc,CAAvB;AAIA,UAAIG,QAAQ,GAAG;AACbH,QAAAA,EAAE,EAAErC,MAAM,EADG;AAEbyC,QAAAA,IAAI,EAAE,SAFO;AAGbC,QAAAA,OAAO,EAAE;AAHI,OAAf;AAKAhB,MAAAA,YAAY,CAACiB,SAAS,GAAG,CAAb,CAAZ;AACAR,MAAAA,SAAS,CAAC,CAAC,GAAGJ,MAAJ,EAAYS,QAAZ,CAAD,CAAT;AACD,KAbD,CAaE,OAAOI,KAAP,EAAc;AACd,UAAIJ,QAAQ,GAAG;AACbH,QAAAA,EAAE,EAAErC,MAAM,EADG;AAEbyC,QAAAA,IAAI,EAAE,OAFO;AAGbC,QAAAA,OAAO,EAAEE;AAHI,OAAf;AAKAT,MAAAA,SAAS,CAAC,CAAC,GAAGJ,MAAJ,EAAYS,QAAZ,CAAD,CAAT;AACD;;AACDK,IAAAA,4BAA4B,CAACR,EAAD,CAA5B;;AACA,QAAIM,SAAS,KAAK,CAAlB,EAAqB;AACnBG,MAAAA,aAAa,CAAC,KAAD,CAAb;AACAC,MAAAA,OAAO,CAAC,KAAD,CAAP;AACD;AACF,GA3BD;;AA4BA,QAAMF,4BAA4B,GAAIR,EAAD,IAAQ;AAC3C,UAAMW,WAAW,GAAGC,KAAK,CAACC,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACd,EAAL,KAAYA,EAAnC,CAApB;AACAb,IAAAA,QAAQ,CAACwB,WAAD,CAAR;AACD,GAHD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,eACGvB,MAAM,iBACL;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,GAAG,EAAC;AAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,GAAG,EAAC;AAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFJ,EAaG,CAACA,MAAD,iBACC;AAAA,8BACE,QAAC,MAAD;AACE,QAAA,YAAY,EAAE2B,YADhB;AAEE,QAAA,UAAU,EAAEC,UAFd;AAGE,QAAA,WAAW,EAAEC,WAHf;AAIE,QAAA,SAAS,EAAEX;AAJb;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,oBACGZ,MAAM,CAACJ,MAAP,GAAgB,CAAhB,IACCI,MAAM,CAACwB,GAAP,CAAYC,KAAD,iBACT,QAAC,OAAD;AAEE,YAAA,SAAS,EAAG,0CAAyCA,KAAK,CAACf,IAAK,EAFlE;AAAA,uBAIGe,KAAK,CAACf,IAAN,KAAe,SAAf,iBAA4B,QAAC,IAAD;AAAM,cAAA,GAAG,EAAC;AAAV;AAAA;AAAA;AAAA;AAAA,oBAJ/B,EAIqD,GAJrD,EAKGe,KAAK,CAACd,OALT;AAAA,aACOc,KAAK,CAACnB,EADb;AAAA;AAAA;AAAA;AAAA,kBADF;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF,eAqBE;AAAK,QAAA,SAAS,EAAG,GAAEoB,cAAc,IAAI,MAAO,EAA5C;AAAA,+BACE,QAAC,UAAD,CAAY,QAAZ;AACE,UAAA,KAAK,EAAE;AACLR,YAAAA,KADK;AAELjC,YAAAA,IAFK;AAGL0C,YAAAA,WAHK;AAIL3B,YAAAA,MAJK;AAKLI,YAAAA,SALK;AAMLC,YAAAA,gBANK;AAOLO,YAAAA,SAPK;AAQLjB,YAAAA,YARK;AASLiC,YAAAA,YATK;AAULd,YAAAA;AAVK,WADT;AAAA,iCAcE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAdF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cArBF,eAwCE;AAAA,kBACGY,cAAc,iBACb,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,qBAAhB;AAAsC,UAAA,GAAG,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,cAxCF,EA8CGG,SAAS,IAAIjB,SAAS,KAAK,CAA3B,IAAgC,CAACc,cAAjC,iBACC;AAAK,QAAA,SAAS,EAAG,kBAAjB;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,GAAG,EAAC,aAAV;AAAwB,UAAA,SAAS,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,GAAD;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cA/CJ,EAsDGG,SAAS,IAAIjB,SAAS,GAAG,CAAzB,IAA8BM,KAAK,CAACtB,MAAN,KAAiB,CAA/C,IAAoD,CAAC8B,cAArD,iBACC;AAAK,QAAA,SAAS,EAAG,kBAAjB;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,GAAG,EAAC,aAAV;AAAwB,UAAA,SAAS,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,GAAD;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,+CAAkDzC,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAvDJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+ED;;GAhLQJ,G;;KAAAA,G;AAkLT,eAAeA,GAAf","sourcesContent":["/* eslint-disable array-callback-return */\n\nimport \"./App.css\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport React, { useState, useEffect } from \"react\";\nimport Todos from \"./components/Todos/Todos\";\nimport Header from \"./components/Header/Header\";\nimport { Icon } from \"./components/Icon/Icon\";\nimport { Tag } from \"./components/Tag/Tag\";\nimport { Toaster } from \"./components/Toaster/Toaster\";\nimport { supabase } from \"./config/apiClient\";\nexport const AppContext = React.createContext();\nfunction App() {\n  //splash useEffect\n  /* useEffect(() => {\n    setTimeout(() => {\n      setSplash(false);\n    }, 1000);\n  }, []); */\n  // useEffect\n  useEffect(() => {\n    const fetchData = async (e) => {\n      setShowBigSpinner(true);\n      if (flag === \"all\") {\n        const { data } = await supabase\n          .from(\"ReactTodo\")\n          .select()\n          .ilike(\"name\", `%${search}%`)\n          .order(\"id\", { ascending: false });\n        setTodos([]);\n        // setDataCount(data.length);\n        setTodos(data);\n        if (splash) {\n          setDataCount(data.length);\n          setSplash(false);\n        }\n      } else if (flag === \"incomplete\") {\n        const { data } = await supabase\n          .from(\"ReactTodo\")\n          .select()\n          .ilike(\"name\", `%${search}%`)\n          .is(\"completed_on\", null)\n          .order(\"id\", { ascending: false });\n\n        setTodos([]);\n        setTodos(data);\n      } else {\n        const { data } = await supabase\n          .from(\"ReactTodo\")\n          .select()\n          .ilike(\"name\", `%${search}%`)\n          .order(\"id\", { ascending: false })\n          .not(\"completed_on\", \"is\", null);\n\n        setTodos([]);\n        setTodos(data);\n      }\n      /*  if (todos === null || todos.length === undefined) {\n        setFlag(\"all\");\n        setSearchShow(false);\n      } */\n      // console.log(todos.length);\n      setShowBigSpinner(false);\n    };\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [flag, search]);\n  //Toast useeffect\n  useEffect(() => {\n    if (toasts.length > 0) {\n      setTimeout(() => {\n        let allToast = [...toasts];\n        allToast.shift();\n        setToasts(allToast);\n      }, 500);\n    }\n  }, [toasts]);\n  const handleRemoveTodo = async (id) => {\n    try {\n      // eslint-disable-next-line\n      const { data } = await supabase\n        .from(\"ReactTodo\")\n        .delete()\n        .match({ id: id });\n      let newToast = {\n        id: uuidv4(),\n        type: \"success\",\n        message: \"Task Deleted\",\n      };\n      setDataCount(dataCount - 1);\n      setToasts([...toasts, newToast]);\n    } catch (error) {\n      let newToast = {\n        id: uuidv4(),\n        type: \"error\",\n        message: error,\n      };\n      setToasts([...toasts, newToast]);\n    }\n    removeCompleteFromIncomplete(id);\n    if (dataCount === 1) {\n      setSearchShow(false);\n      setFlag(\"all\");\n    }\n  };\n  const removeCompleteFromIncomplete = (id) => {\n    const filtertodos = todos.filter((todo) => todo.id !== id);\n    setTodos(filtertodos);\n  };\n  return (\n    <div className=\"App\">\n      {splash && (\n        <div className=\"splash faddingOut\">\n          <div className=\"splashLogo\">\n            <div className=\"splashIconLogo\">\n              <Icon src=\"SplashLeaf\" />\n            </div>\n            <div>\n              <Icon src=\"SplashTitle\" />\n            </div>\n          </div>\n        </div>\n      )}\n      {!splash && (\n        <div>\n          <Header\n            SearchToggle={SearchToggle}\n            searchShow={searchShow}\n            searchvalue={searchvalue}\n            dataCount={dataCount}\n          />\n          <div className=\"overToaster\">\n            <div className=\"toaster\">\n              {toasts.length > 0 &&\n                toasts.map((toast) => (\n                  <Toaster\n                    key={toast.id}\n                    className={`faddingOut toast toast--visible toast--${toast.type}`}\n                  >\n                    {toast.type === \"success\" && <Icon src=\"Check\" />}{\" \"}\n                    {toast.message}\n                  </Toaster>\n                ))}\n            </div>\n          </div>\n          <div className={`${showBigSpinner && \"blur\"}`}>\n            <AppContext.Provider\n              value={{\n                todos,\n                flag,\n                flagHandler,\n                toasts,\n                setToasts,\n                handleRemoveTodo,\n                dataCount,\n                setDataCount,\n                setShowEmpty,\n                removeCompleteFromIncomplete,\n              }}\n            >\n              <Todos />\n            </AppContext.Provider>\n          </div>\n\n          <div>\n            {showBigSpinner && (\n              <Icon className=\"spinning rotateFull\" src=\"Spin\" />\n            )}\n          </div>\n\n          {showEmpty && dataCount === 0 && !showBigSpinner && (\n            <div className={`emptyScreenOver `}>\n              <Icon src=\"EmptyScreen\" className=\"emptyScreen\" />\n              <Tag className=\"pleaseAdd\">\n                You didn't add any task. Please, add one.\n              </Tag>\n            </div>\n          )}\n          {showEmpty && dataCount > 0 && todos.length === 0 && !showBigSpinner && (\n            <div className={`emptyScreenOver `}>\n              <Icon src=\"EmptyScreen\" className=\"emptyScreen\" />\n              <Tag className=\"pleaseAdd\"> There is no data for {flag}</Tag>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}