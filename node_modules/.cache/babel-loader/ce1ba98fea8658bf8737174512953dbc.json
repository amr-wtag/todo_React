{"ast":null,"code":"var _jsxFileName = \"/Users/mridha/Todo_in_React/todo/src/Todo.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Button, TextArea, Icon, Tag } from \"./App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Todo = _ref => {\n  _s();\n\n  let {\n    todo,\n    onDelete,\n    completeHandler,\n    editToggle,\n    setTodos,\n    allTodos,\n    toasts,\n    setToasts\n  } = _ref;\n  const [newName, setNewName] = useState(todo.name);\n\n  const edit = e => {\n    setNewName(e.target.value);\n  };\n\n  const [showLoading, setShowLoading] = useState(false);\n\n  const editValue = id => {\n    if (newName.length > 2 && allTodos[id].name !== newName) {\n      const index = allTodos.findIndex(todo => todo.id === id);\n      let tempTodos = [...allTodos];\n      tempTodos[index].name = newName;\n      setTodos(tempTodos);\n      let newToast = {\n        id: uuidv4(),\n        type: \"success\",\n        message: \"Task Edited\"\n      };\n      let allToast = [...toasts];\n      allToast.push(newToast);\n      setToasts(allToast);\n      editToggle(id);\n      setShowLoading(true);\n      setTimeout(() => {\n        setShowLoading(false);\n      }, 1000);\n    } else editToggle(id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"todo\",\n    className: \"todo\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${(todo.isLoading || showLoading) && \"blur\"}`,\n      children: [todo.isEdit === true ? /*#__PURE__*/_jsxDEV(TextArea, {\n        id: \"editName\",\n        className: \"editName\",\n        value: newName,\n        onChange: edit,\n        autoFocus: true,\n        onFocus: e => {\n          var val = e.target.value;\n          e.target.value = \"\";\n          e.target.value = val;\n        },\n        onKeyPress: e => {\n          if (e.key === \"Enter\") {\n            e.preventDefault();\n            editValue(todo.id);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Tag, {\n          id: \"showName\",\n          className: `${todo.completed_on && \"completed\"}`,\n          children: todo.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"createdAt\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Tag, {\n            children: [\"created_at: \", todo.created_at]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"boxedButtonCompletedOn\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"allBoxedButon\",\n          children: [todo.isEdit && /*#__PURE__*/_jsxDEV(Button, {\n            className: \"saveButton btn\",\n            onClick: () => editValue(todo.id),\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), !todo.completed_on && /*#__PURE__*/_jsxDEV(Button, {\n            className: \"boxedButton \",\n            onClick: () => {\n              completeHandler(todo.id);\n            },\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              src: \"Tick\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), !todo.completed_on && !todo.isEdit && /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => editToggle(todo.id),\n            className: \"boxedButton \",\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              src: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"boxedButton\",\n            onClick: () => onDelete(todo.id),\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              src: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), todo.completed_on && /*#__PURE__*/_jsxDEV(Tag, {\n          className: \"completedOn\",\n          children: [\"completed in\", \" \", Math.ceil(Math.abs(Date.parse(todo.completed_on) - Date.parse(todo.created_at)) / (1000 * 60 * 60 * 24)), \" \", \"days\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), (todo.isLoading || showLoading) && /*#__PURE__*/_jsxDEV(Icon, {\n      className: \"spinning rotateDiv\",\n      src: \"Spin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Todo, \"5dskpy/bLPIdjg9m8Z5oLrzcov8=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/mridha/Todo_in_React/todo/src/Todo.jsx"],"names":["useState","v4","uuidv4","Button","TextArea","Icon","Tag","Todo","todo","onDelete","completeHandler","editToggle","setTodos","allTodos","toasts","setToasts","newName","setNewName","name","edit","e","target","value","showLoading","setShowLoading","editValue","id","length","index","findIndex","tempTodos","newToast","type","message","allToast","push","setTimeout","isLoading","isEdit","val","key","preventDefault","completed_on","created_at","Math","ceil","abs","Date","parse"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Button, TextArea, Icon, Tag } from \"./App\";\nconst Todo = ({\n  todo,\n  onDelete,\n  completeHandler,\n  editToggle,\n  setTodos,\n  allTodos,\n  toasts,\n  setToasts,\n}) => {\n  const [newName, setNewName] = useState(todo.name);\n  const edit = (e) => {\n    setNewName(e.target.value);\n  };\n  const [showLoading, setShowLoading] = useState(false);\n  const editValue = (id) => {\n    if (newName.length > 2 && allTodos[id].name !== newName) {\n      const index = allTodos.findIndex((todo) => todo.id === id);\n      let tempTodos = [...allTodos];\n      tempTodos[index].name = newName;\n      setTodos(tempTodos);\n      let newToast = {\n        id: uuidv4(),\n        type: \"success\",\n        message: \"Task Edited\",\n      };\n      let allToast = [...toasts];\n      allToast.push(newToast);\n      setToasts(allToast);\n      editToggle(id);\n      setShowLoading(true);\n      setTimeout(() => {\n        setShowLoading(false);\n      }, 1000);\n    } else editToggle(id);\n  };\n  return (\n    <div id=\"todo\" className=\"todo\">\n      <div className={`${(todo.isLoading || showLoading) && \"blur\"}`}>\n        {todo.isEdit === true ? (\n          <TextArea\n            id=\"editName\"\n            className=\"editName\"\n            value={newName}\n            onChange={edit}\n            autoFocus\n            onFocus={(e) => {\n              var val = e.target.value;\n              e.target.value = \"\";\n              e.target.value = val;\n            }}\n            onKeyPress={(e) => {\n              if (e.key === \"Enter\") {\n                e.preventDefault();\n                editValue(todo.id);\n              }\n            }}\n          />\n        ) : (\n          <div>\n            <Tag\n              id=\"showName\"\n              className={`${todo.completed_on && \"completed\"}`}\n            >\n              {todo.name}\n            </Tag>\n          </div>\n        )}\n        <div className=\"createdAt\">\n          <div>\n            <Tag>created_at: {todo.created_at}</Tag>\n          </div>\n        </div>\n        <div className=\"boxedButtonCompletedOn\">\n          <div className=\"allBoxedButon\">\n            {todo.isEdit && (\n              <Button\n                className=\"saveButton btn\"\n                onClick={() => editValue(todo.id)}\n              >\n                Save\n              </Button>\n            )}\n            {!todo.completed_on && (\n              <Button\n                className=\"boxedButton \"\n                onClick={() => {\n                  completeHandler(todo.id);\n                }}\n              >\n                <Icon src=\"Tick\" />\n              </Button>\n            )}\n            {!todo.completed_on && !todo.isEdit && (\n              <Button\n                onClick={() => editToggle(todo.id)}\n                className=\"boxedButton \"\n              >\n                <Icon src=\"Edit\" />\n              </Button>\n            )}\n            <Button className=\"boxedButton\" onClick={() => onDelete(todo.id)}>\n              <Icon src=\"Delete\" />\n            </Button>\n          </div>\n          {todo.completed_on && (\n            <Tag className=\"completedOn\">\n              completed in{\" \"}\n              {Math.ceil(\n                Math.abs(\n                  Date.parse(todo.completed_on) - Date.parse(todo.created_at),\n                ) /\n                  (1000 * 60 * 60 * 24),\n              )}{\" \"}\n              days\n            </Tag>\n          )}\n        </div>\n      </div>\n      {(todo.isLoading || showLoading) && (\n        <Icon className=\"spinning rotateDiv\" src=\"Spin\" />\n      )}\n    </div>\n  );\n};\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}