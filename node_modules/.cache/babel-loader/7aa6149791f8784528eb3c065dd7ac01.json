{"ast":null,"code":"var _jsxFileName = \"/Users/mridha/Todo_in_React/todo/src/Todo.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { TextArea } from \"./components/TextArea\";\nimport { Icon } from \"./components/Icon\";\nimport { Tag } from \"./components/Tag\";\nimport { Button } from \"./components/Button\";\nimport { format } from \"date-fns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Todo = _ref => {\n  _s();\n\n  let {\n    todo,\n    onDelete,\n    completeHandler,\n    editToggle,\n    setTodos,\n    allTodos,\n    toasts,\n    setToasts\n  } = _ref;\n  const [newName, setNewName] = useState(todo.name);\n\n  const edit = e => {\n    setNewName(e.target.value);\n  };\n\n  const [showLoading, setShowLoading] = useState(false);\n\n  const editValue = id => {\n    setNewName(newName.trim().replace(/\\s+/g, \" \"));\n    const index = allTodos.findIndex(todo => todo.id === id);\n\n    if (newName.length > 2 && allTodos[index].name !== newName) {\n      setShowLoading(true);\n      setTimeout(() => {\n        let tempTodos = [...allTodos];\n        tempTodos[index].name = newName;\n        setTodos(tempTodos);\n        editToggle(id);\n        setShowLoading(false);\n        let newToast = {\n          id: uuidv4(),\n          type: \"success\",\n          message: \"Task Edited\"\n        };\n        let allToast = [...toasts];\n        allToast.push(newToast);\n        setToasts(allToast);\n      }, 1000);\n    } else editToggle(id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"todo\",\n    className: \"todo\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [todo.isEdit === true ? /*#__PURE__*/_jsxDEV(TextArea, {\n        id: \"editName\",\n        className: `editName ${(todo.isLoading || showLoading) && \"blur\"}`,\n        value: newName,\n        onChange: edit,\n        readOnly: showLoading,\n        autoFocus: true,\n        onFocus: e => {\n          var val = e.target.value;\n          e.target.value = \"\";\n          e.target.value = val;\n        },\n        onKeyPress: e => {\n          if (e.key === \"Enter\") {\n            e.preventDefault();\n            editValue(todo.id);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Tag, {\n          id: \"showName\",\n          className: `${todo.completed_on && \"completed\"} ${(todo.isLoading || showLoading) && \"blur\"}`,\n          children: todo.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), !todo.isEdit && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `createdAt ${(todo.isLoading || showLoading) && \"blur\"}`,\n        children: [\"Created At: \", format(new Date(todo.created_at), \"dd.MM.yy\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `boxedButtonCompletedOn ${(todo.isLoading || showLoading) && \"blur\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"allBoxedButon\",\n        children: [todo.isEdit && /*#__PURE__*/_jsxDEV(Button, {\n          className: \"saveButton btn\",\n          onClick: () => editValue(todo.id),\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), !todo.completed_on && /*#__PURE__*/_jsxDEV(Button, {\n          className: \"boxedButton \",\n          onClick: () => {\n            completeHandler(todo.id);\n          },\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            src: \"Tick\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), !todo.completed_on && !todo.isEdit && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => editToggle(todo.id),\n          className: \"boxedButton \",\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            src: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"boxedButton\",\n          onClick: () => onDelete(todo.id),\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            src: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), todo.completed_on && /*#__PURE__*/_jsxDEV(Tag, {\n        className: \"completedOn\",\n        children: [\"completed in\", \" \", Math.ceil(Math.abs(Date.parse(todo.completed_on) - Date.parse(todo.created_at)) / (1000 * 60 * 60 * 24)), \" \", \"days\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), (todo.isLoading || showLoading) && /*#__PURE__*/_jsxDEV(Icon, {\n      className: \"spinning rotateDiv\",\n      src: \"Spin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Todo, \"5dskpy/bLPIdjg9m8Z5oLrzcov8=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/mridha/Todo_in_React/todo/src/Todo.jsx"],"names":["useState","v4","uuidv4","TextArea","Icon","Tag","Button","format","Todo","todo","onDelete","completeHandler","editToggle","setTodos","allTodos","toasts","setToasts","newName","setNewName","name","edit","e","target","value","showLoading","setShowLoading","editValue","id","trim","replace","index","findIndex","length","setTimeout","tempTodos","newToast","type","message","allToast","push","isEdit","isLoading","val","key","preventDefault","completed_on","Date","created_at","Math","ceil","abs","parse"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,GAAT,QAAoB,kBAApB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,MAAT,QAAuB,UAAvB;;;AACA,MAAMC,IAAI,GAAG,QASP;AAAA;;AAAA,MATQ;AACZC,IAAAA,IADY;AAEZC,IAAAA,QAFY;AAGZC,IAAAA,eAHY;AAIZC,IAAAA,UAJY;AAKZC,IAAAA,QALY;AAMZC,IAAAA,QANY;AAOZC,IAAAA,MAPY;AAQZC,IAAAA;AARY,GASR;AACJ,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAACS,IAAI,CAACU,IAAN,CAAtC;;AACA,QAAMC,IAAI,GAAIC,CAAD,IAAO;AAClBH,IAAAA,UAAU,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACD,GAFD;;AAGA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCzB,QAAQ,CAAC,KAAD,CAA9C;;AACA,QAAM0B,SAAS,GAAIC,EAAD,IAAQ;AACxBT,IAAAA,UAAU,CAACD,OAAO,CAACW,IAAR,GAAeC,OAAf,CAAuB,MAAvB,EAA+B,GAA/B,CAAD,CAAV;AACA,UAAMC,KAAK,GAAGhB,QAAQ,CAACiB,SAAT,CAAoBtB,IAAD,IAAUA,IAAI,CAACkB,EAAL,KAAYA,EAAzC,CAAd;;AACA,QAAIV,OAAO,CAACe,MAAR,GAAiB,CAAjB,IAAsBlB,QAAQ,CAACgB,KAAD,CAAR,CAAgBX,IAAhB,KAAyBF,OAAnD,EAA4D;AAC1DQ,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAQ,MAAAA,UAAU,CAAC,MAAM;AACf,YAAIC,SAAS,GAAG,CAAC,GAAGpB,QAAJ,CAAhB;AACAoB,QAAAA,SAAS,CAACJ,KAAD,CAAT,CAAiBX,IAAjB,GAAwBF,OAAxB;AACAJ,QAAAA,QAAQ,CAACqB,SAAD,CAAR;AAEAtB,QAAAA,UAAU,CAACe,EAAD,CAAV;AACAF,QAAAA,cAAc,CAAC,KAAD,CAAd;AACA,YAAIU,QAAQ,GAAG;AACbR,UAAAA,EAAE,EAAEzB,MAAM,EADG;AAEbkC,UAAAA,IAAI,EAAE,SAFO;AAGbC,UAAAA,OAAO,EAAE;AAHI,SAAf;AAKA,YAAIC,QAAQ,GAAG,CAAC,GAAGvB,MAAJ,CAAf;AACAuB,QAAAA,QAAQ,CAACC,IAAT,CAAcJ,QAAd;AACAnB,QAAAA,SAAS,CAACsB,QAAD,CAAT;AACD,OAfS,EAeP,IAfO,CAAV;AAgBD,KAlBD,MAkBO1B,UAAU,CAACe,EAAD,CAAV;AACR,GAtBD;;AAuBA,sBACE;AAAK,IAAA,EAAE,EAAC,MAAR;AAAe,IAAA,SAAS,EAAC,MAAzB;AAAA,4BACE;AAAA,iBACGlB,IAAI,CAAC+B,MAAL,KAAgB,IAAhB,gBACC,QAAC,QAAD;AACE,QAAA,EAAE,EAAC,UADL;AAEE,QAAA,SAAS,EAAG,YAAW,CAAC/B,IAAI,CAACgC,SAAL,IAAkBjB,WAAnB,KAAmC,MAAO,EAFnE;AAGE,QAAA,KAAK,EAAEP,OAHT;AAIE,QAAA,QAAQ,EAAEG,IAJZ;AAKE,QAAA,QAAQ,EAAEI,WALZ;AAME,QAAA,SAAS,MANX;AAOE,QAAA,OAAO,EAAGH,CAAD,IAAO;AACd,cAAIqB,GAAG,GAAGrB,CAAC,CAACC,MAAF,CAASC,KAAnB;AACAF,UAAAA,CAAC,CAACC,MAAF,CAASC,KAAT,GAAiB,EAAjB;AACAF,UAAAA,CAAC,CAACC,MAAF,CAASC,KAAT,GAAiBmB,GAAjB;AACD,SAXH;AAYE,QAAA,UAAU,EAAGrB,CAAD,IAAO;AACjB,cAAIA,CAAC,CAACsB,GAAF,KAAU,OAAd,EAAuB;AACrBtB,YAAAA,CAAC,CAACuB,cAAF;AACAlB,YAAAA,SAAS,CAACjB,IAAI,CAACkB,EAAN,CAAT;AACD;AACF;AAjBH;AAAA;AAAA;AAAA;AAAA,cADD,gBAqBC;AAAA,+BACE,QAAC,GAAD;AACE,UAAA,EAAE,EAAC,UADL;AAEE,UAAA,SAAS,EAAG,GAAElB,IAAI,CAACoC,YAAL,IAAqB,WAAY,IAC7C,CAACpC,IAAI,CAACgC,SAAL,IAAkBjB,WAAnB,KAAmC,MACpC,EAJH;AAAA,oBAMGf,IAAI,CAACU;AANR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAtBJ,EAiCG,CAACV,IAAI,CAAC+B,MAAN,iBACC;AACE,QAAA,SAAS,EAAG,aAAY,CAAC/B,IAAI,CAACgC,SAAL,IAAkBjB,WAAnB,KAAmC,MAAO,EADpE;AAAA,mCAGejB,MAAM,CAAC,IAAIuC,IAAJ,CAASrC,IAAI,CAACsC,UAAd,CAAD,EAA4B,UAA5B,CAHrB;AAAA;AAAA;AAAA;AAAA;AAAA,cAlCJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eA0CE;AACE,MAAA,SAAS,EAAG,0BACV,CAACtC,IAAI,CAACgC,SAAL,IAAkBjB,WAAnB,KAAmC,MACpC,EAHH;AAAA,8BAKE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,mBACGf,IAAI,CAAC+B,MAAL,iBACC,QAAC,MAAD;AACE,UAAA,SAAS,EAAC,gBADZ;AAEE,UAAA,OAAO,EAAE,MAAMd,SAAS,CAACjB,IAAI,CAACkB,EAAN,CAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EASG,CAAClB,IAAI,CAACoC,YAAN,iBACC,QAAC,MAAD;AACE,UAAA,SAAS,EAAC,cADZ;AAEE,UAAA,OAAO,EAAE,MAAM;AACblC,YAAAA,eAAe,CAACF,IAAI,CAACkB,EAAN,CAAf;AACD,WAJH;AAAA,iCAME,QAAC,IAAD;AAAM,YAAA,GAAG,EAAC;AAAV;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,gBAVJ,EAmBG,CAAClB,IAAI,CAACoC,YAAN,IAAsB,CAACpC,IAAI,CAAC+B,MAA5B,iBACC,QAAC,MAAD;AACE,UAAA,OAAO,EAAE,MAAM5B,UAAU,CAACH,IAAI,CAACkB,EAAN,CAD3B;AAEE,UAAA,SAAS,EAAC,cAFZ;AAAA,iCAIE,QAAC,IAAD;AAAM,YAAA,GAAG,EAAC;AAAV;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,gBApBJ,eA2BE,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,aAAlB;AAAgC,UAAA,OAAO,EAAE,MAAMjB,QAAQ,CAACD,IAAI,CAACkB,EAAN,CAAvD;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,GAAG,EAAC;AAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBA3BF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,EAoCGlB,IAAI,CAACoC,YAAL,iBACC,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,mCACe,GADf,EAEGG,IAAI,CAACC,IAAL,CACCD,IAAI,CAACE,GAAL,CACEJ,IAAI,CAACK,KAAL,CAAW1C,IAAI,CAACoC,YAAhB,IAAgCC,IAAI,CAACK,KAAL,CAAW1C,IAAI,CAACsC,UAAhB,CADlC,KAGG,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAHpB,CADD,CAFH,EAOK,GAPL;AAAA;AAAA;AAAA;AAAA;AAAA,cArCJ;AAAA;AAAA;AAAA;AAAA;AAAA,YA1CF,EA4FG,CAACtC,IAAI,CAACgC,SAAL,IAAkBjB,WAAnB,kBACC,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,oBAAhB;AAAqC,MAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,YA7FJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkGD,CAxID;;GAAMhB,I;;KAAAA,I;AA0IN,eAAeA,IAAf","sourcesContent":["import { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { TextArea } from \"./components/TextArea\";\nimport { Icon } from \"./components/Icon\";\nimport { Tag } from \"./components/Tag\";\nimport { Button } from \"./components/Button\";\nimport { format } from \"date-fns\";\nconst Todo = ({\n  todo,\n  onDelete,\n  completeHandler,\n  editToggle,\n  setTodos,\n  allTodos,\n  toasts,\n  setToasts,\n}) => {\n  const [newName, setNewName] = useState(todo.name);\n  const edit = (e) => {\n    setNewName(e.target.value);\n  };\n  const [showLoading, setShowLoading] = useState(false);\n  const editValue = (id) => {\n    setNewName(newName.trim().replace(/\\s+/g, \" \"));\n    const index = allTodos.findIndex((todo) => todo.id === id);\n    if (newName.length > 2 && allTodos[index].name !== newName) {\n      setShowLoading(true);\n      setTimeout(() => {\n        let tempTodos = [...allTodos];\n        tempTodos[index].name = newName;\n        setTodos(tempTodos);\n\n        editToggle(id);\n        setShowLoading(false);\n        let newToast = {\n          id: uuidv4(),\n          type: \"success\",\n          message: \"Task Edited\",\n        };\n        let allToast = [...toasts];\n        allToast.push(newToast);\n        setToasts(allToast);\n      }, 1000);\n    } else editToggle(id);\n  };\n  return (\n    <div id=\"todo\" className=\"todo\">\n      <div>\n        {todo.isEdit === true ? (\n          <TextArea\n            id=\"editName\"\n            className={`editName ${(todo.isLoading || showLoading) && \"blur\"}`}\n            value={newName}\n            onChange={edit}\n            readOnly={showLoading}\n            autoFocus\n            onFocus={(e) => {\n              var val = e.target.value;\n              e.target.value = \"\";\n              e.target.value = val;\n            }}\n            onKeyPress={(e) => {\n              if (e.key === \"Enter\") {\n                e.preventDefault();\n                editValue(todo.id);\n              }\n            }}\n          />\n        ) : (\n          <div>\n            <Tag\n              id=\"showName\"\n              className={`${todo.completed_on && \"completed\"} ${\n                (todo.isLoading || showLoading) && \"blur\"\n              }`}\n            >\n              {todo.name}\n            </Tag>\n          </div>\n        )}\n        {!todo.isEdit && (\n          <div\n            className={`createdAt ${(todo.isLoading || showLoading) && \"blur\"}`}\n          >\n            Created At: {format(new Date(todo.created_at), \"dd.MM.yy\")}\n          </div>\n        )}\n      </div>\n      <div\n        className={`boxedButtonCompletedOn ${\n          (todo.isLoading || showLoading) && \"blur\"\n        }`}\n      >\n        <div className=\"allBoxedButon\">\n          {todo.isEdit && (\n            <Button\n              className=\"saveButton btn\"\n              onClick={() => editValue(todo.id)}\n            >\n              Save\n            </Button>\n          )}\n          {!todo.completed_on && (\n            <Button\n              className=\"boxedButton \"\n              onClick={() => {\n                completeHandler(todo.id);\n              }}\n            >\n              <Icon src=\"Tick\" />\n            </Button>\n          )}\n          {!todo.completed_on && !todo.isEdit && (\n            <Button\n              onClick={() => editToggle(todo.id)}\n              className=\"boxedButton \"\n            >\n              <Icon src=\"Edit\" />\n            </Button>\n          )}\n          <Button className=\"boxedButton\" onClick={() => onDelete(todo.id)}>\n            <Icon src=\"Delete\" />\n          </Button>\n        </div>\n        {todo.completed_on && (\n          <Tag className=\"completedOn\">\n            completed in{\" \"}\n            {Math.ceil(\n              Math.abs(\n                Date.parse(todo.completed_on) - Date.parse(todo.created_at),\n              ) /\n                (1000 * 60 * 60 * 24),\n            )}{\" \"}\n            days\n          </Tag>\n        )}\n      </div>\n\n      {(todo.isLoading || showLoading) && (\n        <Icon className=\"spinning rotateDiv\" src=\"Spin\" />\n      )}\n    </div>\n  );\n};\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}