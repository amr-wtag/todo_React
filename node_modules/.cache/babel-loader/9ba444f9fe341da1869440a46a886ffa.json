{"ast":null,"code":"var _jsxFileName = \"/Users/mridha/Todo_in_React/todo/src/App.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable array-callback-return */\nimport \"./App.css\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport React, { useState, useEffect } from \"react\";\nimport Todos from \"./components/Todos\";\nimport Header from \"./components/Header\";\nimport Icon from \"./components/Icon\";\nimport Tag from \"./components/Tag\";\nimport Toaster from \"./components/Toaster\";\nimport { supabase } from \"./config/apiClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/React.createContext();\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const [toasts, setToasts] = useState([]);\n  const [showEmpty, setShowEmpty] = useState(true);\n  const [showBigSpinner, setShowBigSpinner] = useState(false);\n  const [searchShow, setSearchShow] = useState(false);\n  const [flag, setFlag] = useState(\"all\");\n  const [search, setSearch] = useState(\"\");\n  const [dataCount, setDataCount] = useState(0);\n  const [splash, setSplash] = useState(true); //flag\n\n  const flagHandler = e => {\n    if (flag !== e) {\n      setFlag(e);\n    }\n  }; //search value\n\n\n  const searchvalue = e => {\n    if (e.length > 2) {\n      setTimeout(() => {\n        setShowBigSpinner(true);\n      }, 500);\n      setTimeout(() => {\n        setSearch(e);\n        setShowBigSpinner(false);\n      }, 1500);\n    }\n  }; //search toggle\n\n\n  const SearchToggle = () => {\n    if (search !== \"\") {\n      setShowBigSpinner(true);\n      setTimeout(() => {\n        setSearch(\"\");\n        setShowBigSpinner(false);\n      }, 500);\n    }\n\n    setSearchShow(!searchShow);\n  }; //splash useEffect\n\n\n  useEffect(() => {\n    setTimeout(() => {\n      setSplash(false);\n    }, 1000);\n  }, []); // useEffect\n\n  useEffect(() => {\n    const fetchData = async e => {\n      setShowBigSpinner(true);\n\n      if (flag === \"all\") {\n        try {\n          const {\n            data\n          } = await supabase.from(\"ReactTodo\").select().ilike(\"name\", `%${search}%`).order(\"id\", {\n            ascending: false\n          });\n          setTodos([]); // setDataCount(data.length);\n\n          setTodos(data);\n          let newToast = {\n            id: uuidv4(),\n            type: \"success\",\n            message: \"All Data fetched\"\n          };\n          setToasts([...toasts, newToast]);\n\n          if (splash) {\n            setDataCount(data.length);\n            setSplash(false);\n          }\n        } catch (error) {\n          let newToast = {\n            id: uuidv4(),\n            type: \"error\",\n            message: error\n          };\n          setToasts([...toasts, newToast]);\n        }\n      } else if (flag === \"incomplete\") {\n        try {\n          const {\n            data\n          } = await supabase.from(\"ReactTodo\").select().ilike(\"name\", `%${search}%`).is(\"completed_on\", null).order(\"id\", {\n            ascending: false\n          });\n          setTodos([]);\n          setTodos(data);\n        } catch (error) {\n          let newToast = {\n            id: uuidv4(),\n            type: \"error\",\n            message: error\n          };\n          setToasts([...toasts, newToast]);\n        }\n      } else {\n        try {\n          const {\n            data\n          } = await supabase.from(\"ReactTodo\").select().ilike(\"name\", `%${search}%`).order(\"id\", {\n            ascending: false\n          }).not(\"completed_on\", \"is\", null);\n          setTodos([]);\n          setTodos(data);\n        } catch (error) {\n          let newToast = {\n            id: uuidv4(),\n            type: \"error\",\n            message: error\n          };\n          setToasts([...toasts, newToast]);\n        }\n      }\n      /*  if (todos === null || todos.length === undefined) {\n        setFlag(\"all\");\n        setSearchShow(false);\n      } */\n      // console.log(todos.length);\n\n\n      setShowBigSpinner(false);\n    };\n\n    fetchData(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [flag, search]); //Toast useeffect\n\n  useEffect(() => {\n    if (toasts.length > 0) {\n      setTimeout(() => {\n        let allToast = [...toasts];\n        allToast.shift();\n        setToasts(allToast);\n      }, 500);\n    }\n  }, [toasts]);\n\n  const handleRemoveTodo = async id => {\n    try {\n      // eslint-disable-next-line\n      const {\n        data\n      } = await supabase.from(\"ReactTodo\").delete().match({\n        id: id\n      });\n      let newToast = {\n        id: uuidv4(),\n        type: \"success\",\n        message: \"Task Deleted\"\n      };\n      setToasts([...toasts, newToast]);\n    } catch (error) {\n      let newToast = {\n        id: uuidv4(),\n        type: \"error\",\n        message: error\n      };\n      setToasts([...toasts, newToast]);\n    }\n\n    removeCompleteFromIncomplete(id);\n\n    if (dataCount === 1) {\n      setSearchShow(false);\n      setFlag(\"all\");\n    }\n  };\n\n  const removeCompleteFromIncomplete = id => {\n    const filtertodos = todos.filter(todo => todo.id !== id);\n    setTodos(filtertodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [splash && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"splash faddingOut\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"splashLogo\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"splashIconLogo\",\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            src: \"SplashLeaf\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            src: \"SplashTitle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }, this), !splash && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        SearchToggle: SearchToggle,\n        searchShow: searchShow,\n        searchvalue: searchvalue,\n        dataCount: dataCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overToaster\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toaster\",\n          children: toasts.length > 0 && toasts.map(toast => /*#__PURE__*/_jsxDEV(Toaster, {\n            className: `faddingOut toast toast--visible toast--${toast.type}`,\n            children: [toast.type === \"success\" && /*#__PURE__*/_jsxDEV(Icon, {\n              src: \"Check\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 50\n            }, this), \" \", toast.message]\n          }, toast.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${showBigSpinner && \"blur\"}`,\n        children: /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n          value: {\n            todos,\n            flag,\n            flagHandler,\n            toasts,\n            setToasts,\n            handleRemoveTodo,\n            dataCount,\n            setDataCount,\n            setShowEmpty,\n            removeCompleteFromIncomplete\n          },\n          children: /*#__PURE__*/_jsxDEV(Todos, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: showBigSpinner && /*#__PURE__*/_jsxDEV(Icon, {\n          className: \"spinning rotateFull\",\n          src: \"Spin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }, this), showEmpty && dataCount === 0 && !showBigSpinner && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `emptyScreenOver `,\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          src: \"EmptyScreen\",\n          className: \"emptyScreen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Tag, {\n          className: \"pleaseAdd\",\n          children: \"You didn't add any task. Please, add one.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 13\n      }, this), showEmpty && dataCount > 0 && todos.length === 0 && !showBigSpinner && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `emptyScreenOver `,\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          src: \"EmptyScreen\",\n          className: \"emptyScreen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Tag, {\n          className: \"pleaseAdd\",\n          children: [\" There is no data for \", flag]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"abLDXLV0rZ9yMZBMsvZcZEu3u8o=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mridha/Todo_in_React/todo/src/App.jsx"],"names":["v4","uuidv4","React","useState","useEffect","Todos","Header","Icon","Tag","Toaster","supabase","AppContext","createContext","App","todos","setTodos","toasts","setToasts","showEmpty","setShowEmpty","showBigSpinner","setShowBigSpinner","searchShow","setSearchShow","flag","setFlag","search","setSearch","dataCount","setDataCount","splash","setSplash","flagHandler","e","searchvalue","length","setTimeout","SearchToggle","fetchData","data","from","select","ilike","order","ascending","newToast","id","type","message","error","is","not","allToast","shift","handleRemoveTodo","delete","match","removeCompleteFromIncomplete","filtertodos","filter","todo","map","toast"],"mappings":"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","sourcesContent":["/* eslint-disable array-callback-return */\n\nimport \"./App.css\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport React, { useState, useEffect } from \"react\";\nimport Todos from \"./components/Todos\";\nimport Header from \"./components/Header\";\nimport Icon from \"./components/Icon\";\nimport Tag from \"./components/Tag\";\nimport Toaster from \"./components/Toaster\";\nimport { supabase } from \"./config/apiClient\";\nexport const AppContext = React.createContext();\nfunction App() {\n  const [todos, setTodos] = useState([]);\n\n  const [toasts, setToasts] = useState([]);\n  const [showEmpty, setShowEmpty] = useState(true);\n  const [showBigSpinner, setShowBigSpinner] = useState(false);\n  const [searchShow, setSearchShow] = useState(false);\n  const [flag, setFlag] = useState(\"all\");\n  const [search, setSearch] = useState(\"\");\n  const [dataCount, setDataCount] = useState(0);\n  const [splash, setSplash] = useState(true);\n\n  //flag\n  const flagHandler = (e) => {\n    if (flag !== e) {\n      setFlag(e);\n    }\n  };\n\n  //search value\n  const searchvalue = (e) => {\n    if (e.length > 2) {\n      setTimeout(() => {\n        setShowBigSpinner(true);\n      }, 500);\n      setTimeout(() => {\n        setSearch(e);\n        setShowBigSpinner(false);\n      }, 1500);\n    }\n  };\n\n  //search toggle\n  const SearchToggle = () => {\n    if (search !== \"\") {\n      setShowBigSpinner(true);\n      setTimeout(() => {\n        setSearch(\"\");\n        setShowBigSpinner(false);\n      }, 500);\n    }\n    setSearchShow(!searchShow);\n  };\n  //splash useEffect\n  useEffect(() => {\n    setTimeout(() => {\n      setSplash(false);\n    }, 1000);\n  }, []);\n  // useEffect\n  useEffect(() => {\n    const fetchData = async (e) => {\n      setShowBigSpinner(true);\n      if (flag === \"all\") {\n        try {\n          const { data } = await supabase\n            .from(\"ReactTodo\")\n            .select()\n            .ilike(\"name\", `%${search}%`)\n            .order(\"id\", { ascending: false });\n          setTodos([]);\n          // setDataCount(data.length);\n          setTodos(data);\n          let newToast = {\n            id: uuidv4(),\n            type: \"success\",\n            message: \"All Data fetched\",\n          };\n\n          setToasts([...toasts, newToast]);\n          if (splash) {\n            setDataCount(data.length);\n            setSplash(false);\n          }\n        } catch (error) {\n          let newToast = {\n            id: uuidv4(),\n            type: \"error\",\n            message: error,\n          };\n\n          setToasts([...toasts, newToast]);\n        }\n      } else if (flag === \"incomplete\") {\n        try {\n          const { data } = await supabase\n            .from(\"ReactTodo\")\n            .select()\n            .ilike(\"name\", `%${search}%`)\n            .is(\"completed_on\", null)\n            .order(\"id\", { ascending: false });\n\n          setTodos([]);\n          setTodos(data);\n        } catch (error) {\n          let newToast = {\n            id: uuidv4(),\n            type: \"error\",\n            message: error,\n          };\n\n          setToasts([...toasts, newToast]);\n        }\n      } else {\n        try {\n          const { data } = await supabase\n            .from(\"ReactTodo\")\n            .select()\n            .ilike(\"name\", `%${search}%`)\n            .order(\"id\", { ascending: false })\n            .not(\"completed_on\", \"is\", null);\n\n          setTodos([]);\n          setTodos(data);\n        } catch (error) {\n          let newToast = {\n            id: uuidv4(),\n            type: \"error\",\n            message: error,\n          };\n\n          setToasts([...toasts, newToast]);\n        }\n      }\n      /*  if (todos === null || todos.length === undefined) {\n        setFlag(\"all\");\n        setSearchShow(false);\n      } */\n      // console.log(todos.length);\n      setShowBigSpinner(false);\n    };\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [flag, search]);\n  //Toast useeffect\n  useEffect(() => {\n    if (toasts.length > 0) {\n      setTimeout(() => {\n        let allToast = [...toasts];\n        allToast.shift();\n        setToasts(allToast);\n      }, 500);\n    }\n  }, [toasts]);\n  const handleRemoveTodo = async (id) => {\n    try {\n      // eslint-disable-next-line\n      const { data } = await supabase\n        .from(\"ReactTodo\")\n        .delete()\n        .match({ id: id });\n      let newToast = {\n        id: uuidv4(),\n        type: \"success\",\n        message: \"Task Deleted\",\n      };\n\n      setToasts([...toasts, newToast]);\n    } catch (error) {\n      let newToast = {\n        id: uuidv4(),\n        type: \"error\",\n        message: error,\n      };\n      setToasts([...toasts, newToast]);\n    }\n    removeCompleteFromIncomplete(id);\n    if (dataCount === 1) {\n      setSearchShow(false);\n      setFlag(\"all\");\n    }\n  };\n  const removeCompleteFromIncomplete = (id) => {\n    const filtertodos = todos.filter((todo) => todo.id !== id);\n    setTodos(filtertodos);\n  };\n  return (\n    <div className=\"App\">\n      {splash && (\n        <div className=\"splash faddingOut\">\n          <div className=\"splashLogo\">\n            <div className=\"splashIconLogo\">\n              <Icon src=\"SplashLeaf\" />\n            </div>\n            <div>\n              <Icon src=\"SplashTitle\" />\n            </div>\n          </div>\n        </div>\n      )}\n      {!splash && (\n        <div>\n          <Header\n            SearchToggle={SearchToggle}\n            searchShow={searchShow}\n            searchvalue={searchvalue}\n            dataCount={dataCount}\n          />\n          <div className=\"overToaster\">\n            <div className=\"toaster\">\n              {toasts.length > 0 &&\n                toasts.map((toast) => (\n                  <Toaster\n                    key={toast.id}\n                    className={`faddingOut toast toast--visible toast--${toast.type}`}\n                  >\n                    {toast.type === \"success\" && <Icon src=\"Check\" />}{\" \"}\n                    {toast.message}\n                  </Toaster>\n                ))}\n            </div>\n          </div>\n          <div className={`${showBigSpinner && \"blur\"}`}>\n            <AppContext.Provider\n              value={{\n                todos,\n                flag,\n                flagHandler,\n                toasts,\n                setToasts,\n                handleRemoveTodo,\n                dataCount,\n                setDataCount,\n                setShowEmpty,\n                removeCompleteFromIncomplete,\n              }}\n            >\n              <Todos />\n            </AppContext.Provider>\n          </div>\n\n          <div>\n            {showBigSpinner && (\n              <Icon className=\"spinning rotateFull\" src=\"Spin\" />\n            )}\n          </div>\n\n          {showEmpty && dataCount === 0 && !showBigSpinner && (\n            <div className={`emptyScreenOver `}>\n              <Icon src=\"EmptyScreen\" className=\"emptyScreen\" />\n              <Tag className=\"pleaseAdd\">\n                You didn't add any task. Please, add one.\n              </Tag>\n            </div>\n          )}\n          {showEmpty && dataCount > 0 && todos.length === 0 && !showBigSpinner && (\n            <div className={`emptyScreenOver `}>\n              <Icon src=\"EmptyScreen\" className=\"emptyScreen\" />\n              <Tag className=\"pleaseAdd\"> There is no data for {flag}</Tag>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}