{"ast":null,"code":"var _jsxFileName = \"/Users/mridha/Todo_in_React/todo/src/App.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable array-callback-return */\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport Todos from \"./components/Todos\";\nimport Header from \"./components/Header\";\nimport { Icon } from \"./components/Icon\";\nimport { Tag } from \"./components/Tag\";\nimport { Toaster } from \"./components/Toaster\";\nimport { supabase } from \"./config/apiClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const [toasts, setToasts] = useState([]);\n  const [showEmpty, setShowEmpty] = useState(true);\n  const [showBigSpinner, setShowBigSpinner] = useState(false);\n  const [searchShow, setSearchShow] = useState(false);\n  const [flag, setFlag] = useState(\"all\");\n  const [search, setSearch] = useState(\"\");\n  const [dataCount, setDataCount] = useState(0); // const [splash, setSplash] = useState(true);\n  //flag\n\n  const flagHandler = e => {\n    if (flag !== e) {\n      setFlag(e);\n    }\n  }; //search value\n\n\n  const searchvalue = e => {\n    if (e.length > 2) {\n      setTimeout(() => {\n        setShowBigSpinner(true);\n      }, 500);\n      setTimeout(() => {\n        setSearch(e);\n        setShowBigSpinner(false);\n      }, 1500);\n    }\n  }; //search toggle\n\n\n  const SearchToggle = () => {\n    if (search !== \"\") {\n      setShowBigSpinner(true);\n      setTimeout(() => {\n        setSearch(\"\");\n        setShowBigSpinner(false);\n      }, 500);\n    }\n  }; //splash useEffect\n\n  /*  useEffect(() => {\n    setTimeout(() => {\n      setSplash(false);\n    }, 1000);\n  }, []); */\n  // useEffect\n\n\n  useEffect(() => {\n    const fetchData = async e => {\n      setShowBigSpinner(true);\n\n      if (flag === \"all\") {\n        const {\n          data\n        } = await supabase.from(\"ReactTodo\").select().ilike(\"name\", `%${search}%`).order(\"id\", {\n          ascending: false\n        });\n        setTodos([]);\n        setDataCount(data.length);\n        setTodos(data);\n      } else if (flag === \"incomplete\") {\n        const {\n          data\n        } = await supabase.from(\"ReactTodo\").select().ilike(\"name\", `%${search}%`).is(\"completed_on\", null).order(\"id\", {\n          ascending: false\n        });\n        setTodos([]);\n        setTodos(data);\n      } else {\n        const {\n          data\n        } = await supabase.from(\"ReactTodo\").select().ilike(\"name\", `%${search}%`).order(\"id\", {\n          ascending: false\n        }).not(\"completed_on\", \"is\", null);\n        setTodos([]);\n        setTodos(data);\n      }\n      /*  if (todos === null || todos.length === undefined) {\n        setFlag(\"all\");\n        setSearchShow(false);\n      } */\n      // console.log(todos.length);\n\n\n      setShowBigSpinner(false);\n    };\n\n    fetchData();\n  }, [flag, search]); //Toast useeffect\n\n  useEffect(() => {\n    if (toasts.length > 0) {\n      setTimeout(() => {\n        let allToast = [...toasts];\n        allToast.shift();\n        setToasts(allToast);\n      }, 300);\n    }\n  }, [toasts]);\n\n  const handleRemoveTodo = id => {\n    removeCompleteFromIncomplete(id);\n    if (dataCount === 0) setSearchShow(false);\n  };\n\n  const removeCompleteFromIncomplete = id => {\n    const filtertodos = todos.filter(todo => todo.id !== id);\n    setTodos(filtertodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children:\n    /*#__PURE__*/\n\n    /* !splash && */\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        SearchToggle: SearchToggle,\n        searchShow: searchShow,\n        searchvalue: searchvalue,\n        dataCount: dataCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overToaster\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toaster\",\n          children: toasts.length > 0 && toasts.map(toast => /*#__PURE__*/_jsxDEV(Toaster, {\n            className: `faddingOut toast toast--visible toast--${toast.type}`,\n            children: [toast.type === \"success\" && /*#__PURE__*/_jsxDEV(Icon, {\n              src: \"Check\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 50\n            }, this), \" \", toast.message]\n          }, toast.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${showBigSpinner && \"blur\"}`,\n        children: /*#__PURE__*/_jsxDEV(Todos, {\n          todos: todos,\n          flag: flag,\n          flagHandler: flagHandler,\n          toasts: toasts,\n          setToasts: setToasts,\n          onRemoveTodo: handleRemoveTodo,\n          dataCount: dataCount,\n          setDataCount: setDataCount,\n          setShowEmpty: setShowEmpty,\n          removeCompleteFromIncomplete: removeCompleteFromIncomplete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: showBigSpinner && /*#__PURE__*/_jsxDEV(Icon, {\n          className: \"spinning rotateFull\",\n          src: \"Spin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this), showEmpty && dataCount === 0 && !showBigSpinner && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `emptyScreenOver `,\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          src: \"EmptyScreen\",\n          className: \"emptyScreen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Tag, {\n          className: \"pleaseAdd\",\n          children: \"You didn't add any task. Please, add one.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }, this), showEmpty && dataCount > 0 && todos.length === 0 && !showBigSpinner && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `emptyScreenOver `,\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          src: \"EmptyScreen\",\n          className: \"emptyScreen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Tag, {\n          className: \"pleaseAdd\",\n          children: [\" There is no data for \", flag]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 26\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"f0u+Svl0qAu1kmj8k5yenV+hy18=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mridha/Todo_in_React/todo/src/App.jsx"],"names":["useState","useEffect","Todos","Header","Icon","Tag","Toaster","supabase","App","todos","setTodos","toasts","setToasts","showEmpty","setShowEmpty","showBigSpinner","setShowBigSpinner","searchShow","setSearchShow","flag","setFlag","search","setSearch","dataCount","setDataCount","flagHandler","e","searchvalue","length","setTimeout","SearchToggle","fetchData","data","from","select","ilike","order","ascending","is","not","allToast","shift","handleRemoveTodo","id","removeCompleteFromIncomplete","filtertodos","filter","todo","map","toast","type","message"],"mappings":"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","sourcesContent":["/* eslint-disable array-callback-return */\n\nimport \"./App.css\";\n\nimport { useState, useEffect } from \"react\";\nimport Todos from \"./components/Todos\";\nimport Header from \"./components/Header\";\nimport { Icon } from \"./components/Icon\";\nimport { Tag } from \"./components/Tag\";\nimport { Toaster } from \"./components/Toaster\";\nimport { supabase } from \"./config/apiClient\";\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n\n  const [toasts, setToasts] = useState([]);\n  const [showEmpty, setShowEmpty] = useState(true);\n  const [showBigSpinner, setShowBigSpinner] = useState(false);\n  const [searchShow, setSearchShow] = useState(false);\n  const [flag, setFlag] = useState(\"all\");\n  const [search, setSearch] = useState(\"\");\n  const [dataCount, setDataCount] = useState(0);\n  // const [splash, setSplash] = useState(true);\n\n  //flag\n  const flagHandler = (e) => {\n    if (flag !== e) {\n      setFlag(e);\n    }\n  };\n\n  //search value\n  const searchvalue = (e) => {\n    if (e.length > 2) {\n      setTimeout(() => {\n        setShowBigSpinner(true);\n      }, 500);\n      setTimeout(() => {\n        setSearch(e);\n        setShowBigSpinner(false);\n      }, 1500);\n    }\n  };\n\n  //search toggle\n  const SearchToggle = () => {\n    if (search !== \"\") {\n      setShowBigSpinner(true);\n      setTimeout(() => {\n        setSearch(\"\");\n        setShowBigSpinner(false);\n      }, 500);\n    }\n  };\n  //splash useEffect\n  /*  useEffect(() => {\n    setTimeout(() => {\n      setSplash(false);\n    }, 1000);\n  }, []); */\n  // useEffect\n  useEffect(() => {\n    const fetchData = async (e) => {\n      setShowBigSpinner(true);\n      if (flag === \"all\") {\n        const { data } = await supabase\n          .from(\"ReactTodo\")\n          .select()\n          .ilike(\"name\", `%${search}%`)\n          .order(\"id\", { ascending: false });\n        setTodos([]);\n        setDataCount(data.length);\n        setTodos(data);\n      } else if (flag === \"incomplete\") {\n        const { data } = await supabase\n          .from(\"ReactTodo\")\n          .select()\n          .ilike(\"name\", `%${search}%`)\n          .is(\"completed_on\", null)\n          .order(\"id\", { ascending: false });\n\n        setTodos([]);\n        setTodos(data);\n      } else {\n        const { data } = await supabase\n          .from(\"ReactTodo\")\n          .select()\n          .ilike(\"name\", `%${search}%`)\n          .order(\"id\", { ascending: false })\n          .not(\"completed_on\", \"is\", null);\n\n        setTodos([]);\n        setTodos(data);\n      }\n      /*  if (todos === null || todos.length === undefined) {\n        setFlag(\"all\");\n        setSearchShow(false);\n      } */\n      // console.log(todos.length);\n      setShowBigSpinner(false);\n    };\n    fetchData();\n  }, [flag, search]);\n  //Toast useeffect\n  useEffect(() => {\n    if (toasts.length > 0) {\n      setTimeout(() => {\n        let allToast = [...toasts];\n        allToast.shift();\n        setToasts(allToast);\n      }, 300);\n    }\n  }, [toasts]);\n  const handleRemoveTodo = (id) => {\n    removeCompleteFromIncomplete(id);\n    if (dataCount === 0) setSearchShow(false);\n  };\n  const removeCompleteFromIncomplete = (id) => {\n    const filtertodos = todos.filter((todo) => todo.id !== id);\n    setTodos(filtertodos);\n  };\n  return (\n    <div className=\"App\">\n      {/* {splash && (\n        <div className=\"splash faddingOut\">\n          <div className=\"splashLogo\">\n            <div className=\"splashIconLogo\">\n              <Icon src=\"SplashLeaf\" />\n            </div>\n            <div>\n              <Icon src=\"SplashTitle\" />\n            </div>\n          </div>\n        </div>\n      )} */}\n      {\n        /* !splash && */ <div>\n          <Header\n            SearchToggle={SearchToggle}\n            searchShow={searchShow}\n            searchvalue={searchvalue}\n            dataCount={dataCount}\n          />\n          <div className=\"overToaster\">\n            <div className=\"toaster\">\n              {toasts.length > 0 &&\n                toasts.map((toast) => (\n                  <Toaster\n                    key={toast.id}\n                    className={`faddingOut toast toast--visible toast--${toast.type}`}\n                  >\n                    {toast.type === \"success\" && <Icon src=\"Check\" />}{\" \"}\n                    {toast.message}\n                  </Toaster>\n                ))}\n            </div>\n          </div>\n          <div className={`${showBigSpinner && \"blur\"}`}>\n            <Todos\n              todos={todos}\n              flag={flag}\n              flagHandler={flagHandler}\n              toasts={toasts}\n              setToasts={setToasts}\n              onRemoveTodo={handleRemoveTodo}\n              dataCount={dataCount}\n              setDataCount={setDataCount}\n              setShowEmpty={setShowEmpty}\n              removeCompleteFromIncomplete={removeCompleteFromIncomplete}\n            />\n          </div>\n\n          <div>\n            {showBigSpinner && (\n              <Icon className=\"spinning rotateFull\" src=\"Spin\" />\n            )}\n          </div>\n\n          {showEmpty && dataCount === 0 && !showBigSpinner && (\n            <div className={`emptyScreenOver `}>\n              <Icon src=\"EmptyScreen\" className=\"emptyScreen\" />\n              <Tag className=\"pleaseAdd\">\n                You didn't add any task. Please, add one.\n              </Tag>\n            </div>\n          )}\n          {showEmpty && dataCount > 0 && todos.length === 0 && !showBigSpinner && (\n            <div className={`emptyScreenOver `}>\n              <Icon src=\"EmptyScreen\" className=\"emptyScreen\" />\n              <Tag className=\"pleaseAdd\"> There is no data for {flag}</Tag>\n            </div>\n          )}\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}