{"ast":null,"code":"var _jsxFileName = \"/Users/mridha/Todo_in_React/todo/src/Todo.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { TextArea, Icon, Tag } from \"./App\";\nimport { Button } from \"./components/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Todo = _ref => {\n  _s();\n\n  let {\n    todo,\n    onDelete,\n    completeHandler,\n    editToggle,\n    setTodos,\n    allTodos,\n    toasts,\n    setToasts\n  } = _ref;\n  const [newName, setNewName] = useState(todo.name);\n\n  const edit = e => {\n    setNewName(e.target.value);\n  };\n\n  const [showLoading, setShowLoading] = useState(false);\n\n  const editValue = id => {\n    const index = allTodos.findIndex(todo => todo.id === id);\n\n    if (newName.length > 2 && allTodos[index].name !== newName) {\n      let tempTodos = [...allTodos];\n      tempTodos[index].name = newName;\n      setTodos(tempTodos);\n      let newToast = {\n        id: uuidv4(),\n        type: \"success\",\n        message: \"Task Edited\"\n      };\n      let allToast = [...toasts];\n      allToast.push(newToast);\n      setToasts(allToast);\n      editToggle(id);\n      setShowLoading(true);\n      setTimeout(() => {\n        setShowLoading(false);\n      }, 1000);\n    } else editToggle(id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"todo\",\n    className: \"todo\",\n    children: [todo.isEdit === true ? /*#__PURE__*/_jsxDEV(TextArea, {\n      id: \"editName\",\n      className: \"editName\",\n      value: newName,\n      onChange: edit,\n      autoFocus: true,\n      onFocus: e => {\n        var val = e.target.value;\n        e.target.value = \"\";\n        e.target.value = val;\n      },\n      onKeyPress: e => {\n        if (e.key === \"Enter\") {\n          e.preventDefault();\n          editValue(todo.id);\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Tag, {\n        id: \"showName\",\n        className: `${todo.completed_on && \"completed\"} ${(todo.isLoading || showLoading) && \"blur\"}`,\n        children: todo.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `createdAt ${(todo.isLoading || showLoading) && \"blur\"}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Tag, {\n          children: [\"Created At: \", todo.created_at]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `boxedButtonCompletedOn ${(todo.isLoading || showLoading) && \"blur\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"allBoxedButon\",\n        children: [todo.isEdit && /*#__PURE__*/_jsxDEV(Button, {\n          className: \"saveButton btn\",\n          onClick: () => editValue(todo.id),\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), !todo.completed_on && /*#__PURE__*/_jsxDEV(Button, {\n          className: \"boxedButton \",\n          onClick: () => {\n            completeHandler(todo.id);\n          },\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            src: \"Tick\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), !todo.completed_on && !todo.isEdit && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => editToggle(todo.id),\n          className: \"boxedButton \",\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            src: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"boxedButton\",\n          onClick: () => onDelete(todo.id),\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            src: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), todo.completed_on && /*#__PURE__*/_jsxDEV(Tag, {\n        className: \"completedOn\",\n        children: [\"completed in\", \" \", Math.ceil(Math.abs(Date.parse(todo.completed_on) - Date.parse(todo.created_at)) / (1000 * 60 * 60 * 24)), \" \", \"days\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), (todo.isLoading || showLoading) && /*#__PURE__*/_jsxDEV(Icon, {\n      className: \"spinning rotateDiv\",\n      src: \"Spin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Todo, \"5dskpy/bLPIdjg9m8Z5oLrzcov8=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/mridha/Todo_in_React/todo/src/Todo.jsx"],"names":["useState","v4","uuidv4","TextArea","Icon","Tag","Button","Todo","todo","onDelete","completeHandler","editToggle","setTodos","allTodos","toasts","setToasts","newName","setNewName","name","edit","e","target","value","showLoading","setShowLoading","editValue","id","index","findIndex","length","tempTodos","newToast","type","message","allToast","push","setTimeout","isEdit","val","key","preventDefault","completed_on","isLoading","created_at","Math","ceil","abs","Date","parse"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { TextArea, Icon, Tag } from \"./App\";\nimport { Button } from \"./components/Button\";\nconst Todo = ({\n  todo,\n  onDelete,\n  completeHandler,\n  editToggle,\n  setTodos,\n  allTodos,\n  toasts,\n  setToasts,\n}) => {\n  const [newName, setNewName] = useState(todo.name);\n  const edit = (e) => {\n    setNewName(e.target.value);\n  };\n  const [showLoading, setShowLoading] = useState(false);\n  const editValue = (id) => {\n    const index = allTodos.findIndex((todo) => todo.id === id);\n    if (newName.length > 2 && allTodos[index].name !== newName) {\n      let tempTodos = [...allTodos];\n      tempTodos[index].name = newName;\n      setTodos(tempTodos);\n      let newToast = {\n        id: uuidv4(),\n        type: \"success\",\n        message: \"Task Edited\",\n      };\n      let allToast = [...toasts];\n      allToast.push(newToast);\n      setToasts(allToast);\n      editToggle(id);\n      setShowLoading(true);\n      setTimeout(() => {\n        setShowLoading(false);\n      }, 1000);\n    } else editToggle(id);\n  };\n  return (\n    <div id=\"todo\" className=\"todo\">\n      {/* <div className={`${(todo.isLoading || showLoading) && \"blur\"}`}> */}\n      {todo.isEdit === true ? (\n        <TextArea\n          id=\"editName\"\n          className=\"editName\"\n          value={newName}\n          onChange={edit}\n          autoFocus\n          onFocus={(e) => {\n            var val = e.target.value;\n            e.target.value = \"\";\n            e.target.value = val;\n          }}\n          onKeyPress={(e) => {\n            if (e.key === \"Enter\") {\n              e.preventDefault();\n              editValue(todo.id);\n            }\n          }}\n        />\n      ) : (\n        <div>\n          <Tag\n            id=\"showName\"\n            className={`${todo.completed_on && \"completed\"} ${\n              (todo.isLoading || showLoading) && \"blur\"\n            }`}\n          >\n            {todo.name}\n          </Tag>\n        </div>\n      )}\n      <div className={`createdAt ${(todo.isLoading || showLoading) && \"blur\"}`}>\n        <div>\n          <Tag>Created At: {todo.created_at}</Tag>\n        </div>\n      </div>\n      <div\n        className={`boxedButtonCompletedOn ${\n          (todo.isLoading || showLoading) && \"blur\"\n        }`}\n      >\n        <div className=\"allBoxedButon\">\n          {todo.isEdit && (\n            <Button\n              className=\"saveButton btn\"\n              onClick={() => editValue(todo.id)}\n            >\n              Save\n            </Button>\n          )}\n          {!todo.completed_on && (\n            <Button\n              className=\"boxedButton \"\n              onClick={() => {\n                completeHandler(todo.id);\n              }}\n            >\n              <Icon src=\"Tick\" />\n            </Button>\n          )}\n          {!todo.completed_on && !todo.isEdit && (\n            <Button\n              onClick={() => editToggle(todo.id)}\n              className=\"boxedButton \"\n            >\n              <Icon src=\"Edit\" />\n            </Button>\n          )}\n          <Button className=\"boxedButton\" onClick={() => onDelete(todo.id)}>\n            <Icon src=\"Delete\" />\n          </Button>\n        </div>\n        {todo.completed_on && (\n          <Tag className=\"completedOn\">\n            completed in{\" \"}\n            {Math.ceil(\n              Math.abs(\n                Date.parse(todo.completed_on) - Date.parse(todo.created_at),\n              ) /\n                (1000 * 60 * 60 * 24),\n            )}{\" \"}\n            days\n          </Tag>\n        )}\n      </div>\n      {/* </div> */}\n      {(todo.isLoading || showLoading) && (\n        <Icon className=\"spinning rotateDiv\" src=\"Spin\" />\n      )}\n    </div>\n  );\n};\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}