{"ast":null,"code":"var _jsxFileName = \"/Users/mridha/Todo_in_React/todo/src/Todos.jsx\";\nimport React from \"react\";\nimport Todo from \"./Todo\";\nimport plus from \"./images/plus.svg\";\nimport spin from \"./images/bigspin.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst todos = _ref => {\n  let {\n    todos,\n    onDelete,\n    completeHandler,\n    show,\n    togglehandler,\n    addhandler,\n    setTaskvalue,\n    showSpinner,\n    showBigSpinner,\n    flagHandler\n  } = _ref;\n\n  const taskvalue = e => {\n    setTaskvalue(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${showBigSpinner && \"blur\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addTask\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"addTaskH1\",\n          children: \"Add Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"headerClass\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"create btn\",\n          onClick: togglehandler,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: plus,\n            alt: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), \" Create\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"topButton btn\",\n            onClick: e => {\n              flagHandler(\"all\");\n            },\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"topButton btn\",\n            onClick: e => {\n              flagHandler(\"incomplete\");\n            },\n            children: \"Incomplete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"topButton btn\",\n            onClick: e => {\n              flagHandler(\"complete\");\n            },\n            children: \"Complete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todos\",\n        children: [show && /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"todo\",\n          className: \"todo\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${showSpinner ? \"blur\" : null}`,\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"editName\",\n              placeholder: \"Add new task\",\n              autoFocus: true,\n              onChange: taskvalue,\n              readOnly: showSpinner,\n              onKeyPress: e => {\n                if (e.key === \"Enter\") {\n                  e.preventDefault();\n                  addhandler(e);\n                }\n              },\n              onFocus: function (e) {\n                var val = e.target.value;\n                e.target.value = \"\";\n                e.target.value = val;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"saveButton btn\",\n              onClick: addhandler,\n              children: \"Add Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: showSpinner && /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"spinning rotateDiv\",\n              src: spin,\n              alt: \"spin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), todos.slice(0, 4).map(todo => /*#__PURE__*/_jsxDEV(Todo, {\n          todo: todo,\n          onDelete: onDelete,\n          completeHandler: completeHandler\n        }, todo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: showBigSpinner && /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"spinning rotateFull\",\n        src: spin,\n        alt: \"spin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\nexport default todos;","map":{"version":3,"sources":["/Users/mridha/Todo_in_React/todo/src/Todos.jsx"],"names":["React","Todo","plus","spin","todos","onDelete","completeHandler","show","togglehandler","addhandler","setTaskvalue","showSpinner","showBigSpinner","flagHandler","taskvalue","e","target","value","key","preventDefault","val","slice","map","todo","id"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Todo from \"./Todo\";\nimport plus from \"./images/plus.svg\";\nimport spin from \"./images/bigspin.svg\";\nconst todos = ({\n  todos,\n  onDelete,\n  completeHandler,\n  show,\n  togglehandler,\n  addhandler,\n  setTaskvalue,\n  showSpinner,\n  showBigSpinner,\n  flagHandler,\n}) => {\n  const taskvalue = (e) => {\n    setTaskvalue(e.target.value);\n  };\n\n  return (\n    <div>\n      <div className={`${showBigSpinner && \"blur\"}`}>\n        <div className=\"addTask\">\n          <h1 className=\"addTaskH1\">Add Tasks</h1>\n        </div>\n\n        <div className=\"headerClass\">\n          <button className=\"create btn\" onClick={togglehandler}>\n            <img src={plus} alt=\"Edit\" /> Create\n          </button>\n          <div>\n            <button\n              className=\"topButton btn\"\n              onClick={(e) => {\n                flagHandler(\"all\");\n              }}\n            >\n              All\n            </button>\n            <button\n              className=\"topButton btn\"\n              onClick={(e) => {\n                flagHandler(\"incomplete\");\n              }}\n            >\n              Incomplete\n            </button>\n            <button\n              className=\"topButton btn\"\n              onClick={(e) => {\n                flagHandler(\"complete\");\n              }}\n            >\n              Complete\n            </button>\n          </div>\n        </div>\n        <div className=\"todos\">\n          {show && (\n            <div id=\"todo\" className=\"todo\">\n              <div className={`${showSpinner ? \"blur\" : null}`}>\n                <textarea\n                  className=\"editName\"\n                  placeholder=\"Add new task\"\n                  autoFocus\n                  onChange={taskvalue}\n                  readOnly={showSpinner}\n                  onKeyPress={(e) => {\n                    if (e.key === \"Enter\") {\n                      e.preventDefault();\n                      addhandler(e);\n                    }\n                  }}\n                  onFocus={function (e) {\n                    var val = e.target.value;\n                    e.target.value = \"\";\n                    e.target.value = val;\n                  }}\n                />\n                <button className=\"saveButton btn\" onClick={addhandler}>\n                  Add Task\n                </button>\n              </div>\n              <div>\n                {showSpinner && (\n                  <img className=\"spinning rotateDiv\" src={spin} alt=\"spin\" />\n                )}\n              </div>\n            </div>\n          )}\n          {todos.slice(0, 4).map((todo) => (\n            <Todo\n              todo={todo}\n              key={todo.id}\n              onDelete={onDelete}\n              completeHandler={completeHandler}\n            />\n          ))}\n        </div>\n      </div>\n      <div>\n        {showBigSpinner && (\n          <img className=\"spinning rotateFull\" src={spin} alt=\"spin\" />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default todos;\n"]},"metadata":{},"sourceType":"module"}