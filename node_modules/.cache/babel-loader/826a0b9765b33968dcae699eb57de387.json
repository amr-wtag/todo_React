{"ast":null,"code":"var _jsxFileName = \"/Users/mridha/Todo_in_React/todo/src/App.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable array-callback-return */\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport Todos from \"./Todos\";\nimport Header from \"./Header\";\nimport { Icon } from \"./components/Icon\";\nimport { Tag } from \"./components/Tag\";\nimport { Toaster } from \"./components/Toaster\";\nimport { supabase } from \"./client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const [toasts, setToasts] = useState([]); // eslint-disable-next-line\n\n  const [show, setShow] = useState(false);\n  const [showBigSpinner, setShowBigSpinner] = useState(false);\n  const [searchShow, setSearchShow] = useState(false);\n  const [flag, setFlag] = useState(\"all\");\n  const [showTodos, setShowTodos] = useState(todos);\n  const [search, setSearch] = useState(\"\"); // const [todoLength, setTodoLength] = useState(0);\n  // const [splash, setSplash] = useState(true);\n  //flag\n\n  const flagHandler = e => {\n    if (flag !== e) {\n      setFlag(e);\n    }\n  }; //search value\n\n\n  const searchvalue = e => {\n    if (e.length > 2\n    /*  || e.length === 0 */\n    ) {\n      setTimeout(() => {\n        setShowBigSpinner(true);\n      }, 500);\n      setTimeout(() => {\n        setSearch(e);\n        setShowBigSpinner(false);\n      }, 1500);\n    }\n  }; //search toggle\n\n\n  const SearchToggle = () => {\n    if (search !== \"\") {\n      setShowBigSpinner(true);\n      setTimeout(() => {\n        setSearch(\"\");\n        setShowBigSpinner(false);\n      }, 500);\n    }\n\n    setSearchShow(!searchShow);\n  }; //splash useEffect\n\n  /*  useEffect(() => {\n    setTimeout(() => {\n      setSplash(false);\n    }, 1000);\n  }, []); */\n  // useEffect\n\n\n  useEffect(() => {\n    // setTodoLength(todos.length);\n    const fetchData = async e => {\n      const arr = [];\n      setShowBigSpinner(true);\n\n      if (flag === \"all\") {\n        const {\n          data\n        } = await supabase.from(\"ReactTodo\").select().ilike(\"name\", `%${search}%`).order(\"id\", {\n          ascending: false\n        });\n        setTodos(data);\n      } else if (flag === \"incomplete\") {\n        const {\n          data\n        } = await supabase.from(\"todo\").select().ilike(\"name\", `%${search}%`).is(\"completed_on\", null).order(\"id\", {\n          ascending: false\n        });\n        setTodos(data);\n      } else {\n        const {\n          data\n        } = await supabase.from(\"todo\").select().ilike(\"name\", `%${search}%`).order(\"id\", {\n          ascending: false\n        }).not(\"completed_on\", \"is\", null);\n        setTodos(data);\n      }\n\n      if (todos === null || todos.length === 0) {\n        setFlag(\"all\");\n        setSearchShow(false);\n      }\n\n      setShowTodos(arr);\n      setShowBigSpinner(false);\n    };\n\n    fetchData();\n  }, [flag, todos, search, toasts]); //Toast useeffect\n\n  useEffect(() => {\n    if (toasts.length > 0) {\n      setTimeout(() => {\n        let allToast = [...toasts];\n        allToast.shift();\n        setToasts(allToast);\n      }, 500);\n    }\n  }, [toasts]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children:\n    /*#__PURE__*/\n\n    /* !splash && */\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        SearchToggle: SearchToggle,\n        searchShow: searchShow,\n        searchvalue: searchvalue // todoLength={todoLength}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overToaster\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toaster\",\n          children: toasts.length > 0 && toasts.map(toast => /*#__PURE__*/_jsxDEV(Toaster, {\n            className: `faddingOut toast toast--visible toast--${toast.type}`,\n            children: [toast.type === \"success\" && /*#__PURE__*/_jsxDEV(Icon, {\n              src: \"Check\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 50\n            }, this), \" \", toast.message]\n          }, toast.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${showBigSpinner && \"blur\"}`,\n        children: /*#__PURE__*/_jsxDEV(Todos, {\n          todos: showTodos,\n          allTodos: todos,\n          todoLength: todoLength,\n          flagHandler: flagHandler,\n          setTodos: setTodos,\n          toasts: toasts,\n          setToasts: setToasts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: showBigSpinner && /*#__PURE__*/_jsxDEV(Icon, {\n          className: \"spinning rotateFull\",\n          src: \"Spin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }, this), todoLength === 0 && !show && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `emptyScreenOver ${showBigSpinner && \"blur\"}`,\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          src: \"EmptyScreen\",\n          className: \"emptyScreen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Tag, {\n          className: \"pleaseAdd\",\n          children: \"You didn't add any task. Please, add one.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }, this), todoLength !== 0 && showTodos.length === 0 && !show && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `emptyScreenOver ${showBigSpinner && \"blur\"}`,\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          src: \"EmptyScreen\",\n          className: \"emptyScreen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Tag, {\n          className: \"pleaseAdd\",\n          children: [\" There is no data for \", flag]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 26\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Hib4NbgzSsOLGzEJmA7ANx4dMPA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mridha/Todo_in_React/todo/src/App.jsx"],"names":["useState","useEffect","Todos","Header","Icon","Tag","Toaster","supabase","App","todos","setTodos","toasts","setToasts","show","setShow","showBigSpinner","setShowBigSpinner","searchShow","setSearchShow","flag","setFlag","showTodos","setShowTodos","search","setSearch","flagHandler","e","searchvalue","length","setTimeout","SearchToggle","fetchData","arr","data","from","select","ilike","order","ascending","is","not","allToast","shift","map","toast","type","message","id","todoLength"],"mappings":"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","sourcesContent":["/* eslint-disable array-callback-return */\n\nimport \"./App.css\";\n\nimport { useState, useEffect } from \"react\";\nimport Todos from \"./Todos\";\nimport Header from \"./Header\";\nimport { Icon } from \"./components/Icon\";\nimport { Tag } from \"./components/Tag\";\nimport { Toaster } from \"./components/Toaster\";\nimport { supabase } from \"./client\";\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n\n  const [toasts, setToasts] = useState([]);\n  // eslint-disable-next-line\n  const [show, setShow] = useState(false);\n  const [showBigSpinner, setShowBigSpinner] = useState(false);\n  const [searchShow, setSearchShow] = useState(false);\n  const [flag, setFlag] = useState(\"all\");\n  const [showTodos, setShowTodos] = useState(todos);\n  const [search, setSearch] = useState(\"\");\n  // const [todoLength, setTodoLength] = useState(0);\n  // const [splash, setSplash] = useState(true);\n\n  //flag\n  const flagHandler = (e) => {\n    if (flag !== e) {\n      setFlag(e);\n    }\n  };\n\n  //search value\n  const searchvalue = (e) => {\n    if (e.length > 2 /*  || e.length === 0 */) {\n      setTimeout(() => {\n        setShowBigSpinner(true);\n      }, 500);\n      setTimeout(() => {\n        setSearch(e);\n        setShowBigSpinner(false);\n      }, 1500);\n    }\n  };\n\n  //search toggle\n  const SearchToggle = () => {\n    if (search !== \"\") {\n      setShowBigSpinner(true);\n      setTimeout(() => {\n        setSearch(\"\");\n        setShowBigSpinner(false);\n      }, 500);\n    }\n    setSearchShow(!searchShow);\n  };\n  //splash useEffect\n  /*  useEffect(() => {\n    setTimeout(() => {\n      setSplash(false);\n    }, 1000);\n  }, []); */\n  // useEffect\n  useEffect(() => {\n    // setTodoLength(todos.length);\n\n    const fetchData = async (e) => {\n      const arr = [];\n      setShowBigSpinner(true);\n      if (flag === \"all\") {\n        const { data } = await supabase\n          .from(\"ReactTodo\")\n          .select()\n          .ilike(\"name\", `%${search}%`)\n          .order(\"id\", { ascending: false });\n        setTodos(data);\n      } else if (flag === \"incomplete\") {\n        const { data } = await supabase\n          .from(\"todo\")\n          .select()\n          .ilike(\"name\", `%${search}%`)\n          .is(\"completed_on\", null)\n          .order(\"id\", { ascending: false });\n\n        setTodos(data);\n      } else {\n        const { data } = await supabase\n          .from(\"todo\")\n          .select()\n          .ilike(\"name\", `%${search}%`)\n          .order(\"id\", { ascending: false })\n          .not(\"completed_on\", \"is\", null);\n\n        setTodos(data);\n      }\n      if (todos === null || todos.length === 0) {\n        setFlag(\"all\");\n        setSearchShow(false);\n      }\n\n      setShowTodos(arr);\n      setShowBigSpinner(false);\n    };\n    fetchData();\n  }, [flag, todos, search, toasts]);\n  //Toast useeffect\n  useEffect(() => {\n    if (toasts.length > 0) {\n      setTimeout(() => {\n        let allToast = [...toasts];\n        allToast.shift();\n        setToasts(allToast);\n      }, 500);\n    }\n  }, [toasts]);\n  return (\n    <div className=\"App\">\n      {/* {splash && (\n        <div className=\"splash faddingOut\">\n          <div className=\"splashLogo\">\n            <div className=\"splashIconLogo\">\n              <Icon src=\"SplashLeaf\" />\n            </div>\n            <div>\n              <Icon src=\"SplashTitle\" />\n            </div>\n          </div>\n        </div>\n      )} */}\n      {\n        /* !splash && */ <div>\n          <Header\n            SearchToggle={SearchToggle}\n            searchShow={searchShow}\n            searchvalue={searchvalue}\n            // todoLength={todoLength}\n          />\n          <div className=\"overToaster\">\n            <div className=\"toaster\">\n              {toasts.length > 0 &&\n                toasts.map((toast) => (\n                  <Toaster\n                    key={toast.id}\n                    className={`faddingOut toast toast--visible toast--${toast.type}`}\n                  >\n                    {toast.type === \"success\" && <Icon src=\"Check\" />}{\" \"}\n                    {toast.message}\n                  </Toaster>\n                ))}\n            </div>\n          </div>\n          <div className={`${showBigSpinner && \"blur\"}`}>\n            <Todos\n              todos={showTodos}\n              allTodos={todos}\n              todoLength={todoLength}\n              flagHandler={flagHandler}\n              setTodos={setTodos}\n              toasts={toasts}\n              setToasts={setToasts}\n            />\n          </div>\n          {\n            <div>\n              {showBigSpinner && (\n                <Icon className=\"spinning rotateFull\" src=\"Spin\" />\n              )}\n            </div>\n          }\n          {todoLength === 0 && !show && (\n            <div className={`emptyScreenOver ${showBigSpinner && \"blur\"}`}>\n              <Icon src=\"EmptyScreen\" className=\"emptyScreen\" />\n              <Tag className=\"pleaseAdd\">\n                You didn't add any task. Please, add one.\n              </Tag>\n            </div>\n          )}\n          {todoLength !== 0 && showTodos.length === 0 && !show && (\n            <div className={`emptyScreenOver ${showBigSpinner && \"blur\"}`}>\n              <Icon src=\"EmptyScreen\" className=\"emptyScreen\" />\n              <Tag className=\"pleaseAdd\"> There is no data for {flag}</Tag>\n            </div>\n          )}\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}