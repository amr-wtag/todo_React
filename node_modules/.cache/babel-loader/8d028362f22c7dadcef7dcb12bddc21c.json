{"ast":null,"code":"var _jsxFileName = \"/Users/mridha/Todo_in_React/todo/src/components/Todo/Todo.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport TextArea from \"../TextArea\";\nimport Icon from \"../Icon\";\nimport Tag from \"../Tag\";\nimport Button from \"../Button\";\nimport { format } from \"date-fns\";\nimport { supabase } from \"../../config/apiClient\";\nimport { AppContext } from \"../../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Todo = _ref => {\n  _s();\n\n  let {\n    todo\n  } = _ref;\n  const {\n    handleRemoveTodo,\n    flag,\n    removeCompleteFromIncomplete,\n    toasts,\n    setToasts\n  } = useContext(AppContext);\n  const [newName, setNewName] = useState(todo.name);\n  const [showEdit, setShowEdit] = useState(false);\n  const [showLoading, setShowLoading] = useState(false);\n\n  const editToggle = e => {\n    setShowEdit(!showEdit);\n  };\n\n  const edit = e => {\n    setNewName(e.target.value);\n  }; // Delete task\n\n\n  const deletetodo = id => {\n    setShowLoading(true);\n    /* let error;\n    setTimeout(() => {\n      if (error !== null) { */\n\n    handleRemoveTodo(id); // setDataCount(dataCount - 1);\n    // }\n    // toaster\n\n    /* }, 500); */\n  }; // on Complete\n\n\n  const completeHandler = async e => {\n    setShowLoading(true);\n    console.log(flag);\n    const dateValue = new Date(Date.now());\n\n    try {\n      const {\n        data\n      } = await supabase.from(\"ReactTodo\").update({\n        completed_on: dateValue\n      }).match({\n        id: todo.id\n      });\n      todo.completed_on = data[0][\"completed_on\"];\n      if (flag === \"incomplete\") removeCompleteFromIncomplete(todo.id);\n      let newToast = {\n        id: uuidv4(),\n        type: \"success\",\n        message: \"Task Complted\"\n      };\n      setToasts([...toasts, newToast]);\n    } catch (error) {\n      let newToast = {\n        id: uuidv4(),\n        type: \"error\",\n        message: error\n      };\n      setToasts([...toasts, newToast]);\n    }\n\n    setShowLoading(false);\n  };\n\n  const editValue = async e => {\n    // setNewName(newName.trim().replace(/\\s+/g, \" \"));\n    if (newName.trim().replace(/\\s+/g, \" \").length > 2 && todo.name !== newName.trim().replace(/\\s+/g, \" \")) {\n      setShowLoading(true); // eslint-disable-next-line\n\n      const {\n        data,\n        error\n      } = await supabase.from(\"ReactTodo\").update({\n        name: newName.trim().replace(/\\s+/g, \" \")\n      }).match({\n        id: todo.id\n      });\n\n      if (error === null) {\n        todo.name = newName.trim().replace(/\\s+/g, \" \");\n        setNewName(newName.trim().replace(/\\s+/g, \" \"));\n      }\n\n      editToggle();\n      setShowLoading(false);\n      let newToast = {\n        id: uuidv4(),\n        type: error ? \"error\" : \"success\",\n        message: error ? error : \"Task Edited\"\n      };\n      setToasts([...toasts, newToast]);\n    } else {\n      setNewName(newName.trim().replace(/\\s+/g, \" \"));\n      editToggle();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"todo\",\n    className: \"todo\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [showEdit === true ? /*#__PURE__*/_jsxDEV(TextArea, {\n        id: \"editName\",\n        className: `editName ${(todo.isLoading || showLoading) && \"blur\"}`,\n        value: newName,\n        onChange: edit,\n        readOnly: showLoading,\n        autoFocus: true,\n        onFocus: e => {\n          var val = e.target.value;\n          e.target.value = \"\";\n          e.target.value = val;\n        },\n        onKeyPress: e => {\n          if (e.key === \"Enter\") {\n            e.preventDefault();\n            editValue(todo.id);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Tag, {\n          id: \"showName\",\n          className: `${todo.completed_on && \"completed\"} ${(todo.isLoading || showLoading) && \"blur\"}`,\n          children: todo.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this), !showEdit && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `createdAt ${(todo.isLoading || showLoading) && \"blur\"}`,\n        children: [\"Created At: \", format(new Date(todo.created_at), \"dd.MM.yy\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `boxedButtonCompletedOn ${(todo.isLoading || showLoading) && \"blur\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"allBoxedButon\",\n        children: [showEdit && /*#__PURE__*/_jsxDEV(Button, {\n          className: \"saveButton \",\n          onClick: () => editValue(todo.id),\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), !todo.completed_on && /*#__PURE__*/_jsxDEV(Button, {\n          className: \"boxedButton \",\n          onClick: () => {\n            completeHandler(todo.id);\n          },\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            src: \"Tick\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this), !todo.completed_on && !showEdit && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: editToggle,\n          className: \"boxedButton \",\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            src: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"boxedButton\",\n          onClick: () => deletetodo(todo.id),\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            src: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), todo.completed_on && /*#__PURE__*/_jsxDEV(Tag, {\n        className: \"completedOn\",\n        children: [\"Completed in\", \" \", Math.ceil(Math.abs(Date.parse(todo.completed_on) - Date.parse(todo.created_at)) / (1000 * 60 * 60 * 24)), \" \", \"days\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), (todo.isLoading || showLoading) && /*#__PURE__*/_jsxDEV(Icon, {\n      className: \"spinning rotateDiv\",\n      src: \"Spin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Todo, \"T9YfnH4nM14AU5oTXfcMZV+osuE=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/mridha/Todo_in_React/todo/src/components/Todo/Todo.jsx"],"names":["useState","useContext","v4","uuidv4","TextArea","Icon","Tag","Button","format","supabase","AppContext","Todo","todo","handleRemoveTodo","flag","removeCompleteFromIncomplete","toasts","setToasts","newName","setNewName","name","showEdit","setShowEdit","showLoading","setShowLoading","editToggle","e","edit","target","value","deletetodo","id","completeHandler","console","log","dateValue","Date","now","data","from","update","completed_on","match","newToast","type","message","error","editValue","trim","replace","length","isLoading","val","key","preventDefault","created_at","Math","ceil","abs","parse"],"mappings":"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","sourcesContent":["import { useState, useContext } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport TextArea from \"../TextArea\";\nimport Icon from \"../Icon\";\nimport Tag from \"../Tag\";\nimport Button from \"../Button\";\nimport { format } from \"date-fns\";\nimport { supabase } from \"../../config/apiClient\";\nimport { AppContext } from \"../../App\";\nconst Todo = ({ todo }) => {\n  const {\n    handleRemoveTodo,\n    flag,\n    removeCompleteFromIncomplete,\n    toasts,\n    setToasts,\n  } = useContext(AppContext);\n  const [newName, setNewName] = useState(todo.name);\n  const [showEdit, setShowEdit] = useState(false);\n  const [showLoading, setShowLoading] = useState(false);\n  const editToggle = (e) => {\n    setShowEdit(!showEdit);\n  };\n  const edit = (e) => {\n    setNewName(e.target.value);\n  };\n  // Delete task\n  const deletetodo = (id) => {\n    setShowLoading(true);\n    /* let error;\n    setTimeout(() => {\n      if (error !== null) { */\n    handleRemoveTodo(id);\n    // setDataCount(dataCount - 1);\n    // }\n    // toaster\n\n    /* }, 500); */\n  };\n  // on Complete\n\n  const completeHandler = async (e) => {\n    setShowLoading(true);\n    console.log(flag);\n    const dateValue = new Date(Date.now());\n    try {\n      const { data } = await supabase\n        .from(\"ReactTodo\")\n        .update({ completed_on: dateValue })\n        .match({ id: todo.id });\n\n      todo.completed_on = data[0][\"completed_on\"];\n      if (flag === \"incomplete\") removeCompleteFromIncomplete(todo.id);\n      let newToast = {\n        id: uuidv4(),\n        type: \"success\",\n        message: \"Task Complted\",\n      };\n      setToasts([...toasts, newToast]);\n    } catch (error) {\n      let newToast = {\n        id: uuidv4(),\n        type: \"error\",\n        message: error,\n      };\n      setToasts([...toasts, newToast]);\n    }\n\n    setShowLoading(false);\n  };\n\n  const editValue = async (e) => {\n    // setNewName(newName.trim().replace(/\\s+/g, \" \"));\n    if (\n      newName.trim().replace(/\\s+/g, \" \").length > 2 &&\n      todo.name !== newName.trim().replace(/\\s+/g, \" \")\n    ) {\n      setShowLoading(true);\n      // eslint-disable-next-line\n      const { data, error } = await supabase\n        .from(\"ReactTodo\")\n        .update({ name: newName.trim().replace(/\\s+/g, \" \") })\n        .match({ id: todo.id });\n      if (error === null) {\n        todo.name = newName.trim().replace(/\\s+/g, \" \");\n        setNewName(newName.trim().replace(/\\s+/g, \" \"));\n      }\n      editToggle();\n      setShowLoading(false);\n      let newToast = {\n        id: uuidv4(),\n        type: error ? \"error\" : \"success\",\n        message: error ? error : \"Task Edited\",\n      };\n      setToasts([...toasts, newToast]);\n    } else {\n      setNewName(newName.trim().replace(/\\s+/g, \" \"));\n      editToggle();\n    }\n  };\n\n  return (\n    <div id=\"todo\" className=\"todo\">\n      <div>\n        {showEdit === true ? (\n          <TextArea\n            id=\"editName\"\n            className={`editName ${(todo.isLoading || showLoading) && \"blur\"}`}\n            value={newName}\n            onChange={edit}\n            readOnly={showLoading}\n            autoFocus\n            onFocus={(e) => {\n              var val = e.target.value;\n              e.target.value = \"\";\n              e.target.value = val;\n            }}\n            onKeyPress={(e) => {\n              if (e.key === \"Enter\") {\n                e.preventDefault();\n                editValue(todo.id);\n              }\n            }}\n          />\n        ) : (\n          <div>\n            <Tag\n              id=\"showName\"\n              className={`${todo.completed_on && \"completed\"} ${\n                (todo.isLoading || showLoading) && \"blur\"\n              }`}\n            >\n              {todo.name}\n            </Tag>\n          </div>\n        )}\n        {!showEdit && (\n          <div\n            className={`createdAt ${(todo.isLoading || showLoading) && \"blur\"}`}\n          >\n            Created At: {format(new Date(todo.created_at), \"dd.MM.yy\")}\n          </div>\n        )}\n      </div>\n      <div\n        className={`boxedButtonCompletedOn ${\n          (todo.isLoading || showLoading) && \"blur\"\n        }`}\n      >\n        <div className=\"allBoxedButon\">\n          {showEdit && (\n            <Button className=\"saveButton \" onClick={() => editValue(todo.id)}>\n              Save\n            </Button>\n          )}\n          {!todo.completed_on && (\n            <Button\n              className=\"boxedButton \"\n              onClick={() => {\n                completeHandler(todo.id);\n              }}\n            >\n              <Icon src=\"Tick\" />\n            </Button>\n          )}\n          {!todo.completed_on && !showEdit && (\n            <Button onClick={editToggle} className=\"boxedButton \">\n              <Icon src=\"Edit\" />\n            </Button>\n          )}\n          <Button className=\"boxedButton\" onClick={() => deletetodo(todo.id)}>\n            <Icon src=\"Delete\" />\n          </Button>\n        </div>\n        {todo.completed_on && (\n          <Tag className=\"completedOn\">\n            Completed in{\" \"}\n            {Math.ceil(\n              Math.abs(\n                Date.parse(todo.completed_on) - Date.parse(todo.created_at),\n              ) /\n                (1000 * 60 * 60 * 24),\n            )}{\" \"}\n            days\n          </Tag>\n        )}\n      </div>\n\n      {(todo.isLoading || showLoading) && (\n        <Icon className=\"spinning rotateDiv\" src=\"Spin\" />\n      )}\n    </div>\n  );\n};\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}