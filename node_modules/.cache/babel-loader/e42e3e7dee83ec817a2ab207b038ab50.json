{"ast":null,"code":"var _jsxFileName = \"/Users/mridha/Todo_in_React/todo/src/Todos.jsx\";\nimport React from \"react\";\nimport Todo from \"./Todo\";\nimport plus from \"./images/plus.svg\";\nimport spin from \"./images/bigspin.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst todos = _ref => {\n  let {\n    todos,\n    onDelete,\n    completeHandler,\n    show,\n    togglehandler,\n    addhandler,\n    task,\n    showSpinner,\n    showBigSpinner,\n    flagHandler\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${showBigSpinner && \"blur\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addTask\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"addTaskH1\",\n          children: \"Add Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"headerClass\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"create btn\",\n          onClick: togglehandler,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: plus,\n            alt: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), \" Create\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"topButton btn\",\n            onClick: e => {\n              flagHandler(\"all\");\n            },\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"topButton btn\",\n            onClick: e => {\n              flagHandler(\"incomplete\");\n            },\n            children: \"Incomplete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"topButton btn\",\n            onClick: e => {\n              flagHandler(\"complete\");\n            },\n            children: \"Complete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todos\",\n        children: todos.map(todo => /*#__PURE__*/_jsxDEV(Todo, {\n          todo: todo,\n          onDelete: onDelete,\n          completeHandler: completeHandler\n        }, todo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\nexport default todos;","map":{"version":3,"sources":["/Users/mridha/Todo_in_React/todo/src/Todos.jsx"],"names":["React","Todo","plus","spin","todos","onDelete","completeHandler","show","togglehandler","addhandler","task","showSpinner","showBigSpinner","flagHandler","e","map","todo","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;;;AACA,MAAMC,KAAK,GAAG,QAWR;AAAA,MAXS;AACbA,IAAAA,KADa;AAEbC,IAAAA,QAFa;AAGbC,IAAAA,eAHa;AAIbC,IAAAA,IAJa;AAKbC,IAAAA,aALa;AAMbC,IAAAA,UANa;AAObC,IAAAA,IAPa;AAQbC,IAAAA,WARa;AASbC,IAAAA,cATa;AAUbC,IAAAA;AAVa,GAWT;AACJ,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAG,GAAED,cAAc,IAAI,MAAO,EAA5C;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,+BACE;AAAI,UAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACE;AAAQ,UAAA,SAAS,EAAC,YAAlB;AAA+B,UAAA,OAAO,EAAEJ,aAAxC;AAAA,kCACE;AAAK,YAAA,GAAG,EAAEN,IAAV;AAAgB,YAAA,GAAG,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA,kBADF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAA,kCACE;AACE,YAAA,SAAS,EAAC,eADZ;AAEE,YAAA,OAAO,EAAGY,CAAD,IAAO;AACdD,cAAAA,WAAW,CAAC,KAAD,CAAX;AACD,aAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eASE;AACE,YAAA,SAAS,EAAC,eADZ;AAEE,YAAA,OAAO,EAAGC,CAAD,IAAO;AACdD,cAAAA,WAAW,CAAC,YAAD,CAAX;AACD,aAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF,eAiBE;AACE,YAAA,SAAS,EAAC,eADZ;AAEE,YAAA,OAAO,EAAGC,CAAD,IAAO;AACdD,cAAAA,WAAW,CAAC,UAAD,CAAX;AACD,aAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAoCE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,kBAiCGT,KAAK,CAACW,GAAN,CAAWC,IAAD,iBACT,QAAC,IAAD;AACE,UAAA,IAAI,EAAEA,IADR;AAGE,UAAA,QAAQ,EAAEX,QAHZ;AAIE,UAAA,eAAe,EAAEC;AAJnB,WAEOU,IAAI,CAACC,EAFZ;AAAA;AAAA;AAAA;AAAA,gBADD;AAjCH;AAAA;AAAA;AAAA;AAAA,cApCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmFD,CA/FD;;AAiGA,eAAeb,KAAf","sourcesContent":["import React from \"react\";\nimport Todo from \"./Todo\";\nimport plus from \"./images/plus.svg\";\nimport spin from \"./images/bigspin.svg\";\nconst todos = ({\n  todos,\n  onDelete,\n  completeHandler,\n  show,\n  togglehandler,\n  addhandler,\n  task,\n  showSpinner,\n  showBigSpinner,\n  flagHandler,\n}) => {\n  return (\n    <div>\n      <div className={`${showBigSpinner && \"blur\"}`}>\n        <div className=\"addTask\">\n          <h1 className=\"addTaskH1\">Add Tasks</h1>\n        </div>\n\n        <div className=\"headerClass\">\n          <button className=\"create btn\" onClick={togglehandler}>\n            <img src={plus} alt=\"Edit\" /> Create\n          </button>\n          <div>\n            <button\n              className=\"topButton btn\"\n              onClick={(e) => {\n                flagHandler(\"all\");\n              }}\n            >\n              All\n            </button>\n            <button\n              className=\"topButton btn\"\n              onClick={(e) => {\n                flagHandler(\"incomplete\");\n              }}\n            >\n              Incomplete\n            </button>\n            <button\n              className=\"topButton btn\"\n              onClick={(e) => {\n                flagHandler(\"complete\");\n              }}\n            >\n              Complete\n            </button>\n          </div>\n        </div>\n        <div className=\"todos\">\n          {/* {show && (\n            <div id=\"todo\" className=\"todo\">\n              <div className={`${showSpinner ? \"blur\" : null}`}>\n                <textarea\n                  className=\"editName\"\n                  placeholder=\"Add new task\"\n                  autoFocus\n                  onChange={task}\n                  readOnly={showSpinner}\n                  onKeyPress={(e) => {\n                    if (e.key === \"Enter\") {\n                      e.preventDefault();\n                      addhandler(e);\n                    }\n                  }}\n                  onFocus={function (e) {\n                    var val = e.target.value;\n                    e.target.value = \"\";\n                    e.target.value = val;\n                  }}\n                />\n                <button className=\"saveButton btn\" onClick={addhandler}>\n                  Add Task\n                </button>\n              </div>\n              <div>\n                {showSpinner && (\n                  <img className=\"spinning rotateDiv\" src={spin} alt=\"spin\" />\n                )}\n              </div>\n            </div>\n          )} */}\n          {todos.map((todo) => (\n            <Todo\n              todo={todo}\n              key={todo.id}\n              onDelete={onDelete}\n              completeHandler={completeHandler}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default todos;\n"]},"metadata":{},"sourceType":"module"}