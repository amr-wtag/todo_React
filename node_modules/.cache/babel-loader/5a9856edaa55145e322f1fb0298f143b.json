{"ast":null,"code":"import crossFetch from 'cross-fetch';\nexport function expiresAt(expiresIn) {\n  const timeNow = Math.round(Date.now() / 1000);\n  return timeNow + expiresIn;\n}\nexport function uuid() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = Math.random() * 16 | 0,\n          v = c == 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n}\nexport const isBrowser = () => typeof window !== 'undefined';\nexport function getParameterByName(name, url) {\n  var _a;\n\n  if (!url) url = ((_a = window === null || window === void 0 ? void 0 : window.location) === null || _a === void 0 ? void 0 : _a.href) || ''; // eslint-disable-next-line no-useless-escape\n\n  name = name.replace(/[\\[\\]]/g, '\\\\$&');\n  const regex = new RegExp('[?&#]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n  if (!results) return null;\n  if (!results[2]) return '';\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n}\nexport const resolveFetch = customFetch => {\n  let _fetch;\n\n  if (customFetch) {\n    _fetch = customFetch;\n  } else if (typeof fetch === 'undefined') {\n    _fetch = crossFetch;\n  } else {\n    _fetch = fetch;\n  }\n\n  return function () {\n    return _fetch(...arguments);\n  };\n};","map":{"version":3,"mappings":"AAAA,OAAOA,UAAP,MAAuB,aAAvB;AAEA,OAAM,SAAUC,SAAV,CAAoBC,SAApB,EAAqC;AACzC,QAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWC,IAAI,CAACC,GAAL,KAAa,IAAxB,CAAhB;AACA,SAAOJ,OAAO,GAAGD,SAAjB;AACD;AAED,OAAM,SAAUM,IAAV,GAAc;AAClB,SAAO,uCAAuCC,OAAvC,CAA+C,OAA/C,EAAwD,UAAUC,CAAV,EAAW;AACxE,UAAMC,CAAC,GAAIP,IAAI,CAACQ,MAAL,KAAgB,EAAjB,GAAuB,CAAjC;AAAA,UACEC,CAAC,GAAGH,CAAC,IAAI,GAAL,GAAWC,CAAX,GAAgBA,CAAC,GAAG,GAAL,GAAY,GADjC;AAEA,WAAOE,CAAC,CAACC,QAAF,CAAW,EAAX,CAAP;AACD,GAJM,CAAP;AAKD;AAED,OAAO,MAAMC,SAAS,GAAG,MAAM,OAAOC,MAAP,KAAkB,WAA1C;AAEP,OAAM,SAAUC,kBAAV,CAA6BC,IAA7B,EAA2CC,GAA3C,EAAuD;;;AAC3D,MAAI,CAACA,GAAL,EAAUA,GAAG,GAAG,aAAM,SAAN,UAAM,WAAN,GAAM,MAAN,SAAM,CAAEC,QAAR,MAAgB,IAAhB,IAAgBC,aAAhB,GAAgB,MAAhB,GAAgBA,GAAEC,IAAlB,KAA0B,EAAhC,CADiD,CAE3D;;AACAJ,MAAI,GAAGA,IAAI,CAACT,OAAL,CAAa,SAAb,EAAwB,MAAxB,CAAP;AACA,QAAMc,KAAK,GAAG,IAAIC,MAAJ,CAAW,UAAUN,IAAV,GAAiB,mBAA5B,CAAd;AAAA,QACEO,OAAO,GAAGF,KAAK,CAACG,IAAN,CAAWP,GAAX,CADZ;AAEA,MAAI,CAACM,OAAL,EAAc,OAAO,IAAP;AACd,MAAI,CAACA,OAAO,CAAC,CAAD,CAAZ,EAAiB,OAAO,EAAP;AACjB,SAAOE,kBAAkB,CAACF,OAAO,CAAC,CAAD,CAAP,CAAWhB,OAAX,CAAmB,KAAnB,EAA0B,GAA1B,CAAD,CAAzB;AACD;AAID,OAAO,MAAMmB,YAAY,GAAIC,WAAD,IAA+B;AACzD,MAAIC,MAAJ;;AACA,MAAID,WAAJ,EAAiB;AACfC,UAAM,GAAGD,WAAT;AACD,GAFD,MAEO,IAAI,OAAOE,KAAP,KAAiB,WAArB,EAAkC;AACvCD,UAAM,GAAG9B,UAAT;AACD,GAFM,MAEA;AACL8B,UAAM,GAAGC,KAAT;AACD;;AACD,SAAO;AAAA,WAAaD,MAAM,CAAC,YAAD,CAAnB;AAAA,GAAP;AACD,CAVM","names":["crossFetch","expiresAt","expiresIn","timeNow","Math","round","Date","now","uuid","replace","c","r","random","v","toString","isBrowser","window","getParameterByName","name","url","location","_a","href","regex","RegExp","results","exec","decodeURIComponent","resolveFetch","customFetch","_fetch","fetch"],"sources":["/Users/mridha/Todo_in_React/todo/node_modules/@supabase/gotrue-js/src/lib/helpers.ts"],"sourcesContent":["import crossFetch from 'cross-fetch'\n\nexport function expiresAt(expiresIn: number) {\n  const timeNow = Math.round(Date.now() / 1000)\n  return timeNow + expiresIn\n}\n\nexport function uuid() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0,\n      v = c == 'x' ? r : (r & 0x3) | 0x8\n    return v.toString(16)\n  })\n}\n\nexport const isBrowser = () => typeof window !== 'undefined'\n\nexport function getParameterByName(name: string, url?: string) {\n  if (!url) url = window?.location?.href || ''\n  // eslint-disable-next-line no-useless-escape\n  name = name.replace(/[\\[\\]]/g, '\\\\$&')\n  const regex = new RegExp('[?&#]' + name + '(=([^&#]*)|&|#|$)'),\n    results = regex.exec(url)\n  if (!results) return null\n  if (!results[2]) return ''\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '))\n}\n\ntype Fetch = typeof fetch\n\nexport const resolveFetch = (customFetch?: Fetch): Fetch => {\n  let _fetch: Fetch\n  if (customFetch) {\n    _fetch = customFetch\n  } else if (typeof fetch === 'undefined') {\n    _fetch = crossFetch as unknown as Fetch\n  } else {\n    _fetch = fetch\n  }\n  return (...args) => _fetch(...args)\n}\n"]},"metadata":{},"sourceType":"module"}