{"ast":null,"code":"var _jsxFileName = \"/Users/mridha/Todo_in_React/todo/src/contexts/AppContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport App from \"../App\";\nimport Todos from \"../components/Todos/Todos\";\nimport { supabase } from \"../config/apiClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/React.createContext();\nexport default function AppContextfile() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const [toasts, setToasts] = useState([]);\n  const [showEmpty, setShowEmpty] = useState(true);\n  const [showBigSpinner, setShowBigSpinner] = useState(false);\n  const [searchShow, setSearchShow] = useState(false);\n  const [flag, setFlag] = useState(\"all\");\n  const [search, setSearch] = useState(\"\");\n  const [dataCount, setDataCount] = useState(0);\n  const [splash, setSplash] = useState(true); //flag\n\n  const flagHandler = e => {\n    if (flag !== e) {\n      setFlag(e);\n    }\n  }; //search value\n\n\n  const searchvalue = e => {\n    if (e.length > 2) {\n      setTimeout(() => {\n        setShowBigSpinner(true);\n      }, 500);\n      setTimeout(() => {\n        setSearch(e);\n        setShowBigSpinner(false);\n      }, 1500);\n    }\n  }; //search toggle\n\n\n  const SearchToggle = () => {\n    if (search !== \"\") {\n      setShowBigSpinner(true);\n      setTimeout(() => {\n        setSearch(\"\");\n        setShowBigSpinner(false);\n      }, 500);\n    }\n\n    setSearchShow(!searchShow);\n  };\n\n  const handleRemoveTodo = async id => {\n    try {\n      // eslint-disable-next-line\n      const {\n        data\n      } = await supabase.from(\"ReactTodo\").delete().match({\n        id: id\n      });\n      let newToast = {\n        id: uuidv4(),\n        type: \"success\",\n        message: \"Task Deleted\"\n      };\n      setDataCount(dataCount - 1);\n      setToasts([...toasts, newToast]);\n    } catch (error) {\n      let newToast = {\n        id: uuidv4(),\n        type: \"error\",\n        message: error\n      };\n      setToasts([...toasts, newToast]);\n    }\n\n    removeCompleteFromIncomplete(id);\n\n    if (dataCount === 1) {\n      setSearchShow(false);\n      setFlag(\"all\");\n    }\n  };\n\n  const removeCompleteFromIncomplete = id => {\n    const filtertodos = todos.filter(todo => todo.id !== id);\n    setTodos(filtertodos);\n  };\n\n  useEffect(() => {\n    const fetchData = async e => {\n      setShowBigSpinner(true);\n\n      if (flag === \"all\") {\n        const {\n          data\n        } = await supabase.from(\"ReactTodo\").select().ilike(\"name\", `%${search}%`).order(\"id\", {\n          ascending: false\n        });\n        setTodos([]); // setDataCount(data.length);\n\n        setTodos(data);\n\n        if (splash) {\n          setDataCount(data.length);\n          setSplash(false);\n        }\n      } else if (flag === \"incomplete\") {\n        const {\n          data\n        } = await supabase.from(\"ReactTodo\").select().ilike(\"name\", `%${search}%`).is(\"completed_on\", null).order(\"id\", {\n          ascending: false\n        });\n        setTodos([]);\n        setTodos(data);\n      } else {\n        const {\n          data\n        } = await supabase.from(\"ReactTodo\").select().ilike(\"name\", `%${search}%`).order(\"id\", {\n          ascending: false\n        }).not(\"completed_on\", \"is\", null);\n        setTodos([]);\n        setTodos(data);\n      }\n      /*  if (todos === null || todos.length === undefined) {\n        setFlag(\"all\");\n        setSearchShow(false);\n      } */\n      // console.log(todos.length);\n\n\n      setShowBigSpinner(false);\n    };\n\n    fetchData(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [flag, search]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AppContext.Provider, {\n      value: {\n        todos,\n        flag,\n        flagHandler,\n        toasts,\n        setToasts,\n        handleRemoveTodo,\n        dataCount,\n        setDataCount,\n        setShowEmpty,\n        removeCompleteFromIncomplete,\n        searchvalue,\n        SearchToggle,\n        searchShow\n      },\n      children: /*#__PURE__*/_jsxDEV(Todos, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n      value: {\n        setShowBigSpinner,\n        todos,\n        flag,\n        search,\n        setTodos,\n        splash,\n        setDataCount,\n        setSplash,\n        toasts,\n        setToasts,\n        dataCount,\n        showBigSpinner,\n        showEmpty\n      },\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AppContextfile, \"Ywa9PxBxSQsB1G67Tr+NOIT26EA=\");\n\n_c = AppContextfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppContextfile\");","map":{"version":3,"sources":["/Users/mridha/Todo_in_React/todo/src/contexts/AppContext.js"],"names":["React","useState","useEffect","v4","uuidv4","App","Todos","supabase","AppContext","createContext","AppContextfile","todos","setTodos","toasts","setToasts","showEmpty","setShowEmpty","showBigSpinner","setShowBigSpinner","searchShow","setSearchShow","flag","setFlag","search","setSearch","dataCount","setDataCount","splash","setSplash","flagHandler","e","searchvalue","length","setTimeout","SearchToggle","handleRemoveTodo","id","data","from","delete","match","newToast","type","message","error","removeCompleteFromIncomplete","filtertodos","filter","todo","fetchData","select","ilike","order","ascending","is","not"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport App from \"../App\";\nimport Todos from \"../components/Todos/Todos\";\nimport { supabase } from \"../config/apiClient\";\n\nexport const AppContext = React.createContext();\nexport default function AppContextfile() {\n  const [todos, setTodos] = useState([]);\n\n  const [toasts, setToasts] = useState([]);\n  const [showEmpty, setShowEmpty] = useState(true);\n  const [showBigSpinner, setShowBigSpinner] = useState(false);\n  const [searchShow, setSearchShow] = useState(false);\n  const [flag, setFlag] = useState(\"all\");\n  const [search, setSearch] = useState(\"\");\n  const [dataCount, setDataCount] = useState(0);\n  const [splash, setSplash] = useState(true);\n\n  //flag\n  const flagHandler = (e) => {\n    if (flag !== e) {\n      setFlag(e);\n    }\n  };\n\n  //search value\n  const searchvalue = (e) => {\n    if (e.length > 2) {\n      setTimeout(() => {\n        setShowBigSpinner(true);\n      }, 500);\n      setTimeout(() => {\n        setSearch(e);\n        setShowBigSpinner(false);\n      }, 1500);\n    }\n  };\n\n  //search toggle\n  const SearchToggle = () => {\n    if (search !== \"\") {\n      setShowBigSpinner(true);\n      setTimeout(() => {\n        setSearch(\"\");\n        setShowBigSpinner(false);\n      }, 500);\n    }\n    setSearchShow(!searchShow);\n  };\n  const handleRemoveTodo = async (id) => {\n    try {\n      // eslint-disable-next-line\n      const { data } = await supabase\n        .from(\"ReactTodo\")\n        .delete()\n        .match({ id: id });\n      let newToast = {\n        id: uuidv4(),\n        type: \"success\",\n        message: \"Task Deleted\",\n      };\n      setDataCount(dataCount - 1);\n      setToasts([...toasts, newToast]);\n    } catch (error) {\n      let newToast = {\n        id: uuidv4(),\n        type: \"error\",\n        message: error,\n      };\n      setToasts([...toasts, newToast]);\n    }\n    removeCompleteFromIncomplete(id);\n    if (dataCount === 1) {\n      setSearchShow(false);\n      setFlag(\"all\");\n    }\n  };\n  const removeCompleteFromIncomplete = (id) => {\n    const filtertodos = todos.filter((todo) => todo.id !== id);\n    setTodos(filtertodos);\n  };\n  useEffect(() => {\n    const fetchData = async (e) => {\n      setShowBigSpinner(true);\n      if (flag === \"all\") {\n        const { data } = await supabase\n          .from(\"ReactTodo\")\n          .select()\n          .ilike(\"name\", `%${search}%`)\n          .order(\"id\", { ascending: false });\n        setTodos([]);\n        // setDataCount(data.length);\n        setTodos(data);\n        if (splash) {\n          setDataCount(data.length);\n          setSplash(false);\n        }\n      } else if (flag === \"incomplete\") {\n        const { data } = await supabase\n          .from(\"ReactTodo\")\n          .select()\n          .ilike(\"name\", `%${search}%`)\n          .is(\"completed_on\", null)\n          .order(\"id\", { ascending: false });\n\n        setTodos([]);\n        setTodos(data);\n      } else {\n        const { data } = await supabase\n          .from(\"ReactTodo\")\n          .select()\n          .ilike(\"name\", `%${search}%`)\n          .order(\"id\", { ascending: false })\n          .not(\"completed_on\", \"is\", null);\n\n        setTodos([]);\n        setTodos(data);\n      }\n      /*  if (todos === null || todos.length === undefined) {\n        setFlag(\"all\");\n        setSearchShow(false);\n      } */\n      // console.log(todos.length);\n      setShowBigSpinner(false);\n    };\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [flag, search]);\n  return (\n    <div>\n      <AppContext.Provider\n        value={{\n          todos,\n          flag,\n          flagHandler,\n          toasts,\n          setToasts,\n          handleRemoveTodo,\n          dataCount,\n          setDataCount,\n          setShowEmpty,\n          removeCompleteFromIncomplete,\n          searchvalue,\n          SearchToggle,\n          searchShow,\n        }}\n      >\n        <Todos />\n      </AppContext.Provider>\n      <AppContext.Provider\n        value={{\n          setShowBigSpinner,\n          todos,\n          flag,\n          search,\n          setTodos,\n          splash,\n          setDataCount,\n          setSplash,\n          toasts,\n          setToasts,\n          dataCount,\n          showBigSpinner,\n          showEmpty,\n        }}\n      >\n        <App />\n      </AppContext.Provider>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}