{"ast":null,"code":"var _jsxFileName = \"/Users/mridha/Todo_in_React/todo/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport Todos from \"./Todos\";\nimport Header from \"./Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState([{\n    id: 1,\n    name: \"Hello\",\n    created_at: \"2022-03-30\",\n    completed_on: \"2022-04-05\",\n    isLoading: false\n  }, {\n    id: 2,\n    name: \"Hola\",\n    created_at: \"2022-03-31\",\n    completed_on: null,\n    isLoading: false\n  }, {\n    id: 3,\n    name: \"dshdksgh\",\n    created_at: \"2022-04-07\",\n    completed_on: \"2022-04-07\",\n    isLoading: false\n  }, {\n    id: 4,\n    name: \"Running\",\n    created_at: \"2022-03-30\",\n    completed_on: \"2022-04-05\",\n    isLoading: false\n  }]);\n  const [showSpinner, setShowSpinner] = useState(false); // Delete task\n\n  const deletetodo = id => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  }; // on Complete\n\n\n  const completeHandler = id => {\n    const index = todos.findIndex(todo => todo.id === id); // todos[index].isLoading = true;\n\n    setTimeout(() => {\n      let tempTodos = [...todos];\n      const d = new Date(Date.now());\n      tempTodos[index].completed_on = `${d.getFullYear()} - ${d.getMonth()} - ${d.getDate()}`; // todos[index].isLoading = false;\n\n      setTodos(tempTodos);\n    }, 1000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Todos, {\n      todos: todos,\n      onDelete: deletetodo,\n      completeHandler: completeHandler,\n      showSpinner: showSpinner\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"y/GQaSvKNz+J+dOx/XnagQijD9M=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mridha/Todo_in_React/todo/src/App.jsx"],"names":["useState","useEffect","Todos","Header","App","todos","setTodos","id","name","created_at","completed_on","isLoading","showSpinner","setShowSpinner","deletetodo","filter","todo","completeHandler","index","findIndex","setTimeout","tempTodos","d","Date","now","getFullYear","getMonth","getDate"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CACjC;AACEO,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,OAFR;AAGEC,IAAAA,UAAU,EAAE,YAHd;AAIEC,IAAAA,YAAY,EAAE,YAJhB;AAKEC,IAAAA,SAAS,EAAE;AALb,GADiC,EAQjC;AACEJ,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,MAFR;AAGEC,IAAAA,UAAU,EAAE,YAHd;AAIEC,IAAAA,YAAY,EAAE,IAJhB;AAKEC,IAAAA,SAAS,EAAE;AALb,GARiC,EAejC;AACEJ,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,UAFR;AAGEC,IAAAA,UAAU,EAAE,YAHd;AAIEC,IAAAA,YAAY,EAAE,YAJhB;AAKEC,IAAAA,SAAS,EAAE;AALb,GAfiC,EAsBjC;AACEJ,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,SAFR;AAGEC,IAAAA,UAAU,EAAE,YAHd;AAIEC,IAAAA,YAAY,EAAE,YAJhB;AAKEC,IAAAA,SAAS,EAAE;AALb,GAtBiC,CAAD,CAAlC;AA8BA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,KAAD,CAA9C,CA/Ba,CAgCb;;AACA,QAAMc,UAAU,GAAIP,EAAD,IAAQ;AACzBD,IAAAA,QAAQ,CAACD,KAAK,CAACU,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACT,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD,GAFD,CAjCa,CAoCb;;;AACA,QAAMU,eAAe,GAAIV,EAAD,IAAQ;AAC9B,UAAMW,KAAK,GAAGb,KAAK,CAACc,SAAN,CAAiBH,IAAD,IAAUA,IAAI,CAACT,EAAL,KAAYA,EAAtC,CAAd,CAD8B,CAE9B;;AACAa,IAAAA,UAAU,CAAC,MAAM;AACf,UAAIC,SAAS,GAAG,CAAC,GAAGhB,KAAJ,CAAhB;AACA,YAAMiB,CAAC,GAAG,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,EAAT,CAAV;AACAH,MAAAA,SAAS,CACPH,KADO,CAAT,CAEER,YAFF,GAEkB,GAAEY,CAAC,CAACG,WAAF,EAAgB,MAAKH,CAAC,CAACI,QAAF,EAAa,MAAKJ,CAAC,CAACK,OAAF,EAAY,EAFvE,CAHe,CAMf;;AACArB,MAAAA,QAAQ,CAACe,SAAD,CAAR;AACD,KARS,EAQP,IARO,CAAV;AASD,GAZD;;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AACE,MAAA,KAAK,EAAEhB,KADT;AAEE,MAAA,QAAQ,EAAES,UAFZ;AAGE,MAAA,eAAe,EAAEG,eAHnB;AAIE,MAAA,WAAW,EAAEL;AAJf;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GA9DQR,G;;KAAAA,G;AAgET,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport Todos from \"./Todos\";\nimport Header from \"./Header\";\nfunction App() {\n  const [todos, setTodos] = useState([\n    {\n      id: 1,\n      name: \"Hello\",\n      created_at: \"2022-03-30\",\n      completed_on: \"2022-04-05\",\n      isLoading: false,\n    },\n    {\n      id: 2,\n      name: \"Hola\",\n      created_at: \"2022-03-31\",\n      completed_on: null,\n      isLoading: false,\n    },\n    {\n      id: 3,\n      name: \"dshdksgh\",\n      created_at: \"2022-04-07\",\n      completed_on: \"2022-04-07\",\n      isLoading: false,\n    },\n    {\n      id: 4,\n      name: \"Running\",\n      created_at: \"2022-03-30\",\n      completed_on: \"2022-04-05\",\n      isLoading: false,\n    },\n  ]);\n  const [showSpinner, setShowSpinner] = useState(false);\n  // Delete task\n  const deletetodo = (id) => {\n    setTodos(todos.filter((todo) => todo.id !== id));\n  };\n  // on Complete\n  const completeHandler = (id) => {\n    const index = todos.findIndex((todo) => todo.id === id);\n    // todos[index].isLoading = true;\n    setTimeout(() => {\n      let tempTodos = [...todos];\n      const d = new Date(Date.now());\n      tempTodos[\n        index\n      ].completed_on = `${d.getFullYear()} - ${d.getMonth()} - ${d.getDate()}`;\n      // todos[index].isLoading = false;\n      setTodos(tempTodos);\n    }, 1000);\n  };\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Todos\n        todos={todos}\n        onDelete={deletetodo}\n        completeHandler={completeHandler}\n        showSpinner={showSpinner}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}