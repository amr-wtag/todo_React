{"ast":null,"code":"var _jsxFileName = \"/Users/mridha/Todo_in_React/todo/src/components/Todos.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { useState } from \"react\";\nimport Todo from \"./Todo\";\nimport { TextArea } from \"./TextArea\";\nimport { Icon } from \"./Icon\";\nimport { Button } from \"./Button\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { supabase } from \"../config/apiClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst todos = _ref => {\n  _s();\n\n  let {\n    todos,\n    onRemoveTodo,\n    removeCompleteFromIncomplete,\n    flagHandler,\n    flag,\n    toasts,\n    dataCount,\n    setToasts,\n    setDataCount,\n    setShowEmpty\n  } = _ref;\n  const [top, setTop] = useState(12);\n  const [showSpinner, setShowSpinner] = useState(false);\n  const [taskvalue, setTaskvalue] = useState(\"\");\n  const [showFullSpinner, setShowFullSpinner] = useState(false);\n  const [show, setShow] = useState(false); // addhandler\n  //add task value\n\n  const task = e => {\n    setTaskvalue(e);\n  };\n\n  const toggleHandler = e => {\n    e.preventDefault();\n    setShow(!show);\n    setShowEmpty(show);\n  };\n\n  const addhandler = async e => {\n    if (taskvalue.length < 3) {\n      let newToast = {\n        id: uuidv4(),\n        type: \"error\",\n        message: \"Task must be more then 3 character\"\n      };\n      let allToast = [...toasts];\n      allToast.push(newToast);\n      setToasts(allToast);\n    } else {\n      setShowSpinner(true);\n      const {\n        data,\n        error\n      } = await supabase.from(\"ReactTodo\").insert([{\n        name: taskvalue,\n        created_at: new Date(Date.now())\n      }]);\n\n      if (error === null) {\n        setShow(!show);\n        if (flag !== \"complete\") todos.unshift(data[0]);\n        setDataCount(dataCount + 1);\n      }\n\n      setShowSpinner(false);\n      let newToast = {\n        id: uuidv4(),\n        type: error ? \"error\" : \"success\",\n        message: error ? \"error\" : \"New Task added\"\n      };\n      let allToast = [...toasts];\n      allToast.push(newToast);\n      setToasts(allToast);\n    }\n  };\n\n  const moreValue = e => {\n    setShowFullSpinner(true);\n    setTimeout(() => {\n      setTop(top + 12);\n      setShowFullSpinner(false);\n    }, 300);\n  };\n\n  const showless = e => {\n    setTop(12);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${showFullSpinner && \"blur\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addTask\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"addTaskH1\",\n          children: \"Add Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"headerClass\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"create btn\",\n          onClick: toggleHandler,\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            src: \"Plus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), \"Create\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `topButtonAll `,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            className: `topButton ${(dataCount === 0 || flag === \"all\") && \"blurButton\"}`,\n            disabled: dataCount === 0,\n            onClick: e => {\n              flagHandler(\"all\");\n            },\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: `topButton ${(dataCount === 0 || flag === \"incomplete\") && \"blurButton\"}`,\n            disabled: dataCount === 0,\n            onClick: e => {\n              flagHandler(\"incomplete\");\n            },\n            children: \"Incomplete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: `topButton  ${(dataCount === 0 || flag === \"complete\") && \"blurButton\"} `,\n            disabled: dataCount === 0,\n            onClick: e => {\n              flagHandler(\"complete\");\n            },\n            children: \"Complete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todos\",\n        children: [show && /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"todo\",\n          className: \"todo\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextArea, {\n              className: `editName ${showSpinner && \"blur\"}`,\n              placeholder: \"Add new task\",\n              autoFocus: true,\n              onChange: e => task(e.target.value),\n              readOnly: showSpinner,\n              onKeyPress: e => {\n                if (e.key === \"Enter\") {\n                  e.preventDefault();\n                  addhandler(e);\n                }\n              },\n              onFocus: function (e) {\n                var val = e.target.value;\n                e.target.value = \"\";\n                e.target.value = val;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"addDel\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              className: `saveButton ${showSpinner && \"blur\"}`,\n              onClick: addhandler,\n              children: \"Add Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"boxedButton\",\n              onClick: toggleHandler,\n              children: /*#__PURE__*/_jsxDEV(Icon, {\n                src: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this), showSpinner && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              className: \"spinning rotateDiv\",\n              src: \"Spin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), todos.slice(0, top).map(todo => /*#__PURE__*/_jsxDEV(Todo, {\n          todo: todo,\n          toasts: toasts,\n          setToasts: setToasts,\n          onRemoveItem: onRemoveTodo,\n          dataCount: dataCount,\n          setDataCount: setDataCount,\n          flag: flag,\n          removeCompleteFromIncomplete: removeCompleteFromIncomplete\n        }, todo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), !showFullSpinner && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottomButton\",\n        children: todos.length <= 12 ? null : top <= todos.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loadmoreOver\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"loadMoreBtnContainer\",\n            onClick: moreValue,\n            children: \"Load More\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loadmoreOver\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"loadMoreBtnContainer\",\n            onClick: showless,\n            children: \"Show Less\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: showFullSpinner && /*#__PURE__*/_jsxDEV(Icon, {\n        className: \"spinning rotateFull\",\n        src: \"Spin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(todos, \"VA+DtP/awoGtkbTrRP5xwIFdnI8=\");\n\nexport default todos;","map":{"version":3,"sources":["/Users/mridha/Todo_in_React/todo/src/components/Todos.jsx"],"names":["React","useState","Todo","TextArea","Icon","Button","v4","uuidv4","supabase","todos","onRemoveTodo","removeCompleteFromIncomplete","flagHandler","flag","toasts","dataCount","setToasts","setDataCount","setShowEmpty","top","setTop","showSpinner","setShowSpinner","taskvalue","setTaskvalue","showFullSpinner","setShowFullSpinner","show","setShow","task","e","toggleHandler","preventDefault","addhandler","length","newToast","id","type","message","allToast","push","data","error","from","insert","name","created_at","Date","now","unshift","moreValue","setTimeout","showless","target","value","key","val","slice","map","todo"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { useState } from \"react\";\nimport Todo from \"./Todo\";\nimport { TextArea } from \"./TextArea\";\nimport { Icon } from \"./Icon\";\nimport { Button } from \"./Button\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { supabase } from \"../config/apiClient\";\nconst todos = ({\n  todos,\n  onRemoveTodo,\n  removeCompleteFromIncomplete,\n  flagHandler,\n  flag,\n  toasts,\n  dataCount,\n  setToasts,\n  setDataCount,\n  setShowEmpty,\n}) => {\n  const [top, setTop] = useState(12);\n  const [showSpinner, setShowSpinner] = useState(false);\n  const [taskvalue, setTaskvalue] = useState(\"\");\n  const [showFullSpinner, setShowFullSpinner] = useState(false);\n  const [show, setShow] = useState(false);\n  // addhandler\n  //add task value\n  const task = (e) => {\n    setTaskvalue(e);\n  };\n  const toggleHandler = (e) => {\n    e.preventDefault();\n    setShow(!show);\n    setShowEmpty(show);\n  };\n  const addhandler = async (e) => {\n    if (taskvalue.length < 3) {\n      let newToast = {\n        id: uuidv4(),\n        type: \"error\",\n        message: \"Task must be more then 3 character\",\n      };\n      let allToast = [...toasts];\n      allToast.push(newToast);\n      setToasts(allToast);\n    } else {\n      setShowSpinner(true);\n      const { data, error } = await supabase\n        .from(\"ReactTodo\")\n        .insert([{ name: taskvalue, created_at: new Date(Date.now()) }]);\n      if (error === null) {\n        setShow(!show);\n        if (flag !== \"complete\") todos.unshift(data[0]);\n        setDataCount(dataCount + 1);\n      }\n      setShowSpinner(false);\n      let newToast = {\n        id: uuidv4(),\n        type: error ? \"error\" : \"success\",\n        message: error ? \"error\" : \"New Task added\",\n      };\n      let allToast = [...toasts];\n      allToast.push(newToast);\n      setToasts(allToast);\n    }\n  };\n  const moreValue = (e) => {\n    setShowFullSpinner(true);\n    setTimeout(() => {\n      setTop(top + 12);\n\n      setShowFullSpinner(false);\n    }, 300);\n  };\n  const showless = (e) => {\n    setTop(12);\n  };\n  return (\n    <div>\n      <div className={`${showFullSpinner && \"blur\"}`}>\n        <div className=\"addTask\">\n          <h1 className=\"addTaskH1\">Add Tasks</h1>\n        </div>\n\n        <div className=\"headerClass\">\n          <Button className=\"create btn\" onClick={toggleHandler}>\n            <Icon src=\"Plus\" />\n            Create\n          </Button>\n          <div className={`topButtonAll `}>\n            <Button\n              className={`topButton ${\n                (dataCount === 0 || flag === \"all\") && \"blurButton\"\n              }`}\n              disabled={dataCount === 0}\n              onClick={(e) => {\n                flagHandler(\"all\");\n              }}\n            >\n              All\n            </Button>\n            <Button\n              className={`topButton ${\n                (dataCount === 0 || flag === \"incomplete\") && \"blurButton\"\n              }`}\n              disabled={dataCount === 0}\n              onClick={(e) => {\n                flagHandler(\"incomplete\");\n              }}\n            >\n              Incomplete\n            </Button>\n            <Button\n              className={`topButton  ${\n                (dataCount === 0 || flag === \"complete\") && \"blurButton\"\n              } `}\n              disabled={dataCount === 0}\n              onClick={(e) => {\n                flagHandler(\"complete\");\n              }}\n            >\n              Complete\n            </Button>\n          </div>\n        </div>\n        <div className=\"todos\">\n          {show && (\n            <div id=\"todo\" className=\"todo\">\n              <div>\n                <TextArea\n                  className={`editName ${showSpinner && \"blur\"}`}\n                  placeholder=\"Add new task\"\n                  autoFocus\n                  onChange={(e) => task(e.target.value)}\n                  readOnly={showSpinner}\n                  onKeyPress={(e) => {\n                    if (e.key === \"Enter\") {\n                      e.preventDefault();\n                      addhandler(e);\n                    }\n                  }}\n                  onFocus={function (e) {\n                    var val = e.target.value;\n                    e.target.value = \"\";\n                    e.target.value = val;\n                  }}\n                />\n              </div>\n              <div className=\"addDel\">\n                <Button\n                  className={`saveButton ${showSpinner && \"blur\"}`}\n                  onClick={addhandler}\n                >\n                  Add Task\n                </Button>\n                <Button className=\"boxedButton\" onClick={toggleHandler}>\n                  <Icon src=\"Delete\" />\n                </Button>\n              </div>\n\n              {showSpinner && (\n                <div>\n                  <Icon className=\"spinning rotateDiv\" src=\"Spin\" />\n                </div>\n              )}\n            </div>\n          )}\n          {todos.slice(0, top).map((todo) => (\n            <Todo\n              todo={todo}\n              key={todo.id}\n              toasts={toasts}\n              setToasts={setToasts}\n              onRemoveItem={onRemoveTodo}\n              dataCount={dataCount}\n              setDataCount={setDataCount}\n              flag={flag}\n              removeCompleteFromIncomplete={removeCompleteFromIncomplete}\n            />\n          ))}\n        </div>\n\n        {!showFullSpinner && (\n          <div className=\"bottomButton\">\n            {todos.length <= 12 ? null : top <= todos.length ? (\n              <div className=\"loadmoreOver\">\n                <Button className=\"loadMoreBtnContainer\" onClick={moreValue}>\n                  Load More\n                </Button>\n              </div>\n            ) : (\n              <div className=\"loadmoreOver\">\n                <Button className=\"loadMoreBtnContainer\" onClick={showless}>\n                  Show Less\n                </Button>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n      <div>\n        {showFullSpinner && <Icon className=\"spinning rotateFull\" src=\"Spin\" />}\n      </div>\n    </div>\n  );\n};\n\nexport default todos;\n"]},"metadata":{},"sourceType":"module"}