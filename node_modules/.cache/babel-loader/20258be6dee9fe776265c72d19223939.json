{"ast":null,"code":"var _jsxFileName = \"/Users/mridha/Todo_in_React/todo/src/Todos.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { useState } from \"react\";\nimport Todo from \"./Todo\";\nimport { TextArea } from \"./components/TextArea\";\nimport { Icon } from \"./components/Icon\";\nimport { Button } from \"./components/Button\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst todos = _ref => {\n  _s();\n\n  let {\n    todos,\n    completeHandler,\n    show,\n    togglehandler,\n    task,\n    showBigSpinner,\n    flagHandler,\n    todoLength,\n    editToggle,\n    setTodos,\n    toasts,\n    setToasts\n  } = _ref;\n  // eslint-disable-next-line\n  const [top, setTop] = useState(12);\n  const [showSpinner, setShowSpinner] = useState(false);\n  const [taskvalue, setTaskvalue] = useState(\"\"); // eslint-disable-next-line\n\n  const [showFullSpinner, setShowFullSpinner] = useState(false); // addhandler\n\n  const addhandler = e => {\n    if (taskvalue.length < 3) {\n      let newToast = {\n        id: uuidv4(),\n        type: \"error\",\n        message: \"Task must be more then 3 character\"\n      };\n      let allToast = [...toasts];\n      allToast.push(newToast);\n      setToasts(allToast);\n    } else {\n      setShowSpinner(true);\n      setTimeout(() => {\n        let newTodo = {\n          id: uuidv4(),\n          name: taskvalue,\n          created_at: new Date(Date.now()).toLocaleDateString(),\n          completed_on: null,\n          isLoading: false,\n          isEdit: false\n        };\n        let tempTodos = [newTodo, ...todos];\n        setTodos(tempTodos);\n        togglehandler();\n        setShowSpinner(false);\n        let newToast = {\n          id: uuidv4(),\n          type: \"success\",\n          message: \"New Task added\"\n        };\n        let allToast = [...toasts];\n        allToast.push(newToast);\n        setToasts(allToast);\n      }, 500);\n    }\n  };\n\n  const moreValue = e => {\n    setShowFullSpinner(true);\n    setTimeout(() => {\n      setTop(top + 12);\n      setShowFullSpinner(false);\n    }, 300);\n  };\n\n  const showless = e => {\n    setTop(12);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${(showBigSpinner || showFullSpinner) && \"blur\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addTask\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"addTaskH1\",\n          children: \"Add Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"headerClass\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"create btn\",\n          onClick: togglehandler,\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            src: \"Plus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), \"Create\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `topButtonAll ${todoLength === 0 && \"blurButton\"}`,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            className: `topButton btn `,\n            disabled: todoLength === 0,\n            onClick: e => {\n              flagHandler(\"all\");\n            },\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: `topButton btn `,\n            disabled: todoLength === 0,\n            onClick: e => {\n              flagHandler(\"incomplete\");\n            },\n            children: \"Incomplete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: `topButton btn `,\n            disabled: todoLength === 0,\n            onClick: e => {\n              flagHandler(\"complete\");\n            },\n            children: \"Complete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todos\",\n        children: [show && /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"todo\",\n          className: \"todo\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextArea, {\n              className: `editName ${showSpinner && \"blur\"}`,\n              placeholder: \"Add new task\",\n              autoFocus: true,\n              onChange: e => task(e.target.value),\n              readOnly: showSpinner,\n              onKeyPress: e => {\n                if (e.key === \"Enter\") {\n                  e.preventDefault();\n                  addhandler(e);\n                }\n              },\n              onFocus: function (e) {\n                var val = e.target.value;\n                e.target.value = \"\";\n                e.target.value = val;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"addDel\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              className: `saveButton btn ${showSpinner && \"blur\"}`,\n              onClick: addhandler,\n              children: \"Add Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"boxedButton\",\n              onClick: togglehandler,\n              children: /*#__PURE__*/_jsxDEV(Icon, {\n                src: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this), showSpinner && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              className: \"spinning rotateDiv\",\n              src: \"Spin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), todos.slice(0, top).map(todo => /*#__PURE__*/_jsxDEV(Todo, {\n          allTodos: todos,\n          todo: todo,\n          completeHandler: completeHandler,\n          editToggle: editToggle,\n          setTodos: setTodos,\n          toasts: toasts,\n          setToasts: setToasts\n        }, todo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), !showFullSpinner && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottomButton\",\n        children: todos.length <= 12 ? null : top <= todos.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loadmoreOver\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"loadMoreBtnContainer\",\n            onClick: moreValue,\n            children: \"Load More\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loadmoreOver\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"loadMoreBtnContainer\",\n            onClick: showless,\n            children: \"Show Less\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: showFullSpinner && /*#__PURE__*/_jsxDEV(Icon, {\n        className: \"spinning rotateFull\",\n        src: \"Spin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(todos, \"nawTZlLsJ5n124gC61k9yy5pMuQ=\");\n\nexport default todos;","map":{"version":3,"sources":["/Users/mridha/Todo_in_React/todo/src/Todos.jsx"],"names":["React","useState","Todo","TextArea","Icon","Button","v4","uuidv4","todos","completeHandler","show","togglehandler","task","showBigSpinner","flagHandler","todoLength","editToggle","setTodos","toasts","setToasts","top","setTop","showSpinner","setShowSpinner","taskvalue","setTaskvalue","showFullSpinner","setShowFullSpinner","addhandler","e","length","newToast","id","type","message","allToast","push","setTimeout","newTodo","name","created_at","Date","now","toLocaleDateString","completed_on","isLoading","isEdit","tempTodos","moreValue","showless","target","value","key","preventDefault","val","slice","map","todo"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { useState } from \"react\";\nimport Todo from \"./Todo\";\nimport { TextArea } from \"./components/TextArea\";\nimport { Icon } from \"./components/Icon\";\nimport { Button } from \"./components/Button\";\nimport { v4 as uuidv4 } from \"uuid\";\nconst todos = ({\n  todos,\n  completeHandler,\n  show,\n  togglehandler,\n\n  task,\n  showBigSpinner,\n  flagHandler,\n  todoLength,\n  editToggle,\n  setTodos,\n  toasts,\n  setToasts,\n}) => {\n  // eslint-disable-next-line\n  const [top, setTop] = useState(12);\n  const [showSpinner, setShowSpinner] = useState(false);\n  const [taskvalue, setTaskvalue] = useState(\"\");\n  // eslint-disable-next-line\n  const [showFullSpinner, setShowFullSpinner] = useState(false);\n  // addhandler\n  const addhandler = (e) => {\n    if (taskvalue.length < 3) {\n      let newToast = {\n        id: uuidv4(),\n        type: \"error\",\n        message: \"Task must be more then 3 character\",\n      };\n      let allToast = [...toasts];\n      allToast.push(newToast);\n      setToasts(allToast);\n    } else {\n      setShowSpinner(true);\n      setTimeout(() => {\n        let newTodo = {\n          id: uuidv4(),\n          name: taskvalue,\n          created_at: new Date(Date.now()).toLocaleDateString(),\n          completed_on: null,\n          isLoading: false,\n          isEdit: false,\n        };\n        let tempTodos = [newTodo, ...todos];\n\n        setTodos(tempTodos);\n        togglehandler();\n        setShowSpinner(false);\n        let newToast = {\n          id: uuidv4(),\n          type: \"success\",\n          message: \"New Task added\",\n        };\n        let allToast = [...toasts];\n        allToast.push(newToast);\n        setToasts(allToast);\n      }, 500);\n    }\n  };\n  const moreValue = (e) => {\n    setShowFullSpinner(true);\n    setTimeout(() => {\n      setTop(top + 12);\n\n      setShowFullSpinner(false);\n    }, 300);\n  };\n  const showless = (e) => {\n    setTop(12);\n  };\n  return (\n    <div>\n      <div className={`${(showBigSpinner || showFullSpinner) && \"blur\"}`}>\n        <div className=\"addTask\">\n          <h1 className=\"addTaskH1\">Add Tasks</h1>\n        </div>\n\n        <div className=\"headerClass\">\n          <Button className=\"create btn\" onClick={togglehandler}>\n            <Icon src=\"Plus\" />\n            Create\n          </Button>\n          <div className={`topButtonAll ${todoLength === 0 && \"blurButton\"}`}>\n            <Button\n              className={`topButton btn `}\n              disabled={todoLength === 0}\n              onClick={(e) => {\n                flagHandler(\"all\");\n              }}\n            >\n              All\n            </Button>\n            <Button\n              className={`topButton btn `}\n              disabled={todoLength === 0}\n              onClick={(e) => {\n                flagHandler(\"incomplete\");\n              }}\n            >\n              Incomplete\n            </Button>\n            <Button\n              className={`topButton btn `}\n              disabled={todoLength === 0}\n              onClick={(e) => {\n                flagHandler(\"complete\");\n              }}\n            >\n              Complete\n            </Button>\n          </div>\n        </div>\n        <div className=\"todos\">\n          {show && (\n            <div id=\"todo\" className=\"todo\">\n              <div>\n                <TextArea\n                  className={`editName ${showSpinner && \"blur\"}`}\n                  placeholder=\"Add new task\"\n                  autoFocus\n                  onChange={(e) => task(e.target.value)}\n                  readOnly={showSpinner}\n                  onKeyPress={(e) => {\n                    if (e.key === \"Enter\") {\n                      e.preventDefault();\n                      addhandler(e);\n                    }\n                  }}\n                  onFocus={function (e) {\n                    var val = e.target.value;\n                    e.target.value = \"\";\n                    e.target.value = val;\n                  }}\n                />\n              </div>\n              <div className=\"addDel\">\n                <Button\n                  className={`saveButton btn ${showSpinner && \"blur\"}`}\n                  onClick={addhandler}\n                >\n                  Add Task\n                </Button>\n                <Button className=\"boxedButton\" onClick={togglehandler}>\n                  <Icon src=\"Delete\" />\n                </Button>\n              </div>\n\n              {showSpinner && (\n                <div>\n                  <Icon className=\"spinning rotateDiv\" src=\"Spin\" />\n                </div>\n              )}\n            </div>\n          )}\n          {todos.slice(0, top).map((todo) => (\n            <Todo\n              allTodos={todos}\n              todo={todo}\n              key={todo.id}\n              completeHandler={completeHandler}\n              editToggle={editToggle}\n              setTodos={setTodos}\n              toasts={toasts}\n              setToasts={setToasts}\n            />\n          ))}\n        </div>\n\n        {!showFullSpinner && (\n          <div className=\"bottomButton\">\n            {todos.length <= 12 ? null : top <= todos.length ? (\n              <div className=\"loadmoreOver\">\n                <Button className=\"loadMoreBtnContainer\" onClick={moreValue}>\n                  Load More\n                </Button>\n              </div>\n            ) : (\n              <div className=\"loadmoreOver\">\n                <Button className=\"loadMoreBtnContainer\" onClick={showless}>\n                  Show Less\n                </Button>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n      <div>\n        {showFullSpinner && <Icon className=\"spinning rotateFull\" src=\"Spin\" />}\n      </div>\n    </div>\n  );\n};\n\nexport default todos;\n"]},"metadata":{},"sourceType":"module"}