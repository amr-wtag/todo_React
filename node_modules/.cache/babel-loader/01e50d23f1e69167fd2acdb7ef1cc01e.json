{"ast":null,"code":"var _jsxFileName = \"/Users/mridha/Todo_in_React/todo/src/Todos.jsx\";\nimport React from \"react\";\nimport Todo from \"./Todo\";\nimport plus from \"./images/plus.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst todos = _ref => {\n  let {\n    todos,\n    onDelete,\n    completeHandler,\n    show,\n    togglehandler,\n    addhandler,\n    setTaskvalue,\n    showSpinner\n  } = _ref;\n\n  const taskvalue = e => {\n    setTaskvalue(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addTask\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"addTaskH1\",\n        children: \"Add Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"headerClass\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"create btn\",\n        onClick: togglehandler,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: plus,\n          alt: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), \" Create\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todos\",\n      children: [show && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"todo\",\n        className: \"todo\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"editName\",\n            placeholder: \"Add new task\",\n            autoFocus: true,\n            onChange: taskvalue\n            /*readOnly={showSpinner} */\n            ,\n            onKeyPress: e => {\n              if (e.key === \"Enter\") {\n                e.preventDefault();\n                addhandler(e);\n              }\n            },\n            onFocus: function (e) {\n              var val = e.target.value;\n              e.target.value = \"\";\n              e.target.value = val;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"saveButton btn\",\n            onClick: addhandler,\n            children: \"Add Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: showSpinner && /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"spinning rotateDiv\",\n            src: spin,\n            alt: \"spin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), todos.map(todo => /*#__PURE__*/_jsxDEV(Todo, {\n        todo: todo,\n        onDelete: onDelete,\n        completeHandler: completeHandler\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\nexport default todos;","map":{"version":3,"sources":["/Users/mridha/Todo_in_React/todo/src/Todos.jsx"],"names":["React","Todo","plus","todos","onDelete","completeHandler","show","togglehandler","addhandler","setTaskvalue","showSpinner","taskvalue","e","target","value","key","preventDefault","val","spin","map","todo","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;;AACA,MAAMC,KAAK,GAAG,QASR;AAAA,MATS;AACbA,IAAAA,KADa;AAEbC,IAAAA,QAFa;AAGbC,IAAAA,eAHa;AAIbC,IAAAA,IAJa;AAKbC,IAAAA,aALa;AAMbC,IAAAA,UANa;AAObC,IAAAA,YAPa;AAQbC,IAAAA;AARa,GAST;;AACJ,QAAMC,SAAS,GAAIC,CAAD,IAAO;AACvBH,IAAAA,YAAY,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AACD,GAFD;;AAGA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACE;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAA+B,QAAA,OAAO,EAAEP,aAAxC;AAAA,gCACE;AAAK,UAAA,GAAG,EAAEL,IAAV;AAAgB,UAAA,GAAG,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF,eAUE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,iBACGI,IAAI,iBACH;AAAK,QAAA,EAAE,EAAC,MAAR;AAAe,QAAA,SAAS,EAAC,MAAzB;AAAA,gCACE;AAAA,kCACE;AACE,YAAA,SAAS,EAAC,UADZ;AAEE,YAAA,WAAW,EAAC,cAFd;AAGE,YAAA,SAAS,MAHX;AAIE,YAAA,QAAQ,EAAEK;AACV;AALF;AAME,YAAA,UAAU,EAAGC,CAAD,IAAO;AACjB,kBAAIA,CAAC,CAACG,GAAF,KAAU,OAAd,EAAuB;AACrBH,gBAAAA,CAAC,CAACI,cAAF;AACAR,gBAAAA,UAAU,CAACI,CAAD,CAAV;AACD;AACF,aAXH;AAYE,YAAA,OAAO,EAAE,UAAUA,CAAV,EAAa;AACpB,kBAAIK,GAAG,GAAGL,CAAC,CAACC,MAAF,CAASC,KAAnB;AACAF,cAAAA,CAAC,CAACC,MAAF,CAASC,KAAT,GAAiB,EAAjB;AACAF,cAAAA,CAAC,CAACC,MAAF,CAASC,KAAT,GAAiBG,GAAjB;AACD;AAhBH;AAAA;AAAA;AAAA;AAAA,kBADF,eAmBE;AAAQ,YAAA,SAAS,EAAC,gBAAlB;AAAmC,YAAA,OAAO,EAAET,UAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAwBE;AAAA,oBACGE,WAAW,iBACV;AAAK,YAAA,SAAS,EAAC,oBAAf;AAAoC,YAAA,GAAG,EAAEQ,IAAzC;AAA+C,YAAA,GAAG,EAAC;AAAnD;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,gBAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAiCGf,KAAK,CAACgB,GAAN,CAAWC,IAAD,iBACT,QAAC,IAAD;AACE,QAAA,IAAI,EAAEA,IADR;AAGE,QAAA,QAAQ,EAAEhB,QAHZ;AAIE,QAAA,eAAe,EAAEC;AAJnB,SAEOe,IAAI,CAACC,EAFZ;AAAA;AAAA;AAAA;AAAA,cADD,CAjCH;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuDD,CApED;;AAsEA,eAAelB,KAAf","sourcesContent":["import React from \"react\";\nimport Todo from \"./Todo\";\nimport plus from \"./images/plus.svg\";\nconst todos = ({\n  todos,\n  onDelete,\n  completeHandler,\n  show,\n  togglehandler,\n  addhandler,\n  setTaskvalue,\n  showSpinner,\n}) => {\n  const taskvalue = (e) => {\n    setTaskvalue(e.target.value);\n  };\n  return (\n    <div>\n      <div className=\"addTask\">\n        <h1 className=\"addTaskH1\">Add Tasks</h1>\n      </div>\n\n      <div className=\"headerClass\">\n        <button className=\"create btn\" onClick={togglehandler}>\n          <img src={plus} alt=\"Edit\" /> Create\n        </button>\n      </div>\n      <div className=\"todos\">\n        {show && (\n          <div id=\"todo\" className=\"todo\">\n            <div>\n              <textarea\n                className=\"editName\"\n                placeholder=\"Add new task\"\n                autoFocus\n                onChange={taskvalue}\n                /*readOnly={showSpinner} */\n                onKeyPress={(e) => {\n                  if (e.key === \"Enter\") {\n                    e.preventDefault();\n                    addhandler(e);\n                  }\n                }}\n                onFocus={function (e) {\n                  var val = e.target.value;\n                  e.target.value = \"\";\n                  e.target.value = val;\n                }}\n              />\n              <button className=\"saveButton btn\" onClick={addhandler}>\n                Add Task\n              </button>\n            </div>\n            <div>\n              {showSpinner && (\n                <img className=\"spinning rotateDiv\" src={spin} alt=\"spin\" />\n              )}\n            </div>\n          </div>\n        )}\n        {todos.map((todo) => (\n          <Todo\n            todo={todo}\n            key={todo.id}\n            onDelete={onDelete}\n            completeHandler={completeHandler}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default todos;\n"]},"metadata":{},"sourceType":"module"}