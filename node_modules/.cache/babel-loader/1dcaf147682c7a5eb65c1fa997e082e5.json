{"ast":null,"code":"var _jsxFileName = \"/Users/mridha/Todo_in_React/todo/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport Todos from \"./Todos\";\nimport spin from \"./images/bigspin.svg\";\nimport Header from \"./Header\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState([{\n    id: 1,\n    name: \"Hello\",\n    created_at: \"2022-03-30\",\n    completed_on: \"2022-04-05\",\n    isLoading: false,\n    isEdit: false\n  }, {\n    id: 2,\n    name: \"Hola\",\n    created_at: \"2022-03-31\",\n    completed_on: null,\n    isLoading: false,\n    isEdit: false\n  }, {\n    id: 3,\n    name: \"dshdksgh\",\n    created_at: \"2022-04-07\",\n    completed_on: \"2022-04-07\",\n    isLoading: false,\n    isEdit: false\n  }, {\n    id: 4,\n    name: \"Running\",\n    created_at: \"2022-03-30\",\n    completed_on: \"2022-04-05\",\n    isLoading: false,\n    isEdit: false\n  }]);\n  const [show, setShow] = useState(false);\n  const [showSpinner, setShowSpinner] = useState(false);\n  const [showBigSpinner, setShowBigSpinner] = useState(false);\n  const [taskvalue, setTaskvalue] = useState(\"\");\n  const [searchShow, setSearchShow] = useState(false);\n  const [flag, setFlag] = useState(\"all\");\n  const [showTodos, setShowTodos] = useState(todos);\n  const [search, setSearch] = useState(\"\"); //try function\n\n  const trying = () => {\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      id: \"todo\",\n      className: \"todo\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${showSpinner ? \"blur\" : null}`,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"editName\",\n          placeholder: \"Add new task\",\n          autoFocus: true,\n          onChange: task,\n          readOnly: showSpinner,\n          onKeyPress: e => {\n            if (e.key === \"Enter\") {\n              e.preventDefault();\n              addhandler(e);\n            }\n          },\n          onFocus: function (e) {\n            var val = e.target.value;\n            e.target.value = \"\";\n            e.target.value = val;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"saveButton btn\",\n          onClick: addhandler,\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: showSpinner && /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"spinning rotateDiv\",\n          src: spin,\n          alt: \"spin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this);\n  }; // Delete task\n\n\n  const deletetodo = id => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  }; //flag\n\n\n  const flagHandler = e => {\n    if (flag !== e) {\n      setShowBigSpinner(true);\n      setTimeout(() => {\n        setFlag(e);\n        setShowBigSpinner(false);\n      }, 1000);\n    }\n  }; // on Complete\n\n\n  const completeHandler = id => {\n    const index = todos.findIndex(todo => todo.id === id);\n    let tempTodos = [...todos];\n    tempTodos[index].isLoading = true;\n    setTodos(tempTodos);\n    setTimeout(() => {\n      tempTodos = [...todos];\n      tempTodos[index].completed_on = new Date(Date.now()).toLocaleDateString();\n      tempTodos[index].isLoading = false;\n      setTodos(tempTodos);\n    }, 1000);\n  }; //search value\n\n\n  const searchvalue = e => {\n    setTimeout(() => {\n      setShowBigSpinner(true);\n    }, 500);\n    setTimeout(() => {\n      setSearch(e.target.value);\n      setShowBigSpinner(false);\n    }, 1500);\n  }; //add task value\n\n\n  const task = e => {\n    setTaskvalue(e.target.value);\n  }; // addhandler\n\n\n  const addhandler = e => {\n    if (taskvalue.length < 3) window.alert(\"less then 3\");else {\n      setShowSpinner(true);\n      setTimeout(() => {\n        let newTodo = {\n          id: uuidv4(),\n          name: taskvalue,\n          created_at: new Date(Date.now()).toLocaleDateString(),\n          completed_on: null,\n          isLoading: false,\n          isEdit: false\n        };\n        let tempTodos = [newTodo, ...todos];\n        setTodos(tempTodos);\n        togglehandler();\n        setShowSpinner(false);\n      }, 500);\n    }\n  }; //toggle\n\n\n  const togglehandler = e => {\n    setTaskvalue(\"\");\n    setShow(!show);\n  }; //search toggle\n\n\n  const SearchToggle = () => {\n    if (search !== \"\") {\n      setShowBigSpinner(true);\n      setTimeout(() => {\n        setSearch(\"\");\n        setShowBigSpinner(false);\n      }, 500);\n    }\n\n    setSearchShow(!searchShow);\n  };\n\n  useEffect(() => {\n    const arr = [];\n\n    if (flag === \"all\") {\n      todos.map(todo => {\n        if (todo.name.toLocaleLowerCase().includes(search)) arr.push(todo);\n        setShowTodos(arr);\n        return arr;\n      });\n    } else if (flag === \"incomplete\") {\n      todos.map(todo => {\n        if (todo.completed_on === null && todo.name.toLocaleLowerCase().includes(search)) arr.push(todo);\n        setShowTodos(arr);\n        return arr;\n      });\n    } else {\n      todos.map(todo => {\n        if (todo.completed_on !== null && todo.name.toLocaleLowerCase().includes(search)) arr.push(todo);\n        setShowTodos(arr);\n        return arr;\n      });\n    }\n  }, [flag, todos, search]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      SearchToggle: SearchToggle,\n      searchShow: searchShow,\n      searchvalue: searchvalue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Todos, {\n      todos: showTodos,\n      onDelete: deletetodo,\n      completeHandler: completeHandler,\n      show: show,\n      togglehandler: togglehandler,\n      addhandler: addhandler,\n      task: task,\n      showSpinner: showSpinner,\n      showBigSpinner: showBigSpinner,\n      flagHandler: flagHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: showBigSpinner && /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"spinning rotateFull\",\n        src: spin,\n        alt: \"spin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"HiFxiluYWEKthPvNHK4GGfMwGt0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mridha/Todo_in_React/todo/src/App.jsx"],"names":["useState","useEffect","Todos","spin","Header","v4","uuidv4","App","todos","setTodos","id","name","created_at","completed_on","isLoading","isEdit","show","setShow","showSpinner","setShowSpinner","showBigSpinner","setShowBigSpinner","taskvalue","setTaskvalue","searchShow","setSearchShow","flag","setFlag","showTodos","setShowTodos","search","setSearch","trying","task","e","key","preventDefault","addhandler","val","target","value","deletetodo","filter","todo","flagHandler","setTimeout","completeHandler","index","findIndex","tempTodos","Date","now","toLocaleDateString","searchvalue","length","window","alert","newTodo","togglehandler","SearchToggle","arr","map","toLocaleLowerCase","includes","push"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,CACjC;AACEU,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,OAFR;AAGEC,IAAAA,UAAU,EAAE,YAHd;AAIEC,IAAAA,YAAY,EAAE,YAJhB;AAKEC,IAAAA,SAAS,EAAE,KALb;AAMEC,IAAAA,MAAM,EAAE;AANV,GADiC,EASjC;AACEL,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,MAFR;AAGEC,IAAAA,UAAU,EAAE,YAHd;AAIEC,IAAAA,YAAY,EAAE,IAJhB;AAKEC,IAAAA,SAAS,EAAE,KALb;AAMEC,IAAAA,MAAM,EAAE;AANV,GATiC,EAiBjC;AACEL,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,UAFR;AAGEC,IAAAA,UAAU,EAAE,YAHd;AAIEC,IAAAA,YAAY,EAAE,YAJhB;AAKEC,IAAAA,SAAS,EAAE,KALb;AAMEC,IAAAA,MAAM,EAAE;AANV,GAjBiC,EAyBjC;AACEL,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,SAFR;AAGEC,IAAAA,UAAU,EAAE,YAHd;AAIEC,IAAAA,YAAY,EAAE,YAJhB;AAKEC,IAAAA,SAAS,EAAE,KALb;AAMEC,IAAAA,MAAM,EAAE;AANV,GAzBiC,CAAD,CAAlC;AAkCA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACkB,WAAD,EAAcC,cAAd,IAAgCnB,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACoB,cAAD,EAAiBC,iBAAjB,IAAsCrB,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACsB,SAAD,EAAYC,YAAZ,IAA4BvB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACwB,UAAD,EAAaC,aAAb,IAA8BzB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAAC0B,IAAD,EAAOC,OAAP,IAAkB3B,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAAC4B,SAAD,EAAYC,YAAZ,IAA4B7B,QAAQ,CAACQ,KAAD,CAA1C;AACA,QAAM,CAACsB,MAAD,EAASC,SAAT,IAAsB/B,QAAQ,CAAC,EAAD,CAApC,CA1Ca,CA2Cb;;AACA,QAAMgC,MAAM,GAAG,MAAM;AACnB;AAAA;AAAK,MAAA,EAAE,EAAC,MAAR;AAAe,MAAA,SAAS,EAAC,MAAzB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAG,GAAEd,WAAW,GAAG,MAAH,GAAY,IAAK,EAA/C;AAAA,gCACE;AACE,UAAA,SAAS,EAAC,UADZ;AAEE,UAAA,WAAW,EAAC,cAFd;AAGE,UAAA,SAAS,MAHX;AAIE,UAAA,QAAQ,EAAEe,IAJZ;AAKE,UAAA,QAAQ,EAAEf,WALZ;AAME,UAAA,UAAU,EAAGgB,CAAD,IAAO;AACjB,gBAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuB;AACrBD,cAAAA,CAAC,CAACE,cAAF;AACAC,cAAAA,UAAU,CAACH,CAAD,CAAV;AACD;AACF,WAXH;AAYE,UAAA,OAAO,EAAE,UAAUA,CAAV,EAAa;AACpB,gBAAII,GAAG,GAAGJ,CAAC,CAACK,MAAF,CAASC,KAAnB;AACAN,YAAAA,CAAC,CAACK,MAAF,CAASC,KAAT,GAAiB,EAAjB;AACAN,YAAAA,CAAC,CAACK,MAAF,CAASC,KAAT,GAAiBF,GAAjB;AACD;AAhBH;AAAA;AAAA;AAAA;AAAA,gBADF,eAmBE;AAAQ,UAAA,SAAS,EAAC,gBAAlB;AAAmC,UAAA,OAAO,EAAED,UAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAwBE;AAAA,kBACGnB,WAAW,iBACV;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAoC,UAAA,GAAG,EAAEf,IAAzC;AAA+C,UAAA,GAAG,EAAC;AAAnD;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,cAxBF;AAAA;AAAA;AAAA;AAAA;AAAA;AA8BD,GA/BD,CA5Ca,CA6Eb;;;AACA,QAAMsC,UAAU,GAAI/B,EAAD,IAAQ;AACzBD,IAAAA,QAAQ,CAACD,KAAK,CAACkC,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACjC,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD,GAFD,CA9Ea,CAkFb;;;AACA,QAAMkC,WAAW,GAAIV,CAAD,IAAO;AACzB,QAAIR,IAAI,KAAKQ,CAAb,EAAgB;AACdb,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAwB,MAAAA,UAAU,CAAC,MAAM;AACflB,QAAAA,OAAO,CAACO,CAAD,CAAP;AACAb,QAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,OAHS,EAGP,IAHO,CAAV;AAID;AACF,GARD,CAnFa,CA6Fb;;;AAEA,QAAMyB,eAAe,GAAIpC,EAAD,IAAQ;AAC9B,UAAMqC,KAAK,GAAGvC,KAAK,CAACwC,SAAN,CAAiBL,IAAD,IAAUA,IAAI,CAACjC,EAAL,KAAYA,EAAtC,CAAd;AACA,QAAIuC,SAAS,GAAG,CAAC,GAAGzC,KAAJ,CAAhB;AACAyC,IAAAA,SAAS,CAACF,KAAD,CAAT,CAAiBjC,SAAjB,GAA6B,IAA7B;AACAL,IAAAA,QAAQ,CAACwC,SAAD,CAAR;AACAJ,IAAAA,UAAU,CAAC,MAAM;AACfI,MAAAA,SAAS,GAAG,CAAC,GAAGzC,KAAJ,CAAZ;AACAyC,MAAAA,SAAS,CAACF,KAAD,CAAT,CAAiBlC,YAAjB,GAAgC,IAAIqC,IAAJ,CAASA,IAAI,CAACC,GAAL,EAAT,EAAqBC,kBAArB,EAAhC;AACAH,MAAAA,SAAS,CAACF,KAAD,CAAT,CAAiBjC,SAAjB,GAA6B,KAA7B;AACAL,MAAAA,QAAQ,CAACwC,SAAD,CAAR;AACD,KALS,EAKP,IALO,CAAV;AAMD,GAXD,CA/Fa,CA2Gb;;;AACA,QAAMI,WAAW,GAAInB,CAAD,IAAO;AACzBW,IAAAA,UAAU,CAAC,MAAM;AACfxB,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD,KAFS,EAEP,GAFO,CAAV;AAGAwB,IAAAA,UAAU,CAAC,MAAM;AACfd,MAAAA,SAAS,CAACG,CAAC,CAACK,MAAF,CAASC,KAAV,CAAT;AACAnB,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,KAHS,EAGP,IAHO,CAAV;AAID,GARD,CA5Ga,CAqHb;;;AACA,QAAMY,IAAI,GAAIC,CAAD,IAAO;AAClBX,IAAAA,YAAY,CAACW,CAAC,CAACK,MAAF,CAASC,KAAV,CAAZ;AACD,GAFD,CAtHa,CAyHb;;;AACA,QAAMH,UAAU,GAAIH,CAAD,IAAO;AACxB,QAAIZ,SAAS,CAACgC,MAAV,GAAmB,CAAvB,EAA0BC,MAAM,CAACC,KAAP,CAAa,aAAb,EAA1B,KACK;AACHrC,MAAAA,cAAc,CAAC,IAAD,CAAd;AACA0B,MAAAA,UAAU,CAAC,MAAM;AACf,YAAIY,OAAO,GAAG;AACZ/C,UAAAA,EAAE,EAAEJ,MAAM,EADE;AAEZK,UAAAA,IAAI,EAAEW,SAFM;AAGZV,UAAAA,UAAU,EAAE,IAAIsC,IAAJ,CAASA,IAAI,CAACC,GAAL,EAAT,EAAqBC,kBAArB,EAHA;AAIZvC,UAAAA,YAAY,EAAE,IAJF;AAKZC,UAAAA,SAAS,EAAE,KALC;AAMZC,UAAAA,MAAM,EAAE;AANI,SAAd;AAQA,YAAIkC,SAAS,GAAG,CAACQ,OAAD,EAAU,GAAGjD,KAAb,CAAhB;AAEAC,QAAAA,QAAQ,CAACwC,SAAD,CAAR;AACAS,QAAAA,aAAa;AACbvC,QAAAA,cAAc,CAAC,KAAD,CAAd;AACD,OAdS,EAcP,GAdO,CAAV;AAeD;AACF,GApBD,CA1Ha,CA+Ib;;;AACA,QAAMuC,aAAa,GAAIxB,CAAD,IAAO;AAC3BX,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAN,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACD,GAHD,CAhJa,CAoJb;;;AACA,QAAM2C,YAAY,GAAG,MAAM;AACzB,QAAI7B,MAAM,KAAK,EAAf,EAAmB;AACjBT,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAwB,MAAAA,UAAU,CAAC,MAAM;AACfd,QAAAA,SAAS,CAAC,EAAD,CAAT;AACAV,QAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,OAHS,EAGP,GAHO,CAAV;AAID;;AACDI,IAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACD,GATD;;AAWAvB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM2D,GAAG,GAAG,EAAZ;;AAEA,QAAIlC,IAAI,KAAK,KAAb,EAAoB;AAClBlB,MAAAA,KAAK,CAACqD,GAAN,CAAWlB,IAAD,IAAU;AAClB,YAAIA,IAAI,CAAChC,IAAL,CAAUmD,iBAAV,GAA8BC,QAA9B,CAAuCjC,MAAvC,CAAJ,EAAoD8B,GAAG,CAACI,IAAJ,CAASrB,IAAT;AACpDd,QAAAA,YAAY,CAAC+B,GAAD,CAAZ;AACA,eAAOA,GAAP;AACD,OAJD;AAKD,KAND,MAMO,IAAIlC,IAAI,KAAK,YAAb,EAA2B;AAChClB,MAAAA,KAAK,CAACqD,GAAN,CAAWlB,IAAD,IAAU;AAClB,YACEA,IAAI,CAAC9B,YAAL,KAAsB,IAAtB,IACA8B,IAAI,CAAChC,IAAL,CAAUmD,iBAAV,GAA8BC,QAA9B,CAAuCjC,MAAvC,CAFF,EAIE8B,GAAG,CAACI,IAAJ,CAASrB,IAAT;AACFd,QAAAA,YAAY,CAAC+B,GAAD,CAAZ;AACA,eAAOA,GAAP;AACD,OARD;AASD,KAVM,MAUA;AACLpD,MAAAA,KAAK,CAACqD,GAAN,CAAWlB,IAAD,IAAU;AAClB,YACEA,IAAI,CAAC9B,YAAL,KAAsB,IAAtB,IACA8B,IAAI,CAAChC,IAAL,CAAUmD,iBAAV,GAA8BC,QAA9B,CAAuCjC,MAAvC,CAFF,EAIE8B,GAAG,CAACI,IAAJ,CAASrB,IAAT;AACFd,QAAAA,YAAY,CAAC+B,GAAD,CAAZ;AACA,eAAOA,GAAP;AACD,OARD;AASD;AACF,GA9BQ,EA8BN,CAAClC,IAAD,EAAOlB,KAAP,EAAcsB,MAAd,CA9BM,CAAT;AA+BA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,YAAY,EAAE6B,YADhB;AAEE,MAAA,UAAU,EAAEnC,UAFd;AAGE,MAAA,WAAW,EAAE6B;AAHf;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,KAAD;AACE,MAAA,KAAK,EAAEzB,SADT;AAEE,MAAA,QAAQ,EAAEa,UAFZ;AAGE,MAAA,eAAe,EAAEK,eAHnB;AAIE,MAAA,IAAI,EAAE9B,IAJR;AAKE,MAAA,aAAa,EAAE0C,aALjB;AAME,MAAA,UAAU,EAAErB,UANd;AAOE,MAAA,IAAI,EAAEJ,IAPR;AAQE,MAAA,WAAW,EAAEf,WARf;AASE,MAAA,cAAc,EAAEE,cATlB;AAUE,MAAA,WAAW,EAAEwB;AAVf;AAAA;AAAA;AAAA;AAAA,YANF,eAkBE;AAAA,gBACGxB,cAAc,iBACb;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAqC,QAAA,GAAG,EAAEjB,IAA1C;AAAgD,QAAA,GAAG,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GAzNQI,G;;KAAAA,G;AA2NT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport Todos from \"./Todos\";\nimport spin from \"./images/bigspin.svg\";\nimport Header from \"./Header\";\nimport { v4 as uuidv4 } from \"uuid\";\nfunction App() {\n  const [todos, setTodos] = useState([\n    {\n      id: 1,\n      name: \"Hello\",\n      created_at: \"2022-03-30\",\n      completed_on: \"2022-04-05\",\n      isLoading: false,\n      isEdit: false,\n    },\n    {\n      id: 2,\n      name: \"Hola\",\n      created_at: \"2022-03-31\",\n      completed_on: null,\n      isLoading: false,\n      isEdit: false,\n    },\n    {\n      id: 3,\n      name: \"dshdksgh\",\n      created_at: \"2022-04-07\",\n      completed_on: \"2022-04-07\",\n      isLoading: false,\n      isEdit: false,\n    },\n    {\n      id: 4,\n      name: \"Running\",\n      created_at: \"2022-03-30\",\n      completed_on: \"2022-04-05\",\n      isLoading: false,\n      isEdit: false,\n    },\n  ]);\n  const [show, setShow] = useState(false);\n  const [showSpinner, setShowSpinner] = useState(false);\n  const [showBigSpinner, setShowBigSpinner] = useState(false);\n  const [taskvalue, setTaskvalue] = useState(\"\");\n  const [searchShow, setSearchShow] = useState(false);\n  const [flag, setFlag] = useState(\"all\");\n  const [showTodos, setShowTodos] = useState(todos);\n  const [search, setSearch] = useState(\"\");\n  //try function\n  const trying = () => {\n    <div id=\"todo\" className=\"todo\">\n      <div className={`${showSpinner ? \"blur\" : null}`}>\n        <textarea\n          className=\"editName\"\n          placeholder=\"Add new task\"\n          autoFocus\n          onChange={task}\n          readOnly={showSpinner}\n          onKeyPress={(e) => {\n            if (e.key === \"Enter\") {\n              e.preventDefault();\n              addhandler(e);\n            }\n          }}\n          onFocus={function (e) {\n            var val = e.target.value;\n            e.target.value = \"\";\n            e.target.value = val;\n          }}\n        />\n        <button className=\"saveButton btn\" onClick={addhandler}>\n          Add Task\n        </button>\n      </div>\n      <div>\n        {showSpinner && (\n          <img className=\"spinning rotateDiv\" src={spin} alt=\"spin\" />\n        )}\n      </div>\n    </div>;\n  };\n\n  // Delete task\n  const deletetodo = (id) => {\n    setTodos(todos.filter((todo) => todo.id !== id));\n  };\n\n  //flag\n  const flagHandler = (e) => {\n    if (flag !== e) {\n      setShowBigSpinner(true);\n      setTimeout(() => {\n        setFlag(e);\n        setShowBigSpinner(false);\n      }, 1000);\n    }\n  };\n\n  // on Complete\n\n  const completeHandler = (id) => {\n    const index = todos.findIndex((todo) => todo.id === id);\n    let tempTodos = [...todos];\n    tempTodos[index].isLoading = true;\n    setTodos(tempTodos);\n    setTimeout(() => {\n      tempTodos = [...todos];\n      tempTodos[index].completed_on = new Date(Date.now()).toLocaleDateString();\n      tempTodos[index].isLoading = false;\n      setTodos(tempTodos);\n    }, 1000);\n  };\n  //search value\n  const searchvalue = (e) => {\n    setTimeout(() => {\n      setShowBigSpinner(true);\n    }, 500);\n    setTimeout(() => {\n      setSearch(e.target.value);\n      setShowBigSpinner(false);\n    }, 1500);\n  };\n  //add task value\n  const task = (e) => {\n    setTaskvalue(e.target.value);\n  };\n  // addhandler\n  const addhandler = (e) => {\n    if (taskvalue.length < 3) window.alert(\"less then 3\");\n    else {\n      setShowSpinner(true);\n      setTimeout(() => {\n        let newTodo = {\n          id: uuidv4(),\n          name: taskvalue,\n          created_at: new Date(Date.now()).toLocaleDateString(),\n          completed_on: null,\n          isLoading: false,\n          isEdit: false,\n        };\n        let tempTodos = [newTodo, ...todos];\n\n        setTodos(tempTodos);\n        togglehandler();\n        setShowSpinner(false);\n      }, 500);\n    }\n  };\n  //toggle\n  const togglehandler = (e) => {\n    setTaskvalue(\"\");\n    setShow(!show);\n  };\n  //search toggle\n  const SearchToggle = () => {\n    if (search !== \"\") {\n      setShowBigSpinner(true);\n      setTimeout(() => {\n        setSearch(\"\");\n        setShowBigSpinner(false);\n      }, 500);\n    }\n    setSearchShow(!searchShow);\n  };\n\n  useEffect(() => {\n    const arr = [];\n\n    if (flag === \"all\") {\n      todos.map((todo) => {\n        if (todo.name.toLocaleLowerCase().includes(search)) arr.push(todo);\n        setShowTodos(arr);\n        return arr;\n      });\n    } else if (flag === \"incomplete\") {\n      todos.map((todo) => {\n        if (\n          todo.completed_on === null &&\n          todo.name.toLocaleLowerCase().includes(search)\n        )\n          arr.push(todo);\n        setShowTodos(arr);\n        return arr;\n      });\n    } else {\n      todos.map((todo) => {\n        if (\n          todo.completed_on !== null &&\n          todo.name.toLocaleLowerCase().includes(search)\n        )\n          arr.push(todo);\n        setShowTodos(arr);\n        return arr;\n      });\n    }\n  }, [flag, todos, search]);\n  return (\n    <div className=\"App\">\n      <Header\n        SearchToggle={SearchToggle}\n        searchShow={searchShow}\n        searchvalue={searchvalue}\n      />\n      <Todos\n        todos={showTodos}\n        onDelete={deletetodo}\n        completeHandler={completeHandler}\n        show={show}\n        togglehandler={togglehandler}\n        addhandler={addhandler}\n        task={task}\n        showSpinner={showSpinner}\n        showBigSpinner={showBigSpinner}\n        flagHandler={flagHandler}\n      />\n      <div>\n        {showBigSpinner && (\n          <img className=\"spinning rotateFull\" src={spin} alt=\"spin\" />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}