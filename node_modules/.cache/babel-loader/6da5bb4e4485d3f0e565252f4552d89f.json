{"ast":null,"code":"var _jsxFileName = \"/Users/mridha/Todo_in_React/todo/src/contexts/AppContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport App from \"../App\";\nimport Todos from \"../components/Todos/Todos\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/React.createContext();\nexport default function AppContextfile() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const [toasts, setToasts] = useState([]);\n  const [showEmpty, setShowEmpty] = useState(true);\n  const [searchShow, setSearchShow] = useState(false);\n  const [flag, setFlag] = useState(\"all\");\n  const [search, setSearch] = useState(\"\");\n  const [dataCount, setDataCount] = useState(0);\n  const [splash, setSplash] = useState(true); //flag\n\n  const flagHandler = e => {\n    if (flag !== e) {\n      setFlag(e);\n    }\n  }; //search value\n\n\n  const searchvalue = e => {\n    if (e.length > 2) {\n      setTimeout(() => {\n        setShowBigSpinner(true);\n      }, 500);\n      setTimeout(() => {\n        setSearch(e);\n        setShowBigSpinner(false);\n      }, 1500);\n    }\n  }; //search toggle\n\n\n  const SearchToggle = () => {\n    if (search !== \"\") {\n      setShowBigSpinner(true);\n      setTimeout(() => {\n        setSearch(\"\");\n        setShowBigSpinner(false);\n      }, 500);\n    }\n\n    setSearchShow(!searchShow);\n  };\n\n  const handleRemoveTodo = async id => {\n    try {\n      // eslint-disable-next-line\n      const {\n        data\n      } = await supabase.from(\"ReactTodo\").delete().match({\n        id: id\n      });\n      let newToast = {\n        id: uuidv4(),\n        type: \"success\",\n        message: \"Task Deleted\"\n      };\n      setDataCount(dataCount - 1);\n      setToasts([...toasts, newToast]);\n    } catch (error) {\n      let newToast = {\n        id: uuidv4(),\n        type: \"error\",\n        message: error\n      };\n      setToasts([...toasts, newToast]);\n    }\n\n    removeCompleteFromIncomplete(id);\n\n    if (dataCount === 1) {\n      setSearchShow(false);\n      setFlag(\"all\");\n    }\n  };\n\n  const removeCompleteFromIncomplete = id => {\n    const filtertodos = todos.filter(todo => todo.id !== id);\n    setTodos(filtertodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n      value: {\n        todos,\n        flag,\n        flagHandler,\n        toasts,\n        setToasts,\n        handleRemoveTodo,\n        dataCount,\n        setDataCount,\n        setShowEmpty,\n        removeCompleteFromIncomplete,\n        searchvalue,\n        SearchToggle,\n        searchShow,\n        search,\n        setTodos,\n        splash,\n        setSplash,\n        showEmpty\n      },\n      children: [/*#__PURE__*/_jsxDEV(Todos, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AppContextfile, \"bYv6ynd0nzeXhHOAT4OP2UPUaHY=\");\n\n_c = AppContextfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppContextfile\");","map":{"version":3,"sources":["/Users/mridha/Todo_in_React/todo/src/contexts/AppContext.js"],"names":["React","useState","v4","uuidv4","App","Todos","AppContext","createContext","AppContextfile","todos","setTodos","toasts","setToasts","showEmpty","setShowEmpty","searchShow","setSearchShow","flag","setFlag","search","setSearch","dataCount","setDataCount","splash","setSplash","flagHandler","e","searchvalue","length","setTimeout","setShowBigSpinner","SearchToggle","handleRemoveTodo","id","data","supabase","from","delete","match","newToast","type","message","error","removeCompleteFromIncomplete","filtertodos","filter","todo"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport App from \"../App\";\nimport Todos from \"../components/Todos/Todos\";\nexport const AppContext = React.createContext();\n\nexport default function AppContextfile() {\n  const [todos, setTodos] = useState([]);\n\n  const [toasts, setToasts] = useState([]);\n  const [showEmpty, setShowEmpty] = useState(true);\n  const [searchShow, setSearchShow] = useState(false);\n  const [flag, setFlag] = useState(\"all\");\n  const [search, setSearch] = useState(\"\");\n  const [dataCount, setDataCount] = useState(0);\n  const [splash, setSplash] = useState(true);\n\n  //flag\n  const flagHandler = (e) => {\n    if (flag !== e) {\n      setFlag(e);\n    }\n  };\n\n  //search value\n  const searchvalue = (e) => {\n    if (e.length > 2) {\n      setTimeout(() => {\n        setShowBigSpinner(true);\n      }, 500);\n      setTimeout(() => {\n        setSearch(e);\n        setShowBigSpinner(false);\n      }, 1500);\n    }\n  };\n\n  //search toggle\n  const SearchToggle = () => {\n    if (search !== \"\") {\n      setShowBigSpinner(true);\n      setTimeout(() => {\n        setSearch(\"\");\n        setShowBigSpinner(false);\n      }, 500);\n    }\n    setSearchShow(!searchShow);\n  };\n  const handleRemoveTodo = async (id) => {\n    try {\n      // eslint-disable-next-line\n      const { data } = await supabase\n        .from(\"ReactTodo\")\n        .delete()\n        .match({ id: id });\n      let newToast = {\n        id: uuidv4(),\n        type: \"success\",\n        message: \"Task Deleted\",\n      };\n      setDataCount(dataCount - 1);\n      setToasts([...toasts, newToast]);\n    } catch (error) {\n      let newToast = {\n        id: uuidv4(),\n        type: \"error\",\n        message: error,\n      };\n      setToasts([...toasts, newToast]);\n    }\n    removeCompleteFromIncomplete(id);\n    if (dataCount === 1) {\n      setSearchShow(false);\n      setFlag(\"all\");\n    }\n  };\n  const removeCompleteFromIncomplete = (id) => {\n    const filtertodos = todos.filter((todo) => todo.id !== id);\n    setTodos(filtertodos);\n  };\n  return (\n    <div>\n      <AppContext.Provider\n        value={{\n          todos,\n          flag,\n          flagHandler,\n          toasts,\n          setToasts,\n          handleRemoveTodo,\n          dataCount,\n          setDataCount,\n          setShowEmpty,\n          removeCompleteFromIncomplete,\n          searchvalue,\n          SearchToggle,\n          searchShow,\n\n          search,\n          setTodos,\n          splash,\n\n          setSplash,\n\n          showEmpty,\n        }}\n      >\n        <Todos />\n        <App />\n      </AppContext.Provider>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}